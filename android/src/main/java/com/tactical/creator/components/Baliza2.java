package com.tactical.creator.components;

import android.graphics.Bitmap;
import android.graphics.Canvas;

import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Typeface;
import android.util.Log;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.tactical.creator.utis.*;
import com.facebook.react.uimanager.ThemedReactContext;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.math.BigDecimal;

public class Baliza2 {
    int[] auxColor;

    private CustomAnimation CustomAnimation = new CustomAnimation();

    public static final float WIDTH = 100.000000f;
    public static final float HEIGHT = 50.000000f;


    private boolean inited;
    private Paint paint_0;
    private Typeface typeface_0;


    private Paint paint_2;
    private Path path_0;

    private Paint paint_3;
    private Path path_1;


    private Paint paint_4;
    private Path path_2;

    private Paint paint_5;
    private Path path_3;

    private Paint paint_6;
    private Path path_4;

    private Paint paint_7;
    private Path path_5;



    private void init() {
        if (inited) return;
        inited = true;
        paint_0 = new Paint();
        typeface_0 = Typeface.create(Typeface.SANS_SERIF, 0);

        paint_2 = new Paint();
        path_0 = new Path();

        paint_3 = new Paint();
        path_1 = new Path();


        paint_4 = new Paint();
        path_2 = new Path();

        paint_5 = new Paint();
        path_3 = new Path();

        paint_6 = new Paint();
        path_4 = new Path();

        paint_7 = new Paint();
        path_5 = new Path();


    }

    public void create(ThemedReactContext context, RelativeLayout base_svg, JSONObject player, Integer screenHeight, Integer screenWidth, Integer velocity, float[] lastPosition) {
        try {

            float scale = 1;
            scale = BigDecimal.valueOf(player.getDouble("scale")).floatValue();


            int  baseSizeWidth  = 110*screenWidth/1000;
            int  baseSizeHeight = 90*screenHeight/1000;

            int realWidth = (int) (baseSizeWidth * scale);
            int realHeight = (int) (baseSizeHeight * scale);



            Bitmap b  = Bitmap.createBitmap((int) realWidth, (int) realHeight, Bitmap.Config.ARGB_8888);
            Canvas canvas = new Canvas(b);



            init();
            canvas.save();
            canvas.scale(realWidth / WIDTH, realHeight / HEIGHT);
            paint_0.reset();
            paint_0.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
            paint_0.setStyle(Paint.Style.FILL);
            paint_0.setTypeface(Typeface.DEFAULT);
            paint_0.setColor(0xff000000);
            paint_0.setTextSize(16.000000f);
            paint_0.setTypeface(typeface_0);
            paint_0.setStrikeThruText(false);
            paint_0.setUnderlineText(false);



            canvas.save();
            paint_2.reset();
            paint_2.set(paint_0);
            paint_2.setColor(0xffd0d2d3);
            path_0.reset();
            path_0.moveTo(98.189995f, 3.500000f);
            path_0.lineTo(98.060997f, 3.500000f);
            path_0.lineTo(98.060997f, 3.371000f);
            path_0.lineTo(1.939000f, 3.371000f);
            path_0.lineTo(1.939000f, 3.500000f);
            path_0.lineTo(1.810000f, 3.500000f);
            path_0.lineTo(1.810000f, 45.113003f);
            path_0.lineTo(1.939000f, 45.113003f);
            path_0.lineTo(1.939000f, 45.242004f);
            path_0.lineTo(98.061005f, 45.242004f);
            path_0.lineTo(98.061005f, 45.113003f);
            path_0.lineTo(98.190002f, 45.113003f);
            path_0.lineTo(98.190002f, 3.500000f);
            path_0.close();
            path_0.moveTo(24.955002f, 22.124001f);
            path_0.lineTo(29.274002f, 22.124001f);
            path_0.lineTo(29.274002f, 26.489000f);
            path_0.lineTo(24.955002f, 26.489000f);
            path_0.lineTo(24.955002f, 22.124001f);
            path_0.close();
            path_0.moveTo(24.696001f, 26.489000f);
            path_0.lineTo(20.377001f, 26.489000f);
            path_0.lineTo(20.377001f, 22.124001f);
            path_0.lineTo(24.696001f, 22.124001f);
            path_0.lineTo(24.696001f, 26.489000f);
            path_0.close();
            path_0.moveTo(29.532001f, 22.124001f);
            path_0.lineTo(33.851002f, 22.124001f);
            path_0.lineTo(33.851002f, 26.489000f);
            path_0.lineTo(29.532001f, 26.489000f);
            path_0.lineTo(29.532001f, 22.124001f);
            path_0.close();
            path_0.moveTo(34.109001f, 22.124001f);
            path_0.lineTo(38.428001f, 22.124001f);
            path_0.lineTo(38.428001f, 26.489000f);
            path_0.lineTo(34.109001f, 26.489000f);
            path_0.lineTo(34.109001f, 22.124001f);
            path_0.close();
            path_0.moveTo(38.686001f, 22.124001f);
            path_0.lineTo(43.005001f, 22.124001f);
            path_0.lineTo(43.005001f, 26.489000f);
            path_0.lineTo(38.686001f, 26.489000f);
            path_0.lineTo(38.686001f, 22.124001f);
            path_0.close();
            path_0.moveTo(43.263000f, 22.124001f);
            path_0.lineTo(47.582001f, 22.124001f);
            path_0.lineTo(47.582001f, 26.489000f);
            path_0.lineTo(43.263000f, 26.489000f);
            path_0.lineTo(43.263000f, 22.124001f);
            path_0.close();
            path_0.moveTo(47.841003f, 22.124001f);
            path_0.lineTo(52.160004f, 22.124001f);
            path_0.lineTo(52.160004f, 26.489000f);
            path_0.lineTo(47.841003f, 26.489000f);
            path_0.lineTo(47.841003f, 22.124001f);
            path_0.close();
            path_0.moveTo(52.418003f, 22.124001f);
            path_0.lineTo(56.737003f, 22.124001f);
            path_0.lineTo(56.737003f, 26.489000f);
            path_0.lineTo(52.418003f, 26.489000f);
            path_0.lineTo(52.418003f, 22.124001f);
            path_0.close();
            path_0.moveTo(56.995003f, 22.124001f);
            path_0.lineTo(61.314003f, 22.124001f);
            path_0.lineTo(61.314003f, 26.489000f);
            path_0.lineTo(56.995003f, 26.489000f);
            path_0.lineTo(56.995003f, 22.124001f);
            path_0.close();
            path_0.moveTo(61.572002f, 22.124001f);
            path_0.lineTo(65.891006f, 22.124001f);
            path_0.lineTo(65.891006f, 26.489000f);
            path_0.lineTo(61.572006f, 26.489000f);
            path_0.lineTo(61.572006f, 22.124001f);
            path_0.close();
            path_0.moveTo(66.150002f, 22.124001f);
            path_0.lineTo(70.469002f, 22.124001f);
            path_0.lineTo(70.469002f, 26.489000f);
            path_0.lineTo(66.150002f, 26.489000f);
            path_0.lineTo(66.150002f, 22.124001f);
            path_0.close();
            path_0.moveTo(70.727005f, 22.124001f);
            path_0.lineTo(75.046005f, 22.124001f);
            path_0.lineTo(75.046005f, 26.489000f);
            path_0.lineTo(70.727005f, 26.489000f);
            path_0.lineTo(70.727005f, 22.124001f);
            path_0.close();
            path_0.moveTo(75.304001f, 22.124001f);
            path_0.lineTo(79.623001f, 22.124001f);
            path_0.lineTo(79.623001f, 26.489000f);
            path_0.lineTo(75.304001f, 26.489000f);
            path_0.lineTo(75.304001f, 22.124001f);
            path_0.close();
            path_0.moveTo(75.304001f, 21.866001f);
            path_0.lineTo(75.304001f, 17.500000f);
            path_0.lineTo(79.623001f, 17.500000f);
            path_0.lineTo(79.623001f, 21.865000f);
            path_0.lineTo(75.304001f, 21.865000f);
            path_0.close();
            path_0.moveTo(75.045006f, 21.866001f);
            path_0.lineTo(70.726006f, 21.866001f);
            path_0.lineTo(70.726006f, 17.500000f);
            path_0.lineTo(75.045006f, 17.500000f);
            path_0.lineTo(75.045006f, 21.866001f);
            path_0.close();
            path_0.moveTo(70.468002f, 21.866001f);
            path_0.lineTo(66.150002f, 21.866001f);
            path_0.lineTo(66.150002f, 17.500000f);
            path_0.lineTo(70.469002f, 17.500000f);
            path_0.lineTo(70.469002f, 21.866001f);
            path_0.close();
            path_0.moveTo(65.891006f, 21.866001f);
            path_0.lineTo(61.572006f, 21.866001f);
            path_0.lineTo(61.572006f, 17.500000f);
            path_0.lineTo(65.891006f, 17.500000f);
            path_0.lineTo(65.891006f, 21.866001f);
            path_0.close();
            path_0.moveTo(61.314003f, 21.866001f);
            path_0.lineTo(56.995003f, 21.866001f);
            path_0.lineTo(56.995003f, 17.500000f);
            path_0.lineTo(61.314003f, 17.500000f);
            path_0.lineTo(61.314003f, 21.866001f);
            path_0.close();
            path_0.moveTo(56.737003f, 21.866001f);
            path_0.lineTo(52.418003f, 21.866001f);
            path_0.lineTo(52.418003f, 17.500000f);
            path_0.lineTo(56.737003f, 17.500000f);
            path_0.lineTo(56.737003f, 21.866001f);
            path_0.close();
            path_0.moveTo(52.159004f, 21.866001f);
            path_0.lineTo(47.840004f, 21.866001f);
            path_0.lineTo(47.840004f, 17.500000f);
            path_0.lineTo(52.159004f, 17.500000f);
            path_0.lineTo(52.159004f, 21.866001f);
            path_0.close();
            path_0.moveTo(47.582001f, 21.866001f);
            path_0.lineTo(43.263000f, 21.866001f);
            path_0.lineTo(43.263000f, 17.500000f);
            path_0.lineTo(47.582001f, 17.500000f);
            path_0.lineTo(47.582001f, 21.866001f);
            path_0.close();
            path_0.moveTo(43.005001f, 21.866001f);
            path_0.lineTo(38.686001f, 21.866001f);
            path_0.lineTo(38.686001f, 17.500000f);
            path_0.lineTo(43.005001f, 17.500000f);
            path_0.lineTo(43.005001f, 21.866001f);
            path_0.close();
            path_0.moveTo(38.428001f, 21.866001f);
            path_0.lineTo(34.109001f, 21.866001f);
            path_0.lineTo(34.109001f, 17.500000f);
            path_0.lineTo(38.428001f, 17.500000f);
            path_0.lineTo(38.428001f, 21.866001f);
            path_0.close();
            path_0.moveTo(33.849998f, 21.866001f);
            path_0.lineTo(29.530998f, 21.866001f);
            path_0.lineTo(29.530998f, 17.500000f);
            path_0.lineTo(33.849998f, 17.500000f);
            path_0.lineTo(33.849998f, 21.866001f);
            path_0.close();
            path_0.moveTo(29.273001f, 21.866001f);
            path_0.lineTo(24.954000f, 21.866001f);
            path_0.lineTo(24.954000f, 17.500000f);
            path_0.lineTo(29.273001f, 17.500000f);
            path_0.lineTo(29.273001f, 21.866001f);
            path_0.close();
            path_0.moveTo(24.696001f, 21.866001f);
            path_0.lineTo(20.377001f, 21.866001f);
            path_0.lineTo(20.377001f, 17.500000f);
            path_0.lineTo(24.696001f, 17.500000f);
            path_0.lineTo(24.696001f, 21.866001f);
            path_0.close();
            path_0.moveTo(20.119001f, 21.866001f);
            path_0.lineTo(15.800000f, 21.866001f);
            path_0.lineTo(15.800000f, 17.500000f);
            path_0.lineTo(20.118999f, 17.500000f);
            path_0.lineTo(20.118999f, 21.866001f);
            path_0.close();
            path_0.moveTo(20.119001f, 22.124001f);
            path_0.lineTo(20.119001f, 26.489000f);
            path_0.lineTo(15.800000f, 26.489000f);
            path_0.lineTo(15.800000f, 22.124001f);
            path_0.lineTo(20.119001f, 22.124001f);
            path_0.close();
            path_0.moveTo(20.119001f, 26.748001f);
            path_0.lineTo(20.119001f, 31.113001f);
            path_0.lineTo(15.800000f, 31.113001f);
            path_0.lineTo(15.800000f, 26.748001f);
            path_0.lineTo(20.119001f, 26.748001f);
            path_0.close();
            path_0.moveTo(20.377001f, 26.748001f);
            path_0.lineTo(24.696001f, 26.748001f);
            path_0.lineTo(24.696001f, 31.113001f);
            path_0.lineTo(20.377001f, 31.113001f);
            path_0.lineTo(20.377001f, 26.748001f);
            path_0.close();
            path_0.moveTo(24.955002f, 26.748001f);
            path_0.lineTo(29.274002f, 26.748001f);
            path_0.lineTo(29.274002f, 31.113001f);
            path_0.lineTo(24.955002f, 31.113001f);
            path_0.lineTo(24.955002f, 26.748001f);
            path_0.close();
            path_0.moveTo(29.532001f, 26.748001f);
            path_0.lineTo(33.851002f, 26.748001f);
            path_0.lineTo(33.851002f, 31.113001f);
            path_0.lineTo(29.532001f, 31.113001f);
            path_0.lineTo(29.532001f, 26.748001f);
            path_0.close();
            path_0.moveTo(34.109001f, 26.748001f);
            path_0.lineTo(38.428001f, 26.748001f);
            path_0.lineTo(38.428001f, 31.113001f);
            path_0.lineTo(34.109001f, 31.113001f);
            path_0.lineTo(34.109001f, 26.748001f);
            path_0.close();
            path_0.moveTo(38.686001f, 26.748001f);
            path_0.lineTo(43.005001f, 26.748001f);
            path_0.lineTo(43.005001f, 31.113001f);
            path_0.lineTo(38.686001f, 31.113001f);
            path_0.lineTo(38.686001f, 26.748001f);
            path_0.close();
            path_0.moveTo(43.263000f, 26.748001f);
            path_0.lineTo(47.582001f, 26.748001f);
            path_0.lineTo(47.582001f, 31.113001f);
            path_0.lineTo(43.263000f, 31.113001f);
            path_0.lineTo(43.263000f, 26.748001f);
            path_0.close();
            path_0.moveTo(47.841003f, 26.748001f);
            path_0.lineTo(52.160004f, 26.748001f);
            path_0.lineTo(52.160004f, 31.113001f);
            path_0.lineTo(47.841003f, 31.113001f);
            path_0.lineTo(47.841003f, 26.748001f);
            path_0.close();
            path_0.moveTo(52.418003f, 26.748001f);
            path_0.lineTo(56.737003f, 26.748001f);
            path_0.lineTo(56.737003f, 31.113001f);
            path_0.lineTo(52.418003f, 31.113001f);
            path_0.lineTo(52.418003f, 26.748001f);
            path_0.close();
            path_0.moveTo(56.995003f, 26.748001f);
            path_0.lineTo(61.314003f, 26.748001f);
            path_0.lineTo(61.314003f, 31.113001f);
            path_0.lineTo(56.995003f, 31.113001f);
            path_0.lineTo(56.995003f, 26.748001f);
            path_0.close();
            path_0.moveTo(61.572002f, 26.748001f);
            path_0.lineTo(65.891006f, 26.748001f);
            path_0.lineTo(65.891006f, 31.113001f);
            path_0.lineTo(61.572006f, 31.113001f);
            path_0.lineTo(61.572006f, 26.748001f);
            path_0.close();
            path_0.moveTo(66.150002f, 26.748001f);
            path_0.lineTo(70.469002f, 26.748001f);
            path_0.lineTo(70.469002f, 31.113001f);
            path_0.lineTo(66.150002f, 31.113001f);
            path_0.lineTo(66.150002f, 26.748001f);
            path_0.close();
            path_0.moveTo(70.727005f, 26.748001f);
            path_0.lineTo(75.046005f, 26.748001f);
            path_0.lineTo(75.046005f, 31.113001f);
            path_0.lineTo(70.727005f, 31.113001f);
            path_0.lineTo(70.727005f, 26.748001f);
            path_0.close();
            path_0.moveTo(75.304001f, 26.748001f);
            path_0.lineTo(79.623001f, 26.748001f);
            path_0.lineTo(79.623001f, 31.113001f);
            path_0.lineTo(75.304001f, 31.113001f);
            path_0.lineTo(75.304001f, 26.748001f);
            path_0.close();
            path_0.moveTo(79.881004f, 26.748001f);
            path_0.lineTo(84.200005f, 26.748001f);
            path_0.lineTo(84.200005f, 31.113001f);
            path_0.lineTo(79.881004f, 31.113001f);
            path_0.lineTo(79.881004f, 26.748001f);
            path_0.close();
            path_0.moveTo(79.881004f, 26.489000f);
            path_0.lineTo(79.881004f, 22.124001f);
            path_0.lineTo(84.200005f, 22.124001f);
            path_0.lineTo(84.200005f, 26.489000f);
            path_0.lineTo(79.881004f, 26.489000f);
            path_0.close();
            path_0.moveTo(79.881004f, 21.866001f);
            path_0.lineTo(79.881004f, 17.500000f);
            path_0.lineTo(84.200005f, 17.500000f);
            path_0.lineTo(84.200005f, 21.865000f);
            path_0.lineTo(79.881004f, 21.865000f);
            path_0.close();
            path_0.moveTo(79.881004f, 17.242001f);
            path_0.lineTo(79.881004f, 12.877001f);
            path_0.lineTo(84.200005f, 12.877001f);
            path_0.lineTo(84.200005f, 17.242001f);
            path_0.lineTo(79.881004f, 17.242001f);
            path_0.close();
            path_0.moveTo(79.623001f, 17.242001f);
            path_0.lineTo(75.304001f, 17.242001f);
            path_0.lineTo(75.304001f, 12.877001f);
            path_0.lineTo(79.623001f, 12.877001f);
            path_0.lineTo(79.623001f, 17.242001f);
            path_0.close();
            path_0.moveTo(75.045006f, 17.242001f);
            path_0.lineTo(70.726006f, 17.242001f);
            path_0.lineTo(70.726006f, 12.877001f);
            path_0.lineTo(75.045006f, 12.877001f);
            path_0.lineTo(75.045006f, 17.242001f);
            path_0.close();
            path_0.moveTo(70.468002f, 17.242001f);
            path_0.lineTo(66.150002f, 17.242001f);
            path_0.lineTo(66.150002f, 12.877001f);
            path_0.lineTo(70.469002f, 12.877001f);
            path_0.lineTo(70.469002f, 17.242001f);
            path_0.close();
            path_0.moveTo(65.891006f, 17.242001f);
            path_0.lineTo(61.572006f, 17.242001f);
            path_0.lineTo(61.572006f, 12.877001f);
            path_0.lineTo(65.891006f, 12.877001f);
            path_0.lineTo(65.891006f, 17.242001f);
            path_0.close();
            path_0.moveTo(61.314003f, 17.242001f);
            path_0.lineTo(56.995003f, 17.242001f);
            path_0.lineTo(56.995003f, 12.877001f);
            path_0.lineTo(61.314003f, 12.877001f);
            path_0.lineTo(61.314003f, 17.242001f);
            path_0.close();
            path_0.moveTo(56.737003f, 17.242001f);
            path_0.lineTo(52.418003f, 17.242001f);
            path_0.lineTo(52.418003f, 12.877001f);
            path_0.lineTo(56.737003f, 12.877001f);
            path_0.lineTo(56.737003f, 17.242001f);
            path_0.close();
            path_0.moveTo(52.159004f, 17.242001f);
            path_0.lineTo(47.840004f, 17.242001f);
            path_0.lineTo(47.840004f, 12.877001f);
            path_0.lineTo(52.159004f, 12.877001f);
            path_0.lineTo(52.159004f, 17.242001f);
            path_0.close();
            path_0.moveTo(47.582001f, 17.242001f);
            path_0.lineTo(43.263000f, 17.242001f);
            path_0.lineTo(43.263000f, 12.877001f);
            path_0.lineTo(47.582001f, 12.877001f);
            path_0.lineTo(47.582001f, 17.242001f);
            path_0.close();
            path_0.moveTo(43.005001f, 17.242001f);
            path_0.lineTo(38.686001f, 17.242001f);
            path_0.lineTo(38.686001f, 12.877001f);
            path_0.lineTo(43.005001f, 12.877001f);
            path_0.lineTo(43.005001f, 17.242001f);
            path_0.close();
            path_0.moveTo(38.428001f, 17.242001f);
            path_0.lineTo(34.109001f, 17.242001f);
            path_0.lineTo(34.109001f, 12.877001f);
            path_0.lineTo(38.428001f, 12.877001f);
            path_0.lineTo(38.428001f, 17.242001f);
            path_0.close();
            path_0.moveTo(33.849998f, 17.242001f);
            path_0.lineTo(29.530998f, 17.242001f);
            path_0.lineTo(29.530998f, 12.877001f);
            path_0.lineTo(33.849998f, 12.877001f);
            path_0.lineTo(33.849998f, 17.242001f);
            path_0.close();
            path_0.moveTo(29.273001f, 17.242001f);
            path_0.lineTo(24.954000f, 17.242001f);
            path_0.lineTo(24.954000f, 12.877001f);
            path_0.lineTo(29.273001f, 12.877001f);
            path_0.lineTo(29.273001f, 17.242001f);
            path_0.close();
            path_0.moveTo(24.696001f, 17.242001f);
            path_0.lineTo(20.377001f, 17.242001f);
            path_0.lineTo(20.377001f, 12.877001f);
            path_0.lineTo(24.696001f, 12.877001f);
            path_0.lineTo(24.696001f, 17.242001f);
            path_0.close();
            path_0.moveTo(20.119001f, 17.242001f);
            path_0.lineTo(15.800000f, 17.242001f);
            path_0.lineTo(15.800000f, 12.877001f);
            path_0.lineTo(20.118999f, 12.877001f);
            path_0.lineTo(20.118999f, 17.242001f);
            path_0.close();
            path_0.moveTo(15.542001f, 17.242001f);
            path_0.lineTo(11.223001f, 17.242001f);
            path_0.lineTo(11.223001f, 12.877001f);
            path_0.lineTo(15.542001f, 12.877001f);
            path_0.lineTo(15.542001f, 17.242001f);
            path_0.close();
            path_0.moveTo(15.542001f, 17.500000f);
            path_0.lineTo(15.542001f, 21.865000f);
            path_0.lineTo(11.223001f, 21.865000f);
            path_0.lineTo(11.223001f, 17.500000f);
            path_0.lineTo(15.542001f, 17.500000f);
            path_0.close();
            path_0.moveTo(15.542001f, 22.124001f);
            path_0.lineTo(15.542001f, 26.489000f);
            path_0.lineTo(11.223001f, 26.489000f);
            path_0.lineTo(11.223001f, 22.124001f);
            path_0.lineTo(15.542001f, 22.124001f);
            path_0.close();
            path_0.moveTo(15.542001f, 26.748001f);
            path_0.lineTo(15.542001f, 31.113001f);
            path_0.lineTo(11.223001f, 31.113001f);
            path_0.lineTo(11.223001f, 26.748001f);
            path_0.lineTo(15.542001f, 26.748001f);
            path_0.close();
            path_0.moveTo(15.542001f, 31.371002f);
            path_0.lineTo(15.542001f, 35.736004f);
            path_0.lineTo(11.223001f, 35.736004f);
            path_0.lineTo(11.223001f, 31.371004f);
            path_0.lineTo(15.542001f, 31.371004f);
            path_0.close();
            path_0.moveTo(15.800000f, 31.371002f);
            path_0.lineTo(20.118999f, 31.371002f);
            path_0.lineTo(20.118999f, 35.736004f);
            path_0.lineTo(15.800000f, 35.736004f);
            path_0.lineTo(15.800000f, 31.371002f);
            path_0.close();
            path_0.moveTo(20.377001f, 31.371002f);
            path_0.lineTo(24.696001f, 31.371002f);
            path_0.lineTo(24.696001f, 35.736004f);
            path_0.lineTo(20.377001f, 35.736004f);
            path_0.lineTo(20.377001f, 31.371002f);
            path_0.close();
            path_0.moveTo(24.955002f, 31.371002f);
            path_0.lineTo(29.274002f, 31.371002f);
            path_0.lineTo(29.274002f, 35.736004f);
            path_0.lineTo(24.955002f, 35.736004f);
            path_0.lineTo(24.955002f, 31.371002f);
            path_0.close();
            path_0.moveTo(29.532001f, 31.371002f);
            path_0.lineTo(33.851002f, 31.371002f);
            path_0.lineTo(33.851002f, 35.736004f);
            path_0.lineTo(29.532001f, 35.736004f);
            path_0.lineTo(29.532001f, 31.371002f);
            path_0.close();
            path_0.moveTo(34.109001f, 31.371002f);
            path_0.lineTo(38.428001f, 31.371002f);
            path_0.lineTo(38.428001f, 35.736004f);
            path_0.lineTo(34.109001f, 35.736004f);
            path_0.lineTo(34.109001f, 31.371002f);
            path_0.close();
            path_0.moveTo(38.686001f, 31.371002f);
            path_0.lineTo(43.005001f, 31.371002f);
            path_0.lineTo(43.005001f, 35.736004f);
            path_0.lineTo(38.686001f, 35.736004f);
            path_0.lineTo(38.686001f, 31.371002f);
            path_0.close();
            path_0.moveTo(43.263000f, 31.371002f);
            path_0.lineTo(47.582001f, 31.371002f);
            path_0.lineTo(47.582001f, 35.736004f);
            path_0.lineTo(43.263000f, 35.736004f);
            path_0.lineTo(43.263000f, 31.371002f);
            path_0.close();
            path_0.moveTo(47.841003f, 31.371002f);
            path_0.lineTo(52.160004f, 31.371002f);
            path_0.lineTo(52.160004f, 35.736004f);
            path_0.lineTo(47.841003f, 35.736004f);
            path_0.lineTo(47.841003f, 31.371002f);
            path_0.close();
            path_0.moveTo(52.418003f, 31.371002f);
            path_0.lineTo(56.737003f, 31.371002f);
            path_0.lineTo(56.737003f, 35.736004f);
            path_0.lineTo(52.418003f, 35.736004f);
            path_0.lineTo(52.418003f, 31.371002f);
            path_0.close();
            path_0.moveTo(56.995003f, 31.371002f);
            path_0.lineTo(61.314003f, 31.371002f);
            path_0.lineTo(61.314003f, 35.736004f);
            path_0.lineTo(56.995003f, 35.736004f);
            path_0.lineTo(56.995003f, 31.371002f);
            path_0.close();
            path_0.moveTo(61.572002f, 31.371002f);
            path_0.lineTo(65.891006f, 31.371002f);
            path_0.lineTo(65.891006f, 35.736004f);
            path_0.lineTo(61.572006f, 35.736004f);
            path_0.lineTo(61.572006f, 31.371002f);
            path_0.close();
            path_0.moveTo(66.150002f, 31.371002f);
            path_0.lineTo(70.469002f, 31.371002f);
            path_0.lineTo(70.469002f, 35.736004f);
            path_0.lineTo(66.150002f, 35.736004f);
            path_0.lineTo(66.150002f, 31.371002f);
            path_0.close();
            path_0.moveTo(70.727005f, 31.371002f);
            path_0.lineTo(75.046005f, 31.371002f);
            path_0.lineTo(75.046005f, 35.736004f);
            path_0.lineTo(70.727005f, 35.736004f);
            path_0.lineTo(70.727005f, 31.371002f);
            path_0.close();
            path_0.moveTo(75.304001f, 31.371002f);
            path_0.lineTo(79.623001f, 31.371002f);
            path_0.lineTo(79.623001f, 35.736004f);
            path_0.lineTo(75.304001f, 35.736004f);
            path_0.lineTo(75.304001f, 31.371002f);
            path_0.close();
            path_0.moveTo(79.881004f, 31.371002f);
            path_0.lineTo(84.200005f, 31.371002f);
            path_0.lineTo(84.200005f, 35.736004f);
            path_0.lineTo(79.881004f, 35.736004f);
            path_0.lineTo(79.881004f, 31.371002f);
            path_0.close();
            path_0.moveTo(84.458008f, 31.371002f);
            path_0.lineTo(88.777008f, 31.371002f);
            path_0.lineTo(88.777008f, 35.736004f);
            path_0.lineTo(84.458008f, 35.736004f);
            path_0.lineTo(84.458008f, 31.371002f);
            path_0.close();
            path_0.moveTo(84.458008f, 31.113001f);
            path_0.lineTo(84.458008f, 26.748001f);
            path_0.lineTo(88.777008f, 26.748001f);
            path_0.lineTo(88.777008f, 31.113001f);
            path_0.lineTo(84.458008f, 31.113001f);
            path_0.close();
            path_0.moveTo(84.458008f, 26.489000f);
            path_0.lineTo(84.458008f, 22.124001f);
            path_0.lineTo(88.777008f, 22.124001f);
            path_0.lineTo(88.777008f, 26.489000f);
            path_0.lineTo(84.458008f, 26.489000f);
            path_0.close();
            path_0.moveTo(84.458008f, 21.866001f);
            path_0.lineTo(84.458008f, 17.500000f);
            path_0.lineTo(88.777008f, 17.500000f);
            path_0.lineTo(88.777008f, 21.865000f);
            path_0.lineTo(84.458008f, 21.865000f);
            path_0.close();
            path_0.moveTo(84.458008f, 17.242001f);
            path_0.lineTo(84.458008f, 12.877001f);
            path_0.lineTo(88.777008f, 12.877001f);
            path_0.lineTo(88.777008f, 17.242001f);
            path_0.lineTo(84.458008f, 17.242001f);
            path_0.close();
            path_0.moveTo(84.458008f, 12.618001f);
            path_0.lineTo(84.458008f, 8.253000f);
            path_0.lineTo(88.777008f, 8.253000f);
            path_0.lineTo(88.777008f, 12.618000f);
            path_0.lineTo(84.458008f, 12.618000f);
            path_0.close();
            path_0.moveTo(84.200005f, 12.618001f);
            path_0.lineTo(79.881004f, 12.618001f);
            path_0.lineTo(79.881004f, 8.253000f);
            path_0.lineTo(84.200005f, 8.253000f);
            path_0.lineTo(84.200005f, 12.618001f);
            path_0.close();
            path_0.moveTo(79.623001f, 12.618001f);
            path_0.lineTo(75.304001f, 12.618001f);
            path_0.lineTo(75.304001f, 8.253000f);
            path_0.lineTo(79.623001f, 8.253000f);
            path_0.lineTo(79.623001f, 12.618001f);
            path_0.close();
            path_0.moveTo(75.045006f, 12.618001f);
            path_0.lineTo(70.726006f, 12.618001f);
            path_0.lineTo(70.726006f, 8.253000f);
            path_0.lineTo(75.045006f, 8.253000f);
            path_0.lineTo(75.045006f, 12.618001f);
            path_0.close();
            path_0.moveTo(70.468002f, 12.618001f);
            path_0.lineTo(66.150002f, 12.618001f);
            path_0.lineTo(66.150002f, 8.253000f);
            path_0.lineTo(70.469002f, 8.253000f);
            path_0.lineTo(70.469002f, 12.618001f);
            path_0.close();
            path_0.moveTo(65.891006f, 12.618001f);
            path_0.lineTo(61.572006f, 12.618001f);
            path_0.lineTo(61.572006f, 8.253000f);
            path_0.lineTo(65.891006f, 8.253000f);
            path_0.lineTo(65.891006f, 12.618001f);
            path_0.close();
            path_0.moveTo(61.314003f, 12.618001f);
            path_0.lineTo(56.995003f, 12.618001f);
            path_0.lineTo(56.995003f, 8.253000f);
            path_0.lineTo(61.314003f, 8.253000f);
            path_0.lineTo(61.314003f, 12.618001f);
            path_0.close();
            path_0.moveTo(56.737003f, 12.618001f);
            path_0.lineTo(52.418003f, 12.618001f);
            path_0.lineTo(52.418003f, 8.253000f);
            path_0.lineTo(56.737003f, 8.253000f);
            path_0.lineTo(56.737003f, 12.618001f);
            path_0.close();
            path_0.moveTo(52.159004f, 12.618001f);
            path_0.lineTo(47.840004f, 12.618001f);
            path_0.lineTo(47.840004f, 8.253000f);
            path_0.lineTo(52.159004f, 8.253000f);
            path_0.lineTo(52.159004f, 12.618001f);
            path_0.close();
            path_0.moveTo(47.582001f, 12.618001f);
            path_0.lineTo(43.263000f, 12.618001f);
            path_0.lineTo(43.263000f, 8.253000f);
            path_0.lineTo(47.582001f, 8.253000f);
            path_0.lineTo(47.582001f, 12.618001f);
            path_0.close();
            path_0.moveTo(43.005001f, 12.618001f);
            path_0.lineTo(38.686001f, 12.618001f);
            path_0.lineTo(38.686001f, 8.253000f);
            path_0.lineTo(43.005001f, 8.253000f);
            path_0.lineTo(43.005001f, 12.618001f);
            path_0.close();
            path_0.moveTo(38.428001f, 12.618001f);
            path_0.lineTo(34.109001f, 12.618001f);
            path_0.lineTo(34.109001f, 8.253000f);
            path_0.lineTo(38.428001f, 8.253000f);
            path_0.lineTo(38.428001f, 12.618001f);
            path_0.close();
            path_0.moveTo(33.849998f, 12.618001f);
            path_0.lineTo(29.530998f, 12.618001f);
            path_0.lineTo(29.530998f, 8.253000f);
            path_0.lineTo(33.849998f, 8.253000f);
            path_0.lineTo(33.849998f, 12.618001f);
            path_0.close();
            path_0.moveTo(29.273001f, 12.618001f);
            path_0.lineTo(24.954000f, 12.618001f);
            path_0.lineTo(24.954000f, 8.253000f);
            path_0.lineTo(29.273001f, 8.253000f);
            path_0.lineTo(29.273001f, 12.618001f);
            path_0.close();
            path_0.moveTo(24.696001f, 12.618001f);
            path_0.lineTo(20.377001f, 12.618001f);
            path_0.lineTo(20.377001f, 8.253000f);
            path_0.lineTo(24.696001f, 8.253000f);
            path_0.lineTo(24.696001f, 12.618001f);
            path_0.close();
            path_0.moveTo(20.119001f, 12.618001f);
            path_0.lineTo(15.800000f, 12.618001f);
            path_0.lineTo(15.800000f, 8.253000f);
            path_0.lineTo(20.118999f, 8.253000f);
            path_0.lineTo(20.118999f, 12.618001f);
            path_0.close();
            path_0.moveTo(15.542001f, 12.618001f);
            path_0.lineTo(11.223001f, 12.618001f);
            path_0.lineTo(11.223001f, 8.253000f);
            path_0.lineTo(15.542001f, 8.253000f);
            path_0.lineTo(15.542001f, 12.618001f);
            path_0.close();
            path_0.moveTo(10.964001f, 12.618001f);
            path_0.lineTo(6.646000f, 12.618001f);
            path_0.lineTo(6.646000f, 8.253000f);
            path_0.lineTo(10.965000f, 8.253000f);
            path_0.lineTo(10.965000f, 12.618001f);
            path_0.close();
            path_0.moveTo(10.964001f, 12.877001f);
            path_0.lineTo(10.964001f, 17.242001f);
            path_0.lineTo(6.646000f, 17.242001f);
            path_0.lineTo(6.646000f, 12.877001f);
            path_0.lineTo(10.964001f, 12.877001f);
            path_0.close();
            path_0.moveTo(10.964001f, 17.500000f);
            path_0.lineTo(10.964001f, 21.865000f);
            path_0.lineTo(6.646000f, 21.865000f);
            path_0.lineTo(6.646000f, 17.500000f);
            path_0.lineTo(10.964001f, 17.500000f);
            path_0.close();
            path_0.moveTo(10.964001f, 22.124001f);
            path_0.lineTo(10.964001f, 26.489000f);
            path_0.lineTo(6.646000f, 26.489000f);
            path_0.lineTo(6.646000f, 22.124001f);
            path_0.lineTo(10.964001f, 22.124001f);
            path_0.close();
            path_0.moveTo(10.964001f, 26.748001f);
            path_0.lineTo(10.964001f, 31.113001f);
            path_0.lineTo(6.646000f, 31.113001f);
            path_0.lineTo(6.646000f, 26.748001f);
            path_0.lineTo(10.964001f, 26.748001f);
            path_0.close();
            path_0.moveTo(10.964001f, 31.371002f);
            path_0.lineTo(10.964001f, 35.736004f);
            path_0.lineTo(6.646000f, 35.736004f);
            path_0.lineTo(6.646000f, 31.371004f);
            path_0.lineTo(10.964001f, 31.371004f);
            path_0.close();
            path_0.moveTo(10.964001f, 35.995003f);
            path_0.lineTo(10.964001f, 40.360004f);
            path_0.lineTo(6.646000f, 40.360004f);
            path_0.lineTo(6.646000f, 35.995003f);
            path_0.lineTo(10.964001f, 35.995003f);
            path_0.close();
            path_0.moveTo(11.223001f, 35.995003f);
            path_0.lineTo(15.542001f, 35.995003f);
            path_0.lineTo(15.542001f, 40.360004f);
            path_0.lineTo(11.223001f, 40.360004f);
            path_0.lineTo(11.223001f, 35.995003f);
            path_0.close();
            path_0.moveTo(15.800000f, 35.995003f);
            path_0.lineTo(20.118999f, 35.995003f);
            path_0.lineTo(20.118999f, 40.360004f);
            path_0.lineTo(15.800000f, 40.360004f);
            path_0.lineTo(15.800000f, 35.995003f);
            path_0.close();
            path_0.moveTo(20.377001f, 35.995003f);
            path_0.lineTo(24.696001f, 35.995003f);
            path_0.lineTo(24.696001f, 40.360004f);
            path_0.lineTo(20.377001f, 40.360004f);
            path_0.lineTo(20.377001f, 35.995003f);
            path_0.close();
            path_0.moveTo(24.955002f, 35.995003f);
            path_0.lineTo(29.274002f, 35.995003f);
            path_0.lineTo(29.274002f, 40.360004f);
            path_0.lineTo(24.955002f, 40.360004f);
            path_0.lineTo(24.955002f, 35.995003f);
            path_0.close();
            path_0.moveTo(29.532001f, 35.995003f);
            path_0.lineTo(33.851002f, 35.995003f);
            path_0.lineTo(33.851002f, 40.360004f);
            path_0.lineTo(29.532001f, 40.360004f);
            path_0.lineTo(29.532001f, 35.995003f);
            path_0.close();
            path_0.moveTo(34.109001f, 35.995003f);
            path_0.lineTo(38.428001f, 35.995003f);
            path_0.lineTo(38.428001f, 40.360004f);
            path_0.lineTo(34.109001f, 40.360004f);
            path_0.lineTo(34.109001f, 35.995003f);
            path_0.close();
            path_0.moveTo(38.686001f, 35.995003f);
            path_0.lineTo(43.005001f, 35.995003f);
            path_0.lineTo(43.005001f, 40.360004f);
            path_0.lineTo(38.686001f, 40.360004f);
            path_0.lineTo(38.686001f, 35.995003f);
            path_0.close();
            path_0.moveTo(43.263000f, 35.995003f);
            path_0.lineTo(47.582001f, 35.995003f);
            path_0.lineTo(47.582001f, 40.360004f);
            path_0.lineTo(43.263000f, 40.360004f);
            path_0.lineTo(43.263000f, 35.995003f);
            path_0.close();
            path_0.moveTo(47.841003f, 35.995003f);
            path_0.lineTo(52.160004f, 35.995003f);
            path_0.lineTo(52.160004f, 40.360004f);
            path_0.lineTo(47.841003f, 40.360004f);
            path_0.lineTo(47.841003f, 35.995003f);
            path_0.close();
            path_0.moveTo(52.418003f, 35.995003f);
            path_0.lineTo(56.737003f, 35.995003f);
            path_0.lineTo(56.737003f, 40.360004f);
            path_0.lineTo(52.418003f, 40.360004f);
            path_0.lineTo(52.418003f, 35.995003f);
            path_0.close();
            path_0.moveTo(56.995003f, 35.995003f);
            path_0.lineTo(61.314003f, 35.995003f);
            path_0.lineTo(61.314003f, 40.360004f);
            path_0.lineTo(56.995003f, 40.360004f);
            path_0.lineTo(56.995003f, 35.995003f);
            path_0.close();
            path_0.moveTo(61.572002f, 35.995003f);
            path_0.lineTo(65.891006f, 35.995003f);
            path_0.lineTo(65.891006f, 40.360004f);
            path_0.lineTo(61.572006f, 40.360004f);
            path_0.lineTo(61.572006f, 35.995003f);
            path_0.close();
            path_0.moveTo(66.150002f, 35.995003f);
            path_0.lineTo(70.469002f, 35.995003f);
            path_0.lineTo(70.469002f, 40.360004f);
            path_0.lineTo(66.150002f, 40.360004f);
            path_0.lineTo(66.150002f, 35.995003f);
            path_0.close();
            path_0.moveTo(70.727005f, 35.995003f);
            path_0.lineTo(75.046005f, 35.995003f);
            path_0.lineTo(75.046005f, 40.360004f);
            path_0.lineTo(70.727005f, 40.360004f);
            path_0.lineTo(70.727005f, 35.995003f);
            path_0.close();
            path_0.moveTo(75.304001f, 35.995003f);
            path_0.lineTo(79.623001f, 35.995003f);
            path_0.lineTo(79.623001f, 40.360004f);
            path_0.lineTo(75.304001f, 40.360004f);
            path_0.lineTo(75.304001f, 35.995003f);
            path_0.close();
            path_0.moveTo(79.881004f, 35.995003f);
            path_0.lineTo(84.200005f, 35.995003f);
            path_0.lineTo(84.200005f, 40.360004f);
            path_0.lineTo(79.881004f, 40.360004f);
            path_0.lineTo(79.881004f, 35.995003f);
            path_0.close();
            path_0.moveTo(84.458008f, 35.995003f);
            path_0.lineTo(88.777008f, 35.995003f);
            path_0.lineTo(88.777008f, 40.360004f);
            path_0.lineTo(84.458008f, 40.360004f);
            path_0.lineTo(84.458008f, 35.995003f);
            path_0.close();
            path_0.moveTo(89.036003f, 35.995003f);
            path_0.lineTo(93.355003f, 35.995003f);
            path_0.lineTo(93.355003f, 40.360004f);
            path_0.lineTo(89.036003f, 40.360004f);
            path_0.lineTo(89.036003f, 35.995003f);
            path_0.close();
            path_0.moveTo(89.036003f, 35.736000f);
            path_0.lineTo(89.036003f, 31.371000f);
            path_0.lineTo(93.355003f, 31.371000f);
            path_0.lineTo(93.355003f, 35.736000f);
            path_0.lineTo(89.036003f, 35.736000f);
            path_0.close();
            path_0.moveTo(89.036003f, 31.113001f);
            path_0.lineTo(89.036003f, 26.748001f);
            path_0.lineTo(93.355003f, 26.748001f);
            path_0.lineTo(93.355003f, 31.113001f);
            path_0.lineTo(89.036003f, 31.113001f);
            path_0.close();
            path_0.moveTo(89.036003f, 26.489000f);
            path_0.lineTo(89.036003f, 22.124001f);
            path_0.lineTo(93.355003f, 22.124001f);
            path_0.lineTo(93.355003f, 26.489000f);
            path_0.lineTo(89.036003f, 26.489000f);
            path_0.close();
            path_0.moveTo(89.036003f, 21.866001f);
            path_0.lineTo(89.036003f, 17.500000f);
            path_0.lineTo(93.355003f, 17.500000f);
            path_0.lineTo(93.355003f, 21.865000f);
            path_0.lineTo(89.036003f, 21.865000f);
            path_0.close();
            path_0.moveTo(89.036003f, 17.242001f);
            path_0.lineTo(89.036003f, 12.877001f);
            path_0.lineTo(93.355003f, 12.877001f);
            path_0.lineTo(93.355003f, 17.242001f);
            path_0.lineTo(89.036003f, 17.242001f);
            path_0.close();
            path_0.moveTo(89.036003f, 12.618001f);
            path_0.lineTo(89.036003f, 8.253000f);
            path_0.lineTo(93.355003f, 8.253000f);
            path_0.lineTo(93.355003f, 12.618000f);
            path_0.lineTo(89.036003f, 12.618000f);
            path_0.close();
            path_0.moveTo(89.036003f, 7.995000f);
            path_0.lineTo(89.036003f, 3.630000f);
            path_0.lineTo(93.355003f, 3.630000f);
            path_0.lineTo(93.355003f, 7.995000f);
            path_0.lineTo(89.036003f, 7.995000f);
            path_0.close();
            path_0.moveTo(88.777000f, 7.995000f);
            path_0.lineTo(84.458000f, 7.995000f);
            path_0.lineTo(84.458000f, 3.630000f);
            path_0.lineTo(88.777000f, 3.630000f);
            path_0.lineTo(88.777000f, 7.995000f);
            path_0.close();
            path_0.moveTo(84.200005f, 7.995000f);
            path_0.lineTo(79.881004f, 7.995000f);
            path_0.lineTo(79.881004f, 3.630000f);
            path_0.lineTo(84.200005f, 3.630000f);
            path_0.lineTo(84.200005f, 7.995000f);
            path_0.close();
            path_0.moveTo(79.623001f, 7.995000f);
            path_0.lineTo(75.304001f, 7.995000f);
            path_0.lineTo(75.304001f, 3.630000f);
            path_0.lineTo(79.623001f, 3.630000f);
            path_0.lineTo(79.623001f, 7.995000f);
            path_0.close();
            path_0.moveTo(75.045006f, 7.995000f);
            path_0.lineTo(70.726006f, 7.995000f);
            path_0.lineTo(70.726006f, 3.630000f);
            path_0.lineTo(75.045006f, 3.630000f);
            path_0.lineTo(75.045006f, 7.995000f);
            path_0.close();
            path_0.moveTo(70.468002f, 7.995000f);
            path_0.lineTo(66.150002f, 7.995000f);
            path_0.lineTo(66.150002f, 3.630000f);
            path_0.lineTo(70.469002f, 3.630000f);
            path_0.lineTo(70.469002f, 7.995000f);
            path_0.close();
            path_0.moveTo(65.891006f, 7.995000f);
            path_0.lineTo(61.572006f, 7.995000f);
            path_0.lineTo(61.572006f, 3.630000f);
            path_0.lineTo(65.891006f, 3.630000f);
            path_0.lineTo(65.891006f, 7.995000f);
            path_0.close();
            path_0.moveTo(61.314003f, 7.995000f);
            path_0.lineTo(56.995003f, 7.995000f);
            path_0.lineTo(56.995003f, 3.630000f);
            path_0.lineTo(61.314003f, 3.630000f);
            path_0.lineTo(61.314003f, 7.995000f);
            path_0.close();
            path_0.moveTo(56.737003f, 7.995000f);
            path_0.lineTo(52.418003f, 7.995000f);
            path_0.lineTo(52.418003f, 3.630000f);
            path_0.lineTo(56.737003f, 3.630000f);
            path_0.lineTo(56.737003f, 7.995000f);
            path_0.close();
            path_0.moveTo(52.159004f, 7.995000f);
            path_0.lineTo(47.840004f, 7.995000f);
            path_0.lineTo(47.840004f, 3.630000f);
            path_0.lineTo(52.159004f, 3.630000f);
            path_0.lineTo(52.159004f, 7.995000f);
            path_0.close();
            path_0.moveTo(47.582001f, 7.995000f);
            path_0.lineTo(43.263000f, 7.995000f);
            path_0.lineTo(43.263000f, 3.630000f);
            path_0.lineTo(47.582001f, 3.630000f);
            path_0.lineTo(47.582001f, 7.995000f);
            path_0.close();
            path_0.moveTo(43.005001f, 7.995000f);
            path_0.lineTo(38.686001f, 7.995000f);
            path_0.lineTo(38.686001f, 3.630000f);
            path_0.lineTo(43.005001f, 3.630000f);
            path_0.lineTo(43.005001f, 7.995000f);
            path_0.close();
            path_0.moveTo(38.428001f, 7.995000f);
            path_0.lineTo(34.109001f, 7.995000f);
            path_0.lineTo(34.109001f, 3.630000f);
            path_0.lineTo(38.428001f, 3.630000f);
            path_0.lineTo(38.428001f, 7.995000f);
            path_0.close();
            path_0.moveTo(33.849998f, 7.995000f);
            path_0.lineTo(29.530998f, 7.995000f);
            path_0.lineTo(29.530998f, 3.630000f);
            path_0.lineTo(33.849998f, 3.630000f);
            path_0.lineTo(33.849998f, 7.995000f);
            path_0.close();
            path_0.moveTo(29.273001f, 7.995000f);
            path_0.lineTo(24.954000f, 7.995000f);
            path_0.lineTo(24.954000f, 3.630000f);
            path_0.lineTo(29.273001f, 3.630000f);
            path_0.lineTo(29.273001f, 7.995000f);
            path_0.close();
            path_0.moveTo(24.696001f, 7.995000f);
            path_0.lineTo(20.377001f, 7.995000f);
            path_0.lineTo(20.377001f, 3.630000f);
            path_0.lineTo(24.696001f, 3.630000f);
            path_0.lineTo(24.696001f, 7.995000f);
            path_0.close();
            path_0.moveTo(20.119001f, 7.995000f);
            path_0.lineTo(15.800000f, 7.995000f);
            path_0.lineTo(15.800000f, 3.630000f);
            path_0.lineTo(20.118999f, 3.630000f);
            path_0.lineTo(20.118999f, 7.995000f);
            path_0.close();
            path_0.moveTo(15.542001f, 7.995000f);
            path_0.lineTo(11.223001f, 7.995000f);
            path_0.lineTo(11.223001f, 3.630000f);
            path_0.lineTo(15.542001f, 3.630000f);
            path_0.lineTo(15.542001f, 7.995000f);
            path_0.close();
            path_0.moveTo(10.964001f, 7.995000f);
            path_0.lineTo(6.646000f, 7.995000f);
            path_0.lineTo(6.646000f, 3.630000f);
            path_0.lineTo(10.965000f, 3.630000f);
            path_0.lineTo(10.965000f, 7.995000f);
            path_0.close();
            path_0.moveTo(6.387000f, 7.995000f);
            path_0.lineTo(2.069000f, 7.995000f);
            path_0.lineTo(2.069000f, 3.630000f);
            path_0.lineTo(6.388000f, 3.630000f);
            path_0.lineTo(6.388000f, 7.995000f);
            path_0.close();
            path_0.moveTo(6.387000f, 8.253000f);
            path_0.lineTo(6.387000f, 12.618000f);
            path_0.lineTo(2.069000f, 12.618000f);
            path_0.lineTo(2.069000f, 8.253000f);
            path_0.lineTo(6.387000f, 8.253000f);
            path_0.close();
            path_0.moveTo(6.387000f, 12.877001f);
            path_0.lineTo(6.387000f, 17.242001f);
            path_0.lineTo(2.069000f, 17.242001f);
            path_0.lineTo(2.069000f, 12.877001f);
            path_0.lineTo(6.387000f, 12.877001f);
            path_0.close();
            path_0.moveTo(6.387000f, 17.500000f);
            path_0.lineTo(6.387000f, 21.865000f);
            path_0.lineTo(2.069000f, 21.865000f);
            path_0.lineTo(2.069000f, 17.500000f);
            path_0.lineTo(6.387000f, 17.500000f);
            path_0.close();
            path_0.moveTo(6.387000f, 22.124001f);
            path_0.lineTo(6.387000f, 26.489000f);
            path_0.lineTo(2.069000f, 26.489000f);
            path_0.lineTo(2.069000f, 22.124001f);
            path_0.lineTo(6.387000f, 22.124001f);
            path_0.close();
            path_0.moveTo(6.387000f, 26.748001f);
            path_0.lineTo(6.387000f, 31.113001f);
            path_0.lineTo(2.069000f, 31.113001f);
            path_0.lineTo(2.069000f, 26.748001f);
            path_0.lineTo(6.387000f, 26.748001f);
            path_0.close();
            path_0.moveTo(6.387000f, 31.371002f);
            path_0.lineTo(6.387000f, 35.736004f);
            path_0.lineTo(2.069000f, 35.736004f);
            path_0.lineTo(2.069000f, 31.371004f);
            path_0.lineTo(6.387000f, 31.371004f);
            path_0.close();
            path_0.moveTo(6.387000f, 35.995003f);
            path_0.lineTo(6.387000f, 40.360004f);
            path_0.lineTo(2.069000f, 40.360004f);
            path_0.lineTo(2.069000f, 35.995003f);
            path_0.lineTo(6.387000f, 35.995003f);
            path_0.close();
            path_0.moveTo(6.387000f, 40.619003f);
            path_0.lineTo(6.387000f, 44.984005f);
            path_0.lineTo(2.069000f, 44.984005f);
            path_0.lineTo(2.069000f, 40.619003f);
            path_0.lineTo(6.387000f, 40.619003f);
            path_0.close();
            path_0.moveTo(6.646000f, 40.619003f);
            path_0.lineTo(10.965000f, 40.619003f);
            path_0.lineTo(10.965000f, 44.984005f);
            path_0.lineTo(6.646000f, 44.984005f);
            path_0.lineTo(6.646000f, 40.619003f);
            path_0.close();
            path_0.moveTo(11.223001f, 40.619003f);
            path_0.lineTo(15.542001f, 40.619003f);
            path_0.lineTo(15.542001f, 44.984005f);
            path_0.lineTo(11.223001f, 44.984005f);
            path_0.lineTo(11.223001f, 40.619003f);
            path_0.close();
            path_0.moveTo(15.800000f, 40.619003f);
            path_0.lineTo(20.118999f, 40.619003f);
            path_0.lineTo(20.118999f, 44.984005f);
            path_0.lineTo(15.800000f, 44.984005f);
            path_0.lineTo(15.800000f, 40.619003f);
            path_0.close();
            path_0.moveTo(20.377001f, 40.619003f);
            path_0.lineTo(24.696001f, 40.619003f);
            path_0.lineTo(24.696001f, 44.984005f);
            path_0.lineTo(20.377001f, 44.984005f);
            path_0.lineTo(20.377001f, 40.619003f);
            path_0.close();
            path_0.moveTo(24.955002f, 40.619003f);
            path_0.lineTo(29.274002f, 40.619003f);
            path_0.lineTo(29.274002f, 44.984005f);
            path_0.lineTo(24.955002f, 44.984005f);
            path_0.lineTo(24.955002f, 40.619003f);
            path_0.close();
            path_0.moveTo(29.532001f, 40.619003f);
            path_0.lineTo(33.851002f, 40.619003f);
            path_0.lineTo(33.851002f, 44.984005f);
            path_0.lineTo(29.532001f, 44.984005f);
            path_0.lineTo(29.532001f, 40.619003f);
            path_0.close();
            path_0.moveTo(34.109001f, 40.619003f);
            path_0.lineTo(38.428001f, 40.619003f);
            path_0.lineTo(38.428001f, 44.984005f);
            path_0.lineTo(34.109001f, 44.984005f);
            path_0.lineTo(34.109001f, 40.619003f);
            path_0.close();
            path_0.moveTo(38.686001f, 40.619003f);
            path_0.lineTo(43.005001f, 40.619003f);
            path_0.lineTo(43.005001f, 44.984005f);
            path_0.lineTo(38.686001f, 44.984005f);
            path_0.lineTo(38.686001f, 40.619003f);
            path_0.close();
            path_0.moveTo(43.263000f, 40.619003f);
            path_0.lineTo(47.582001f, 40.619003f);
            path_0.lineTo(47.582001f, 44.984005f);
            path_0.lineTo(43.263000f, 44.984005f);
            path_0.lineTo(43.263000f, 40.619003f);
            path_0.close();
            path_0.moveTo(47.841003f, 40.619003f);
            path_0.lineTo(52.160004f, 40.619003f);
            path_0.lineTo(52.160004f, 44.984005f);
            path_0.lineTo(47.841003f, 44.984005f);
            path_0.lineTo(47.841003f, 40.619003f);
            path_0.close();
            path_0.moveTo(52.418003f, 40.619003f);
            path_0.lineTo(56.737003f, 40.619003f);
            path_0.lineTo(56.737003f, 44.984005f);
            path_0.lineTo(52.418003f, 44.984005f);
            path_0.lineTo(52.418003f, 40.619003f);
            path_0.close();
            path_0.moveTo(56.995003f, 40.619003f);
            path_0.lineTo(61.314003f, 40.619003f);
            path_0.lineTo(61.314003f, 44.984005f);
            path_0.lineTo(56.995003f, 44.984005f);
            path_0.lineTo(56.995003f, 40.619003f);
            path_0.close();
            path_0.moveTo(61.572002f, 40.619003f);
            path_0.lineTo(65.891006f, 40.619003f);
            path_0.lineTo(65.891006f, 44.984005f);
            path_0.lineTo(61.572006f, 44.984005f);
            path_0.lineTo(61.572006f, 40.619003f);
            path_0.close();
            path_0.moveTo(66.150002f, 40.619003f);
            path_0.lineTo(70.469002f, 40.619003f);
            path_0.lineTo(70.469002f, 44.984005f);
            path_0.lineTo(66.150002f, 44.984005f);
            path_0.lineTo(66.150002f, 40.619003f);
            path_0.close();
            path_0.moveTo(70.727005f, 40.619003f);
            path_0.lineTo(75.046005f, 40.619003f);
            path_0.lineTo(75.046005f, 44.984005f);
            path_0.lineTo(70.727005f, 44.984005f);
            path_0.lineTo(70.727005f, 40.619003f);
            path_0.close();
            path_0.moveTo(75.304001f, 40.619003f);
            path_0.lineTo(79.623001f, 40.619003f);
            path_0.lineTo(79.623001f, 44.984005f);
            path_0.lineTo(75.304001f, 44.984005f);
            path_0.lineTo(75.304001f, 40.619003f);
            path_0.close();
            path_0.moveTo(79.881004f, 40.619003f);
            path_0.lineTo(84.200005f, 40.619003f);
            path_0.lineTo(84.200005f, 44.984005f);
            path_0.lineTo(79.881004f, 44.984005f);
            path_0.lineTo(79.881004f, 40.619003f);
            path_0.close();
            path_0.moveTo(84.458008f, 40.619003f);
            path_0.lineTo(88.777008f, 40.619003f);
            path_0.lineTo(88.777008f, 44.984005f);
            path_0.lineTo(84.458008f, 44.984005f);
            path_0.lineTo(84.458008f, 40.619003f);
            path_0.close();
            path_0.moveTo(89.036003f, 40.619003f);
            path_0.lineTo(93.355003f, 40.619003f);
            path_0.lineTo(93.355003f, 44.984005f);
            path_0.lineTo(89.036003f, 44.984005f);
            path_0.lineTo(89.036003f, 40.619003f);
            path_0.close();
            path_0.moveTo(93.613007f, 40.619003f);
            path_0.lineTo(97.932007f, 40.619003f);
            path_0.lineTo(97.932007f, 44.984005f);
            path_0.lineTo(93.613007f, 44.984005f);
            path_0.lineTo(93.613007f, 40.619003f);
            path_0.close();
            path_0.moveTo(93.613007f, 40.360001f);
            path_0.lineTo(93.613007f, 35.994999f);
            path_0.lineTo(97.932007f, 35.994999f);
            path_0.lineTo(97.932007f, 40.360001f);
            path_0.lineTo(93.613007f, 40.360001f);
            path_0.close();
            path_0.moveTo(93.613007f, 35.736000f);
            path_0.lineTo(93.613007f, 31.371000f);
            path_0.lineTo(97.932007f, 31.371000f);
            path_0.lineTo(97.932007f, 35.736000f);
            path_0.lineTo(93.613007f, 35.736000f);
            path_0.close();
            path_0.moveTo(93.613007f, 31.113001f);
            path_0.lineTo(93.613007f, 26.748001f);
            path_0.lineTo(97.932007f, 26.748001f);
            path_0.lineTo(97.932007f, 31.113001f);
            path_0.lineTo(93.613007f, 31.113001f);
            path_0.close();
            path_0.moveTo(93.613007f, 26.489000f);
            path_0.lineTo(93.613007f, 22.124001f);
            path_0.lineTo(97.932007f, 22.124001f);
            path_0.lineTo(97.932007f, 26.489000f);
            path_0.lineTo(93.613007f, 26.489000f);
            path_0.close();
            path_0.moveTo(93.613007f, 21.866001f);
            path_0.lineTo(93.613007f, 17.500000f);
            path_0.lineTo(97.932007f, 17.500000f);
            path_0.lineTo(97.932007f, 21.865000f);
            path_0.lineTo(93.613007f, 21.865000f);
            path_0.close();
            path_0.moveTo(93.613007f, 17.242001f);
            path_0.lineTo(93.613007f, 12.877001f);
            path_0.lineTo(97.932007f, 12.877001f);
            path_0.lineTo(97.932007f, 17.242001f);
            path_0.lineTo(93.613007f, 17.242001f);
            path_0.close();
            path_0.moveTo(93.613007f, 12.618001f);
            path_0.lineTo(93.613007f, 8.253000f);
            path_0.lineTo(97.932007f, 8.253000f);
            path_0.lineTo(97.932007f, 12.618000f);
            path_0.lineTo(93.613007f, 12.618000f);
            path_0.close();
            path_0.moveTo(93.613007f, 7.995000f);
            path_0.lineTo(93.613007f, 3.630000f);
            path_0.lineTo(97.932007f, 3.630000f);
            path_0.lineTo(97.932007f, 7.995000f);
            path_0.lineTo(93.613007f, 7.995000f);
            path_0.close();




            path_0.setFillType(Path.FillType.WINDING);
            canvas.drawPath(path_0, paint_2);
            canvas.restore();
            canvas.save();
            paint_3.reset();
            paint_3.set(paint_0);
            paint_3.setColor(0xffffffff);
            path_1.reset();
            path_1.moveTo(100.000000f, 45.253002f);
            path_1.lineTo(96.122002f, 45.253002f);
            path_1.lineTo(96.122002f, 7.434000f);
            path_1.cubicTo(96.122002f, 5.474000f, 94.527000f, 3.879000f, 92.567001f, 3.879000f);
            path_1.lineTo(7.434000f, 3.879000f);
            path_1.cubicTo(5.474000f, 3.879000f, 3.879000f, 5.474000f, 3.879000f, 7.434000f);
            path_1.lineTo(3.879000f, 45.253002f);
            path_1.lineTo(0.000000f, 45.253002f);
            path_1.lineTo(0.000000f, 7.434000f);
            path_1.cubicTo(0.000000f, 3.335000f, 3.335000f, 0.000000f, 7.434000f, 0.000000f);
            path_1.lineTo(92.566002f, 0.000000f);
            path_1.cubicTo(96.665001f, 0.000000f, 100.000000f, 3.335000f, 100.000000f, 7.434000f);
            path_1.lineTo(100.000000f, 45.253002f);
            path_1.close();




            path_1.setFillType(Path.FillType.WINDING);
            canvas.drawPath(path_1, paint_3);
            canvas.restore();




            canvas.save();
            paint_4.reset();
            paint_4.set(paint_0);
            paint_4.setColor(0xfffaaf40);
            path_2.reset();
            path_2.moveTo(96.122002f, 11.525001f);
            path_2.lineTo(100.000000f, 11.525001f);
            path_2.lineTo(100.000000f, 17.474001f);
            path_2.lineTo(96.122002f, 17.474001f);
            path_2.lineTo(96.122002f, 11.525001f);
            path_2.close();




            canvas.drawPath(path_2, paint_4);
            canvas.restore();
            canvas.save();
            paint_5.reset();
            paint_5.set(paint_0);
            paint_5.setColor(0xfffaaf40);
            path_3.reset();
            path_3.moveTo(0.000000f, 11.525001f);
            path_3.lineTo(3.878000f, 11.525001f);
            path_3.lineTo(3.878000f, 17.474001f);
            path_3.lineTo(0.000000f, 17.474001f);
            path_3.lineTo(0.000000f, 11.525001f);
            path_3.close();




            canvas.drawPath(path_3, paint_5);
            canvas.restore();
            canvas.save();
            paint_6.reset();
            paint_6.set(paint_0);
            paint_6.setColor(0xfffaaf40);
            path_4.reset();
            path_4.moveTo(96.122002f, 39.303001f);
            path_4.lineTo(100.000000f, 39.303001f);
            path_4.lineTo(100.000000f, 45.252003f);
            path_4.lineTo(96.122002f, 45.252003f);
            path_4.lineTo(96.122002f, 39.303001f);
            path_4.close();




            canvas.drawPath(path_4, paint_6);
            canvas.restore();
            canvas.save();
            paint_7.reset();
            paint_7.set(paint_0);
            paint_7.setColor(0xfffaaf40);
            path_5.reset();
            path_5.moveTo(0.000000f, 39.303001f);
            path_5.lineTo(3.878000f, 39.303001f);
            path_5.lineTo(3.878000f, 45.252003f);
            path_5.lineTo(0.000000f, 45.252003f);
            path_5.lineTo(0.000000f, 39.303001f);
            path_5.close();
            canvas.drawPath(path_5, paint_7);
            canvas.restore();



            ImageView myImage = new ImageView(context);
            myImage.setImageBitmap(b);
            myImage.setPivotX(0.0f);
            myImage.setPivotY(0.0f);
            myImage.setX(lastPosition[0]);
            myImage.setY(lastPosition[1]);

            myImage.setRotation(lastPosition[2]);
            base_svg.addView(myImage);

//            need to inforce the pivot for some reason


            JSONObject lineAnima = player.getJSONObject("lineAnima");
            JSONArray arrayPosition = lineAnima.optJSONArray("data");

            CustomAnimation.justDoIt(context, myImage, arrayPosition, screenHeight, screenWidth, velocity, (float) player.getInt("rotation"), (CustomAnimation.convertDpToPixels(0f,context) * scale),(CustomAnimation.convertDpToPixels(0f,context) * scale));

        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
}

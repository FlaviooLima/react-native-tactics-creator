package com.tactical.creator.components;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Typeface;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.facebook.react.uimanager.ThemedReactContext;
import com.tactical.creator.utis.CustomAnimation;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.math.BigDecimal;

/**
 * Created by macmini on 13/11/2017.
 */

public class Pessoa {
    private  CustomAnimation CustomAnimation= new CustomAnimation();
    int[] auxColor;

    public static final float WIDTH = 60.000000f;
    public static final float HEIGHT = 60.000000f;

    private boolean inited;
    private Paint paint_0;
    private Typeface typeface_0;


    private Paint paint_2;
    private Path path_0;


    private void init() {
        if (inited) return;
        inited = true;
        paint_0 = new Paint();
        typeface_0 = Typeface.create(Typeface.SANS_SERIF, 0);
        paint_2 = new Paint();
        path_0 = new Path();

    }

    public void create(ThemedReactContext context, RelativeLayout base_svg, JSONObject player, Integer screenHeight, Integer screenWidth, Integer velocity, float[] lastPosition) {

        try {
            float scale = 1;
            scale = BigDecimal.valueOf(player.getDouble("scale")).floatValue();


            int  baseSizeWidth  = 70*screenWidth/1000;
            int  baseSizeHeight = 120*screenHeight/1000;

            int realWidth = (int) (baseSizeWidth * scale);
            int realHeight = (int) (baseSizeHeight * scale);

            Bitmap b  = Bitmap.createBitmap((int) realWidth, (int) realHeight, Bitmap.Config.ARGB_8888);
            Canvas canvas = new Canvas(b);

//            //This code is for testing img background width and height
//            Paint paint = new Paint();
//            paint.setStyle(Paint.Style.FILL);
//            paint.setColor(Color.RED);
//            canvas.drawPaint(paint);
//            //END

            init();
            canvas.save();
            canvas.scale(realWidth / WIDTH, realHeight / HEIGHT);
        paint_0.reset();
        paint_0.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DEV_KERN_TEXT_FLAG | Paint.SUBPIXEL_TEXT_FLAG);
        paint_0.setStyle(Paint.Style.FILL);
        paint_0.setTypeface(Typeface.DEFAULT);
        paint_0.setColor(0xff000000);
        paint_0.setTextSize(16.000000f);
        paint_0.setTypeface(typeface_0);
        paint_0.setStrikeThruText(false);
        paint_0.setUnderlineText(false);



        canvas.save();
        paint_2.reset();
        paint_2.set(paint_0);
        auxColor = CustomAnimation.getColorIntAsColor(player.getInt("color"),false);
         paint_2.setARGB(auxColor[0],auxColor[1],auxColor[2],auxColor[3]);

            path_0.reset();
        path_0.moveTo(22.400000f, 14.800000f);
        path_0.cubicTo(22.400000f, 12.900001f, 21.100000f, 11.400000f, 19.199999f, 11.400000f);
        path_0.cubicTo(17.999998f, 11.400000f, 16.699999f, 11.400000f, 15.499999f, 11.400000f);
        path_0.cubicTo(15.099999f, 11.400000f, 14.799999f, 11.400000f, 14.399999f, 11.400000f);
        path_0.cubicTo(14.399999f, 10.900000f, 14.399999f, 10.500000f, 14.399999f, 10.099999f);
        path_0.cubicTo(14.399999f, 9.799999f, 14.499999f, 9.499999f, 14.599998f, 9.200000f);
        path_0.cubicTo(14.799998f, 8.400000f, 15.099998f, 7.600000f, 15.399999f, 6.900000f);
        path_0.cubicTo(15.799998f, 5.900000f, 15.999999f, 4.900000f, 15.799998f, 3.799999f);
        path_0.cubicTo(15.299998f, 1.399999f, 12.899998f, -0.300000f, 10.499998f, 0.199999f);
        path_0.cubicTo(7.600000f, 0.700000f, 6.000000f, 3.600000f, 6.900000f, 6.200000f);
        path_0.cubicTo(7.200000f, 7.000000f, 7.500000f, 7.900000f, 7.800000f, 8.700000f);
        path_0.cubicTo(8.200000f, 9.600000f, 8.000000f, 10.500000f, 8.000000f, 11.400001f);
        path_0.cubicTo(7.600000f, 11.400001f, 7.300000f, 11.400001f, 6.900000f, 11.400001f);
        path_0.cubicTo(5.600000f, 11.400001f, 4.300000f, 11.400001f, 3.000000f, 11.400001f);
        path_0.cubicTo(1.400000f, 11.500001f, 0.000000f, 12.900001f, 0.000000f, 14.500001f);
        path_0.cubicTo(0.000000f, 16.000000f, 0.000000f, 17.500000f, 0.000000f, 19.000000f);
        path_0.cubicTo(0.000000f, 22.500000f, 0.000000f, 26.000000f, 0.000000f, 29.500000f);
        path_0.cubicTo(0.000000f, 30.799999f, 0.100000f, 32.000000f, 0.500000f, 33.299999f);
        path_0.cubicTo(0.700000f, 34.200001f, 1.000000f, 35.000000f, 1.200000f, 35.799999f);
        path_0.cubicTo(1.900000f, 38.000000f, 2.500000f, 40.200001f, 3.200000f, 42.500000f);
        path_0.cubicTo(3.600000f, 43.900002f, 3.900000f, 45.200001f, 3.900000f, 46.700001f);
        path_0.cubicTo(3.900000f, 47.500000f, 3.900000f, 48.400002f, 3.900000f, 49.200001f);
        path_0.cubicTo(3.900000f, 51.500000f, 3.900000f, 53.700001f, 4.000000f, 56.000000f);
        path_0.cubicTo(4.000000f, 56.500000f, 3.800000f, 56.900002f, 3.400000f, 57.200001f);
        path_0.cubicTo(3.300000f, 57.200001f, 3.200000f, 57.299999f, 3.200000f, 57.299999f);
        path_0.cubicTo(2.800000f, 57.299999f, 2.400000f, 57.299999f, 2.000000f, 57.299999f);
        path_0.cubicTo(1.700000f, 57.299999f, 1.600000f, 57.399998f, 1.600000f, 57.700001f);
        path_0.cubicTo(1.600000f, 58.299999f, 1.600000f, 59.000000f, 1.600000f, 59.600002f);
        path_0.cubicTo(1.600000f, 59.700001f, 1.600000f, 59.900002f, 1.600000f, 60.000004f);
        path_0.cubicTo(7.900000f, 60.000004f, 14.100000f, 60.000004f, 20.400002f, 60.000004f);
        path_0.cubicTo(20.400002f, 59.200005f, 20.400002f, 58.300003f, 20.400002f, 57.500004f);
        path_0.cubicTo(20.400002f, 57.300003f, 20.300001f, 57.200005f, 20.100002f, 57.200005f);
        path_0.cubicTo(19.900002f, 57.200005f, 19.600002f, 57.200005f, 19.400002f, 57.200005f);
        path_0.cubicTo(18.900002f, 57.300003f, 18.500002f, 57.100006f, 18.200001f, 56.700005f);
        path_0.cubicTo(18.200001f, 56.700005f, 18.200001f, 56.700005f, 18.200001f, 56.600006f);
        path_0.cubicTo(18.200001f, 56.500008f, 18.100000f, 56.400005f, 18.100000f, 56.300007f);
        path_0.cubicTo(18.100000f, 55.600006f, 18.100000f, 54.900005f, 18.100000f, 54.200008f);
        path_0.cubicTo(18.200001f, 51.900009f, 18.200001f, 49.500008f, 18.300001f, 47.200008f);
        path_0.cubicTo(18.300001f, 45.700008f, 18.500002f, 44.200008f, 18.900002f, 42.800007f);
        path_0.cubicTo(19.700001f, 40.200008f, 20.500002f, 37.600006f, 21.400002f, 34.900005f);
        path_0.cubicTo(22.000002f, 33.100006f, 22.400002f, 31.400005f, 22.400002f, 29.500006f);
        path_0.cubicTo(22.400002f, 26.600006f, 22.400002f, 23.800005f, 22.400002f, 20.900005f);
        path_0.cubicTo(22.400000f, 18.900000f, 22.400000f, 16.900000f, 22.400000f, 14.800000f);
        path_0.close();
        path_0.moveTo(7.100000f, 12.600000f);
        path_0.cubicTo(7.200000f, 12.600000f, 7.300000f, 12.700001f, 7.300000f, 12.800000f);
        path_0.cubicTo(7.300000f, 12.900000f, 7.200000f, 13.000000f, 7.100000f, 13.000000f);
        path_0.cubicTo(7.000000f, 13.000000f, 6.900000f, 12.900000f, 6.900000f, 12.800000f);
        path_0.cubicTo(6.900000f, 12.700001f, 7.000000f, 12.600000f, 7.100000f, 12.600000f);
        path_0.close();
        path_0.moveTo(7.100000f, 13.300000f);
        path_0.cubicTo(7.200000f, 13.300000f, 7.300000f, 13.400001f, 7.300000f, 13.500000f);
        path_0.cubicTo(7.300000f, 13.600000f, 7.200000f, 13.700000f, 7.100000f, 13.700000f);
        path_0.cubicTo(7.000000f, 13.700000f, 6.900000f, 13.599999f, 6.900000f, 13.500000f);
        path_0.cubicTo(6.900000f, 13.400001f, 7.000000f, 13.300000f, 7.100000f, 13.300000f);
        path_0.close();
        path_0.moveTo(7.100000f, 13.900001f);
        path_0.cubicTo(7.200000f, 13.900001f, 7.300000f, 14.000001f, 7.300000f, 14.100000f);
        path_0.cubicTo(7.300000f, 14.200000f, 7.200000f, 14.300000f, 7.100000f, 14.300000f);
        path_0.cubicTo(7.000000f, 14.300000f, 6.900000f, 14.200000f, 6.900000f, 14.100000f);
        path_0.cubicTo(6.900000f, 14.000001f, 7.000000f, 13.900001f, 7.100000f, 13.900001f);
        path_0.close();
        path_0.moveTo(7.100000f, 14.600000f);
        path_0.cubicTo(7.200000f, 14.600000f, 7.300000f, 14.700001f, 7.300000f, 14.800000f);
        path_0.cubicTo(7.300000f, 14.900001f, 7.200000f, 15.000000f, 7.100000f, 15.000000f);
        path_0.cubicTo(7.000000f, 15.000000f, 6.900000f, 14.900000f, 6.900000f, 14.800000f);
        path_0.cubicTo(6.900000f, 14.700001f, 7.000000f, 14.600000f, 7.100000f, 14.600000f);
        path_0.close();
        path_0.moveTo(7.100000f, 15.200000f);
        path_0.cubicTo(7.200000f, 15.200000f, 7.300000f, 15.300000f, 7.300000f, 15.400000f);
        path_0.cubicTo(7.300000f, 15.500000f, 7.200000f, 15.599999f, 7.100000f, 15.599999f);
        path_0.cubicTo(7.000000f, 15.599999f, 6.900000f, 15.499999f, 6.900000f, 15.400000f);
        path_0.cubicTo(6.900000f, 15.300000f, 7.000000f, 15.200000f, 7.100000f, 15.200000f);
        path_0.close();
        path_0.moveTo(7.100000f, 15.900001f);
        path_0.cubicTo(7.200000f, 15.900001f, 7.300000f, 16.000000f, 7.300000f, 16.100000f);
        path_0.cubicTo(7.300000f, 16.200001f, 7.200000f, 16.300001f, 7.100000f, 16.300001f);
        path_0.cubicTo(7.000000f, 16.300001f, 6.900000f, 16.200001f, 6.900000f, 16.100000f);
        path_0.cubicTo(6.900000f, 16.000000f, 7.000000f, 15.900001f, 7.100000f, 15.900001f);
        path_0.close();
        path_0.moveTo(7.100000f, 16.600000f);
        path_0.cubicTo(7.200000f, 16.600000f, 7.300000f, 16.700001f, 7.300000f, 16.800001f);
        path_0.cubicTo(7.300000f, 16.900002f, 7.200000f, 17.000002f, 7.100000f, 17.000002f);
        path_0.cubicTo(7.000000f, 17.000002f, 6.900000f, 16.900002f, 6.900000f, 16.800001f);
        path_0.cubicTo(6.900000f, 16.700001f, 7.000000f, 16.600000f, 7.100000f, 16.600000f);
        path_0.close();
        path_0.moveTo(7.100000f, 17.200001f);
        path_0.cubicTo(7.200000f, 17.200001f, 7.300000f, 17.300001f, 7.300000f, 17.400002f);
        path_0.cubicTo(7.300000f, 17.500002f, 7.200000f, 17.600002f, 7.100000f, 17.600002f);
        path_0.cubicTo(7.000000f, 17.600002f, 6.900000f, 17.500002f, 6.900000f, 17.400002f);
        path_0.cubicTo(6.900000f, 17.300001f, 7.000000f, 17.200001f, 7.100000f, 17.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 17.900000f);
        path_0.cubicTo(7.200000f, 17.900000f, 7.300000f, 18.000000f, 7.300000f, 18.100000f);
        path_0.cubicTo(7.300000f, 18.200001f, 7.200000f, 18.300001f, 7.100000f, 18.300001f);
        path_0.cubicTo(7.000000f, 18.300001f, 6.900000f, 18.200001f, 6.900000f, 18.100000f);
        path_0.cubicTo(6.900000f, 18.000000f, 7.000000f, 17.900000f, 7.100000f, 17.900000f);
        path_0.close();
        path_0.moveTo(7.100000f, 18.600000f);
        path_0.cubicTo(7.200000f, 18.600000f, 7.300000f, 18.700001f, 7.300000f, 18.800001f);
        path_0.cubicTo(7.300000f, 18.900002f, 7.200000f, 19.000000f, 7.100000f, 19.000000f);
        path_0.cubicTo(7.000000f, 19.000000f, 6.900000f, 18.900000f, 6.900000f, 18.799999f);
        path_0.cubicTo(6.900000f, 18.699999f, 7.000000f, 18.600000f, 7.100000f, 18.600000f);
        path_0.close();
        path_0.moveTo(7.100000f, 19.200001f);
        path_0.cubicTo(7.200000f, 19.200001f, 7.300000f, 19.300001f, 7.300000f, 19.400002f);
        path_0.cubicTo(7.300000f, 19.500002f, 7.200000f, 19.600002f, 7.100000f, 19.600002f);
        path_0.cubicTo(7.000000f, 19.600002f, 6.900000f, 19.500002f, 6.900000f, 19.400002f);
        path_0.cubicTo(6.900000f, 19.300001f, 7.000000f, 19.200001f, 7.100000f, 19.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 19.900000f);
        path_0.cubicTo(7.200000f, 19.900000f, 7.300000f, 20.000000f, 7.300000f, 20.100000f);
        path_0.cubicTo(7.300000f, 20.200001f, 7.200000f, 20.300001f, 7.100000f, 20.300001f);
        path_0.cubicTo(7.000000f, 20.300001f, 6.900000f, 20.200001f, 6.900000f, 20.100000f);
        path_0.cubicTo(6.900000f, 20.000000f, 7.000000f, 19.900000f, 7.100000f, 19.900000f);
        path_0.close();
        path_0.moveTo(7.100000f, 20.500000f);
        path_0.cubicTo(7.200000f, 20.500000f, 7.300000f, 20.600000f, 7.300000f, 20.700001f);
        path_0.cubicTo(7.300000f, 20.800001f, 7.200000f, 21.000000f, 7.100000f, 21.000000f);
        path_0.cubicTo(7.000000f, 21.000000f, 6.900000f, 20.900000f, 6.900000f, 20.799999f);
        path_0.cubicTo(6.900000f, 20.699999f, 7.000000f, 20.500000f, 7.100000f, 20.500000f);
        path_0.close();
        path_0.moveTo(7.100000f, 21.200001f);
        path_0.cubicTo(7.200000f, 21.200001f, 7.300000f, 21.300001f, 7.300000f, 21.400002f);
        path_0.cubicTo(7.300000f, 21.500002f, 7.200000f, 21.600002f, 7.100000f, 21.600002f);
        path_0.cubicTo(7.000000f, 21.600002f, 6.900000f, 21.500002f, 6.900000f, 21.400002f);
        path_0.cubicTo(6.900000f, 21.300001f, 7.000000f, 21.200001f, 7.100000f, 21.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 21.900000f);
        path_0.cubicTo(7.200000f, 21.900000f, 7.300000f, 22.000000f, 7.300000f, 22.100000f);
        path_0.cubicTo(7.300000f, 22.200001f, 7.200000f, 22.300001f, 7.100000f, 22.300001f);
        path_0.cubicTo(7.000000f, 22.300001f, 6.900000f, 22.200001f, 6.900000f, 22.100000f);
        path_0.cubicTo(6.900000f, 22.000000f, 7.000000f, 21.900000f, 7.100000f, 21.900000f);
        path_0.close();
        path_0.moveTo(7.100000f, 22.500000f);
        path_0.cubicTo(7.200000f, 22.500000f, 7.300000f, 22.600000f, 7.300000f, 22.700001f);
        path_0.cubicTo(7.300000f, 22.800001f, 7.200000f, 22.900002f, 7.100000f, 22.900002f);
        path_0.cubicTo(7.000000f, 22.900002f, 6.900000f, 22.800001f, 6.900000f, 22.700001f);
        path_0.cubicTo(6.900000f, 22.600000f, 7.000000f, 22.500000f, 7.100000f, 22.500000f);
        path_0.close();
        path_0.moveTo(7.100000f, 23.200001f);
        path_0.cubicTo(7.200000f, 23.200001f, 7.300000f, 23.300001f, 7.300000f, 23.400002f);
        path_0.cubicTo(7.300000f, 23.500002f, 7.200000f, 23.600002f, 7.100000f, 23.600002f);
        path_0.cubicTo(7.000000f, 23.600002f, 6.900000f, 23.500002f, 6.900000f, 23.400002f);
        path_0.cubicTo(6.900000f, 23.300001f, 7.000000f, 23.200001f, 7.100000f, 23.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 23.800001f);
        path_0.cubicTo(7.200000f, 23.800001f, 7.300000f, 23.900002f, 7.300000f, 24.000002f);
        path_0.cubicTo(7.300000f, 24.100002f, 7.200000f, 24.200003f, 7.100000f, 24.200003f);
        path_0.cubicTo(7.000000f, 24.200003f, 6.900000f, 24.100002f, 6.900000f, 24.000002f);
        path_0.cubicTo(6.900000f, 23.900002f, 7.000000f, 23.800001f, 7.100000f, 23.800001f);
        path_0.close();
        path_0.moveTo(7.100000f, 24.500000f);
        path_0.cubicTo(7.200000f, 24.500000f, 7.300000f, 24.600000f, 7.300000f, 24.700001f);
        path_0.cubicTo(7.300000f, 24.800001f, 7.200000f, 24.900002f, 7.100000f, 24.900002f);
        path_0.cubicTo(7.000000f, 24.900002f, 6.900000f, 24.800001f, 6.900000f, 24.700001f);
        path_0.cubicTo(6.900000f, 24.600000f, 7.000000f, 24.500000f, 7.100000f, 24.500000f);
        path_0.close();
        path_0.moveTo(7.100000f, 25.200001f);
        path_0.cubicTo(7.200000f, 25.200001f, 7.300000f, 25.300001f, 7.300000f, 25.400002f);
        path_0.cubicTo(7.300000f, 25.500002f, 7.200000f, 25.600002f, 7.100000f, 25.600002f);
        path_0.cubicTo(7.000000f, 25.600002f, 6.900000f, 25.500002f, 6.900000f, 25.400002f);
        path_0.cubicTo(6.900000f, 25.300001f, 7.000000f, 25.200001f, 7.100000f, 25.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 25.800001f);
        path_0.cubicTo(7.200000f, 25.800001f, 7.300000f, 25.900002f, 7.300000f, 26.000002f);
        path_0.cubicTo(7.300000f, 26.100002f, 7.200000f, 26.200003f, 7.100000f, 26.200003f);
        path_0.cubicTo(7.000000f, 26.200003f, 6.900000f, 26.100002f, 6.900000f, 26.000002f);
        path_0.cubicTo(6.900000f, 25.900000f, 7.000000f, 25.800001f, 7.100000f, 25.800001f);
        path_0.close();
        path_0.moveTo(7.100000f, 26.500000f);
        path_0.cubicTo(7.200000f, 26.500000f, 7.300000f, 26.600000f, 7.300000f, 26.700001f);
        path_0.cubicTo(7.300000f, 26.800001f, 7.200000f, 26.900002f, 7.100000f, 26.900002f);
        path_0.cubicTo(7.000000f, 26.900002f, 6.900000f, 26.800001f, 6.900000f, 26.700001f);
        path_0.cubicTo(6.900000f, 26.600000f, 7.000000f, 26.500000f, 7.100000f, 26.500000f);
        path_0.close();
        path_0.moveTo(7.100000f, 27.200001f);
        path_0.cubicTo(7.200000f, 27.200001f, 7.300000f, 27.300001f, 7.300000f, 27.400002f);
        path_0.cubicTo(7.300000f, 27.500002f, 7.200000f, 27.600002f, 7.100000f, 27.600002f);
        path_0.cubicTo(7.000000f, 27.600002f, 6.900000f, 27.500002f, 6.900000f, 27.400002f);
        path_0.cubicTo(6.900000f, 27.300001f, 7.000000f, 27.200001f, 7.100000f, 27.200001f);
        path_0.close();
        path_0.moveTo(7.100000f, 27.800001f);
        path_0.cubicTo(7.200000f, 27.800001f, 7.300000f, 27.900002f, 7.300000f, 28.000002f);
        path_0.cubicTo(7.300000f, 28.100002f, 7.200000f, 28.200003f, 7.100000f, 28.200003f);
        path_0.cubicTo(7.000000f, 28.200003f, 6.900000f, 28.100002f, 6.900000f, 28.000002f);
        path_0.cubicTo(6.900000f, 27.900002f, 7.000000f, 27.800001f, 7.100000f, 27.800001f);
        path_0.close();
        path_0.moveTo(7.100000f, 28.500000f);
        path_0.cubicTo(7.200000f, 28.500000f, 7.300000f, 28.600000f, 7.300000f, 28.700001f);
        path_0.cubicTo(7.300000f, 28.800001f, 7.200000f, 28.900002f, 7.100000f, 28.900002f);
        path_0.cubicTo(7.000000f, 28.900002f, 6.900000f, 28.800001f, 6.900000f, 28.700001f);
        path_0.cubicTo(6.900000f, 28.600000f, 7.000000f, 28.500000f, 7.100000f, 28.500000f);
        path_0.close();
        path_0.moveTo(6.400000f, 12.600000f);
        path_0.cubicTo(6.500000f, 12.600000f, 6.600000f, 12.700001f, 6.600000f, 12.800000f);
        path_0.cubicTo(6.600000f, 12.900000f, 6.600000f, 13.000000f, 6.400000f, 13.000000f);
        path_0.cubicTo(6.200000f, 13.000000f, 6.200000f, 12.900000f, 6.200000f, 12.800000f);
        path_0.cubicTo(6.200000f, 12.700001f, 6.300000f, 12.600000f, 6.400000f, 12.600000f);
        path_0.close();
        path_0.moveTo(6.400000f, 13.300000f);
        path_0.cubicTo(6.500000f, 13.300000f, 6.600000f, 13.400001f, 6.600000f, 13.500000f);
        path_0.cubicTo(6.600000f, 13.600000f, 6.500000f, 13.700000f, 6.400000f, 13.700000f);
        path_0.cubicTo(6.300000f, 13.700000f, 6.200000f, 13.599999f, 6.200000f, 13.500000f);
        path_0.cubicTo(6.200000f, 13.400001f, 6.300000f, 13.300000f, 6.400000f, 13.300000f);
        path_0.close();
        path_0.moveTo(6.400000f, 13.900001f);
        path_0.cubicTo(6.500000f, 13.900001f, 6.600000f, 14.000001f, 6.600000f, 14.100000f);
        path_0.cubicTo(6.600000f, 14.200000f, 6.500000f, 14.300000f, 6.400000f, 14.300000f);
        path_0.cubicTo(6.300000f, 14.300000f, 6.200000f, 14.200000f, 6.200000f, 14.100000f);
        path_0.cubicTo(6.200000f, 14.000001f, 6.300000f, 13.900001f, 6.400000f, 13.900001f);
        path_0.close();
        path_0.moveTo(6.400000f, 14.600000f);
        path_0.cubicTo(6.500000f, 14.600000f, 6.600000f, 14.700001f, 6.600000f, 14.800000f);
        path_0.cubicTo(6.600000f, 14.900001f, 6.500000f, 15.000000f, 6.400000f, 15.000000f);
        path_0.cubicTo(6.300000f, 15.000000f, 6.200000f, 14.900000f, 6.200000f, 14.800000f);
        path_0.cubicTo(6.200000f, 14.700001f, 6.300000f, 14.600000f, 6.400000f, 14.600000f);
        path_0.close();
        path_0.moveTo(6.400000f, 15.200000f);
        path_0.cubicTo(6.500000f, 15.200000f, 6.600000f, 15.300000f, 6.600000f, 15.400000f);
        path_0.cubicTo(6.600000f, 15.500000f, 6.500000f, 15.599999f, 6.400000f, 15.599999f);
        path_0.cubicTo(6.300000f, 15.599999f, 6.200000f, 15.499999f, 6.200000f, 15.400000f);
        path_0.cubicTo(6.200000f, 15.300000f, 6.300000f, 15.200000f, 6.400000f, 15.200000f);
        path_0.close();
        path_0.moveTo(6.400000f, 15.900001f);
        path_0.cubicTo(6.500000f, 15.900001f, 6.600000f, 16.000000f, 6.600000f, 16.100000f);
        path_0.cubicTo(6.600000f, 16.200001f, 6.500000f, 16.300001f, 6.400000f, 16.300001f);
        path_0.cubicTo(6.300000f, 16.300001f, 6.200000f, 16.200001f, 6.200000f, 16.100000f);
        path_0.cubicTo(6.200000f, 16.000000f, 6.300000f, 15.900001f, 6.400000f, 15.900001f);
        path_0.close();
        path_0.moveTo(6.400000f, 16.600000f);
        path_0.cubicTo(6.500000f, 16.600000f, 6.600000f, 16.700001f, 6.600000f, 16.800001f);
        path_0.cubicTo(6.600000f, 16.900002f, 6.500000f, 17.000002f, 6.400000f, 17.000002f);
        path_0.cubicTo(6.300000f, 17.000002f, 6.200000f, 16.900002f, 6.200000f, 16.800001f);
        path_0.cubicTo(6.200000f, 16.700001f, 6.300000f, 16.600000f, 6.400000f, 16.600000f);
        path_0.close();
        path_0.moveTo(6.400000f, 17.200001f);
        path_0.cubicTo(6.500000f, 17.200001f, 6.600000f, 17.300001f, 6.600000f, 17.400002f);
        path_0.cubicTo(6.600000f, 17.500002f, 6.500000f, 17.600002f, 6.400000f, 17.600002f);
        path_0.cubicTo(6.300000f, 17.600002f, 6.200000f, 17.500002f, 6.200000f, 17.400002f);
        path_0.cubicTo(6.200000f, 17.300001f, 6.300000f, 17.200001f, 6.400000f, 17.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 17.900000f);
        path_0.cubicTo(6.500000f, 17.900000f, 6.600000f, 18.000000f, 6.600000f, 18.100000f);
        path_0.cubicTo(6.600000f, 18.200001f, 6.500000f, 18.300001f, 6.400000f, 18.300001f);
        path_0.cubicTo(6.300000f, 18.300001f, 6.200000f, 18.200001f, 6.200000f, 18.100000f);
        path_0.cubicTo(6.200000f, 18.000000f, 6.300000f, 17.900000f, 6.400000f, 17.900000f);
        path_0.close();
        path_0.moveTo(6.400000f, 18.600000f);
        path_0.cubicTo(6.500000f, 18.600000f, 6.600000f, 18.700001f, 6.600000f, 18.800001f);
        path_0.cubicTo(6.600000f, 18.900002f, 6.600000f, 19.000000f, 6.400000f, 19.000000f);
        path_0.cubicTo(6.300000f, 19.000000f, 6.200000f, 18.900000f, 6.200000f, 18.799999f);
        path_0.cubicTo(6.200000f, 18.699999f, 6.300000f, 18.600000f, 6.400000f, 18.600000f);
        path_0.close();
        path_0.moveTo(6.400000f, 19.200001f);
        path_0.cubicTo(6.500000f, 19.200001f, 6.600000f, 19.300001f, 6.600000f, 19.400002f);
        path_0.cubicTo(6.600000f, 19.500002f, 6.500000f, 19.600002f, 6.400000f, 19.600002f);
        path_0.cubicTo(6.300000f, 19.600002f, 6.200000f, 19.500002f, 6.200000f, 19.400002f);
        path_0.cubicTo(6.200000f, 19.300001f, 6.300000f, 19.200001f, 6.400000f, 19.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 19.900000f);
        path_0.cubicTo(6.500000f, 19.900000f, 6.600000f, 20.000000f, 6.600000f, 20.100000f);
        path_0.cubicTo(6.600000f, 20.200001f, 6.500000f, 20.300001f, 6.400000f, 20.300001f);
        path_0.cubicTo(6.300000f, 20.300001f, 6.200000f, 20.200001f, 6.200000f, 20.100000f);
        path_0.cubicTo(6.200000f, 20.000000f, 6.300000f, 19.900000f, 6.400000f, 19.900000f);
        path_0.close();
        path_0.moveTo(6.400000f, 20.500000f);
        path_0.cubicTo(6.500000f, 20.500000f, 6.600000f, 20.600000f, 6.600000f, 20.700001f);
        path_0.cubicTo(6.600000f, 20.800001f, 6.600000f, 21.000000f, 6.400000f, 21.000000f);
        path_0.cubicTo(6.300000f, 21.000000f, 6.200000f, 20.900000f, 6.200000f, 20.799999f);
        path_0.cubicTo(6.200000f, 20.699999f, 6.300000f, 20.500000f, 6.400000f, 20.500000f);
        path_0.close();
        path_0.moveTo(6.400000f, 21.200001f);
        path_0.cubicTo(6.500000f, 21.200001f, 6.600000f, 21.300001f, 6.600000f, 21.400002f);
        path_0.cubicTo(6.600000f, 21.500002f, 6.500000f, 21.600002f, 6.400000f, 21.600002f);
        path_0.cubicTo(6.300000f, 21.600002f, 6.200000f, 21.500002f, 6.200000f, 21.400002f);
        path_0.cubicTo(6.200000f, 21.300001f, 6.300000f, 21.200001f, 6.400000f, 21.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 21.900000f);
        path_0.cubicTo(6.500000f, 21.900000f, 6.600000f, 22.000000f, 6.600000f, 22.100000f);
        path_0.cubicTo(6.600000f, 22.200001f, 6.500000f, 22.300001f, 6.400000f, 22.300001f);
        path_0.cubicTo(6.300000f, 22.300001f, 6.200000f, 22.200001f, 6.200000f, 22.100000f);
        path_0.cubicTo(6.200000f, 22.000000f, 6.300000f, 21.900000f, 6.400000f, 21.900000f);
        path_0.close();
        path_0.moveTo(6.400000f, 22.500000f);
        path_0.cubicTo(6.500000f, 22.500000f, 6.600000f, 22.600000f, 6.600000f, 22.700001f);
        path_0.cubicTo(6.600000f, 22.800001f, 6.500000f, 22.900002f, 6.400000f, 22.900002f);
        path_0.cubicTo(6.300000f, 22.900002f, 6.200000f, 22.800001f, 6.200000f, 22.700001f);
        path_0.cubicTo(6.200000f, 22.600000f, 6.300000f, 22.500000f, 6.400000f, 22.500000f);
        path_0.close();
        path_0.moveTo(6.400000f, 23.200001f);
        path_0.cubicTo(6.500000f, 23.200001f, 6.600000f, 23.300001f, 6.600000f, 23.400002f);
        path_0.cubicTo(6.600000f, 23.500002f, 6.500000f, 23.600002f, 6.400000f, 23.600002f);
        path_0.cubicTo(6.300000f, 23.600002f, 6.200000f, 23.500002f, 6.200000f, 23.400002f);
        path_0.cubicTo(6.200000f, 23.300001f, 6.300000f, 23.200001f, 6.400000f, 23.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 23.800001f);
        path_0.cubicTo(6.500000f, 23.800001f, 6.600000f, 23.900002f, 6.600000f, 24.000002f);
        path_0.cubicTo(6.600000f, 24.100002f, 6.500000f, 24.200003f, 6.400000f, 24.200003f);
        path_0.cubicTo(6.300000f, 24.200003f, 6.200000f, 24.100002f, 6.200000f, 24.000002f);
        path_0.cubicTo(6.200000f, 23.900002f, 6.300000f, 23.800001f, 6.400000f, 23.800001f);
        path_0.close();
        path_0.moveTo(6.400000f, 24.500000f);
        path_0.cubicTo(6.500000f, 24.500000f, 6.600000f, 24.600000f, 6.600000f, 24.700001f);
        path_0.cubicTo(6.600000f, 24.800001f, 6.500000f, 24.900002f, 6.400000f, 24.900002f);
        path_0.cubicTo(6.300000f, 24.900002f, 6.200000f, 24.800001f, 6.200000f, 24.700001f);
        path_0.cubicTo(6.200000f, 24.600000f, 6.300000f, 24.500000f, 6.400000f, 24.500000f);
        path_0.close();
        path_0.moveTo(6.400000f, 25.200001f);
        path_0.cubicTo(6.500000f, 25.200001f, 6.600000f, 25.300001f, 6.600000f, 25.400002f);
        path_0.cubicTo(6.600000f, 25.500002f, 6.500000f, 25.600002f, 6.400000f, 25.600002f);
        path_0.cubicTo(6.300000f, 25.600002f, 6.200000f, 25.500002f, 6.200000f, 25.400002f);
        path_0.cubicTo(6.200000f, 25.300001f, 6.300000f, 25.200001f, 6.400000f, 25.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 25.800001f);
        path_0.cubicTo(6.500000f, 25.800001f, 6.600000f, 25.900002f, 6.600000f, 26.000002f);
        path_0.cubicTo(6.600000f, 26.100002f, 6.500000f, 26.200003f, 6.400000f, 26.200003f);
        path_0.cubicTo(6.300000f, 26.200003f, 6.200000f, 26.100002f, 6.200000f, 26.000002f);
        path_0.cubicTo(6.200000f, 25.900000f, 6.300000f, 25.800001f, 6.400000f, 25.800001f);
        path_0.close();
        path_0.moveTo(6.400000f, 26.500000f);
        path_0.cubicTo(6.500000f, 26.500000f, 6.600000f, 26.600000f, 6.600000f, 26.700001f);
        path_0.cubicTo(6.600000f, 26.800001f, 6.500000f, 26.900002f, 6.400000f, 26.900002f);
        path_0.cubicTo(6.300000f, 26.900002f, 6.200000f, 26.800001f, 6.200000f, 26.700001f);
        path_0.cubicTo(6.200000f, 26.600000f, 6.300000f, 26.500000f, 6.400000f, 26.500000f);
        path_0.close();
        path_0.moveTo(6.400000f, 27.200001f);
        path_0.cubicTo(6.500000f, 27.200001f, 6.600000f, 27.300001f, 6.600000f, 27.400002f);
        path_0.cubicTo(6.600000f, 27.500002f, 6.500000f, 27.600002f, 6.400000f, 27.600002f);
        path_0.cubicTo(6.300000f, 27.600002f, 6.200000f, 27.500002f, 6.200000f, 27.400002f);
        path_0.cubicTo(6.200000f, 27.300001f, 6.300000f, 27.200001f, 6.400000f, 27.200001f);
        path_0.close();
        path_0.moveTo(6.400000f, 27.800001f);
        path_0.cubicTo(6.500000f, 27.800001f, 6.600000f, 27.900002f, 6.600000f, 28.000002f);
        path_0.cubicTo(6.600000f, 28.100002f, 6.500000f, 28.200003f, 6.400000f, 28.200003f);
        path_0.cubicTo(6.300000f, 28.200003f, 6.200000f, 28.100002f, 6.200000f, 28.000002f);
        path_0.cubicTo(6.200000f, 27.900002f, 6.300000f, 27.800001f, 6.400000f, 27.800001f);
        path_0.close();
        path_0.moveTo(6.400000f, 28.500000f);
        path_0.cubicTo(6.500000f, 28.500000f, 6.600000f, 28.600000f, 6.600000f, 28.700001f);
        path_0.cubicTo(6.600000f, 28.800001f, 6.500000f, 28.900002f, 6.400000f, 28.900002f);
        path_0.cubicTo(6.300000f, 28.900002f, 6.200000f, 28.800001f, 6.200000f, 28.700001f);
        path_0.cubicTo(6.200000f, 28.600000f, 6.300000f, 28.500000f, 6.400000f, 28.500000f);
        path_0.close();
        path_0.moveTo(5.800000f, 12.600000f);
        path_0.cubicTo(5.900000f, 12.600000f, 6.000000f, 12.700001f, 6.000000f, 12.800000f);
        path_0.cubicTo(6.000000f, 12.900000f, 5.900000f, 13.000000f, 5.800000f, 13.000000f);
        path_0.cubicTo(5.700000f, 13.000000f, 5.600000f, 12.900000f, 5.600000f, 12.800000f);
        path_0.cubicTo(5.600000f, 12.700001f, 5.600000f, 12.600000f, 5.800000f, 12.600000f);
        path_0.close();
        path_0.moveTo(5.800000f, 13.300000f);
        path_0.cubicTo(5.900000f, 13.300000f, 6.000000f, 13.400001f, 6.000000f, 13.500000f);
        path_0.cubicTo(6.000000f, 13.600000f, 5.900000f, 13.700000f, 5.800000f, 13.700000f);
        path_0.cubicTo(5.700000f, 13.700000f, 5.600000f, 13.599999f, 5.600000f, 13.500000f);
        path_0.cubicTo(5.500000f, 13.400001f, 5.600000f, 13.300000f, 5.800000f, 13.300000f);
        path_0.close();
        path_0.moveTo(5.800000f, 13.900001f);
        path_0.cubicTo(5.900000f, 13.900001f, 6.000000f, 14.000000f, 6.000000f, 14.100000f);
        path_0.cubicTo(6.000000f, 14.200001f, 5.900000f, 14.300000f, 5.800000f, 14.300000f);
        path_0.cubicTo(5.700000f, 14.300000f, 5.600000f, 14.200000f, 5.600000f, 14.100000f);
        path_0.cubicTo(5.600000f, 14.000001f, 5.600000f, 13.900001f, 5.800000f, 13.900001f);
        path_0.close();
        path_0.moveTo(5.800000f, 14.600000f);
        path_0.cubicTo(5.900000f, 14.600000f, 6.000000f, 14.700001f, 6.000000f, 14.800000f);
        path_0.cubicTo(6.000000f, 14.900001f, 5.900000f, 15.000000f, 5.800000f, 15.000000f);
        path_0.cubicTo(5.700000f, 15.000000f, 5.600000f, 14.900000f, 5.600000f, 14.800000f);
        path_0.cubicTo(5.600000f, 14.700001f, 5.600000f, 14.600000f, 5.800000f, 14.600000f);
        path_0.close();
        path_0.moveTo(5.800000f, 15.200000f);
        path_0.cubicTo(5.900000f, 15.200000f, 6.000000f, 15.300000f, 6.000000f, 15.400000f);
        path_0.cubicTo(6.000000f, 15.500000f, 5.900000f, 15.599999f, 5.800000f, 15.599999f);
        path_0.cubicTo(5.700000f, 15.599999f, 5.600000f, 15.499999f, 5.600000f, 15.400000f);
        path_0.cubicTo(5.600000f, 15.300000f, 5.600000f, 15.200000f, 5.800000f, 15.200000f);
        path_0.close();
        path_0.moveTo(5.800000f, 15.900001f);
        path_0.cubicTo(5.900000f, 15.900001f, 6.000000f, 16.000000f, 6.000000f, 16.100000f);
        path_0.cubicTo(6.000000f, 16.200001f, 5.900000f, 16.300001f, 5.800000f, 16.300001f);
        path_0.cubicTo(5.700000f, 16.300001f, 5.600000f, 16.200001f, 5.600000f, 16.100000f);
        path_0.cubicTo(5.500000f, 16.000000f, 5.600000f, 15.900001f, 5.800000f, 15.900001f);
        path_0.close();
        path_0.moveTo(5.800000f, 16.600000f);
        path_0.cubicTo(5.900000f, 16.600000f, 6.000000f, 16.700001f, 6.000000f, 16.800001f);
        path_0.cubicTo(6.000000f, 16.900000f, 5.900000f, 17.000000f, 5.800000f, 17.000000f);
        path_0.cubicTo(5.700000f, 17.000000f, 5.600000f, 16.900000f, 5.600000f, 16.799999f);
        path_0.cubicTo(5.500000f, 16.700001f, 5.600000f, 16.600000f, 5.800000f, 16.600000f);
        path_0.close();
        path_0.moveTo(5.800000f, 17.200001f);
        path_0.cubicTo(5.900000f, 17.200001f, 6.000000f, 17.300001f, 6.000000f, 17.400002f);
        path_0.cubicTo(6.000000f, 17.500002f, 5.900000f, 17.600002f, 5.800000f, 17.600002f);
        path_0.cubicTo(5.700000f, 17.600002f, 5.600000f, 17.500002f, 5.600000f, 17.400002f);
        path_0.cubicTo(5.500000f, 17.300001f, 5.600000f, 17.200001f, 5.800000f, 17.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 17.900000f);
        path_0.cubicTo(5.900000f, 17.900000f, 6.000000f, 18.000000f, 6.000000f, 18.100000f);
        path_0.cubicTo(6.000000f, 18.200001f, 5.900000f, 18.300001f, 5.800000f, 18.300001f);
        path_0.cubicTo(5.700000f, 18.300001f, 5.600000f, 18.200001f, 5.600000f, 18.100000f);
        path_0.cubicTo(5.600000f, 18.000000f, 5.600000f, 17.900000f, 5.800000f, 17.900000f);
        path_0.close();
        path_0.moveTo(5.800000f, 18.600000f);
        path_0.cubicTo(5.900000f, 18.600000f, 6.000000f, 18.700001f, 6.000000f, 18.800001f);
        path_0.cubicTo(6.000000f, 18.900002f, 5.900000f, 19.000000f, 5.800000f, 19.000000f);
        path_0.cubicTo(5.700000f, 19.000000f, 5.600000f, 18.900000f, 5.600000f, 18.799999f);
        path_0.cubicTo(5.600000f, 18.699999f, 5.600000f, 18.600000f, 5.800000f, 18.600000f);
        path_0.close();
        path_0.moveTo(5.800000f, 19.200001f);
        path_0.cubicTo(5.900000f, 19.200001f, 6.000000f, 19.300001f, 6.000000f, 19.400002f);
        path_0.cubicTo(6.000000f, 19.500002f, 5.900000f, 19.600002f, 5.800000f, 19.600002f);
        path_0.cubicTo(5.700000f, 19.600002f, 5.600000f, 19.500002f, 5.600000f, 19.400002f);
        path_0.cubicTo(5.500000f, 19.300001f, 5.600000f, 19.200001f, 5.800000f, 19.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 19.900000f);
        path_0.cubicTo(5.900000f, 19.900000f, 6.000000f, 20.000000f, 6.000000f, 20.100000f);
        path_0.cubicTo(6.000000f, 20.200001f, 5.900000f, 20.300001f, 5.800000f, 20.300001f);
        path_0.cubicTo(5.700000f, 20.300001f, 5.600000f, 20.200001f, 5.600000f, 20.100000f);
        path_0.cubicTo(5.500000f, 20.000000f, 5.600000f, 19.900000f, 5.800000f, 19.900000f);
        path_0.close();
        path_0.moveTo(5.800000f, 20.500000f);
        path_0.cubicTo(5.900000f, 20.500000f, 6.000000f, 20.600000f, 6.000000f, 20.700001f);
        path_0.cubicTo(6.000000f, 20.800001f, 5.900000f, 21.000000f, 5.800000f, 21.000000f);
        path_0.cubicTo(5.700000f, 21.000000f, 5.600000f, 20.900000f, 5.600000f, 20.799999f);
        path_0.cubicTo(5.600000f, 20.699999f, 5.600000f, 20.500000f, 5.800000f, 20.500000f);
        path_0.close();
        path_0.moveTo(5.800000f, 21.200001f);
        path_0.cubicTo(5.900000f, 21.200001f, 6.000000f, 21.300001f, 6.000000f, 21.400002f);
        path_0.cubicTo(6.000000f, 21.500002f, 5.900000f, 21.600002f, 5.800000f, 21.600002f);
        path_0.cubicTo(5.700000f, 21.600002f, 5.600000f, 21.500002f, 5.600000f, 21.400002f);
        path_0.cubicTo(5.600000f, 21.300001f, 5.600000f, 21.200001f, 5.800000f, 21.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 21.900000f);
        path_0.cubicTo(5.900000f, 21.900000f, 6.000000f, 22.000000f, 6.000000f, 22.100000f);
        path_0.cubicTo(6.000000f, 22.200001f, 5.900000f, 22.300001f, 5.800000f, 22.300001f);
        path_0.cubicTo(5.700000f, 22.300001f, 5.600000f, 22.200001f, 5.600000f, 22.100000f);
        path_0.cubicTo(5.600000f, 22.000000f, 5.600000f, 21.900000f, 5.800000f, 21.900000f);
        path_0.close();
        path_0.moveTo(5.800000f, 22.500000f);
        path_0.cubicTo(5.900000f, 22.500000f, 6.000000f, 22.600000f, 6.000000f, 22.700001f);
        path_0.cubicTo(6.000000f, 22.800001f, 5.900000f, 22.900002f, 5.800000f, 22.900002f);
        path_0.cubicTo(5.700000f, 22.900002f, 5.600000f, 22.800001f, 5.600000f, 22.700001f);
        path_0.cubicTo(5.500000f, 22.600000f, 5.600000f, 22.500000f, 5.800000f, 22.500000f);
        path_0.close();
        path_0.moveTo(5.800000f, 23.200001f);
        path_0.cubicTo(5.900000f, 23.200001f, 6.000000f, 23.300001f, 6.000000f, 23.400002f);
        path_0.cubicTo(6.000000f, 23.500002f, 5.900000f, 23.600002f, 5.800000f, 23.600002f);
        path_0.cubicTo(5.700000f, 23.600002f, 5.600000f, 23.500002f, 5.600000f, 23.400002f);
        path_0.cubicTo(5.600000f, 23.300001f, 5.600000f, 23.200001f, 5.800000f, 23.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 23.800001f);
        path_0.cubicTo(5.900000f, 23.800001f, 6.000000f, 23.900002f, 6.000000f, 24.000002f);
        path_0.cubicTo(6.000000f, 24.100002f, 5.900000f, 24.200003f, 5.800000f, 24.200003f);
        path_0.cubicTo(5.700000f, 24.200003f, 5.600000f, 24.100002f, 5.600000f, 24.000002f);
        path_0.cubicTo(5.600000f, 23.900002f, 5.600000f, 23.800001f, 5.800000f, 23.800001f);
        path_0.close();
        path_0.moveTo(5.800000f, 24.500000f);
        path_0.cubicTo(5.900000f, 24.500000f, 6.000000f, 24.600000f, 6.000000f, 24.700001f);
        path_0.cubicTo(6.000000f, 24.800001f, 5.900000f, 24.900002f, 5.800000f, 24.900002f);
        path_0.cubicTo(5.700000f, 24.900002f, 5.600000f, 24.800001f, 5.600000f, 24.700001f);
        path_0.cubicTo(5.600000f, 24.600000f, 5.600000f, 24.500000f, 5.800000f, 24.500000f);
        path_0.close();
        path_0.moveTo(5.800000f, 25.200001f);
        path_0.cubicTo(5.900000f, 25.200001f, 6.000000f, 25.300001f, 6.000000f, 25.400002f);
        path_0.cubicTo(6.000000f, 25.500002f, 5.900000f, 25.600002f, 5.800000f, 25.600002f);
        path_0.cubicTo(5.700000f, 25.600002f, 5.600000f, 25.500002f, 5.600000f, 25.400002f);
        path_0.cubicTo(5.600000f, 25.300001f, 5.600000f, 25.200001f, 5.800000f, 25.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 25.800001f);
        path_0.cubicTo(5.900000f, 25.800001f, 6.000000f, 25.900000f, 6.000000f, 26.000000f);
        path_0.cubicTo(6.000000f, 26.100000f, 5.900000f, 26.200001f, 5.800000f, 26.200001f);
        path_0.cubicTo(5.700000f, 26.200001f, 5.600000f, 26.100000f, 5.600000f, 26.000000f);
        path_0.cubicTo(5.500000f, 25.900000f, 5.600000f, 25.800001f, 5.800000f, 25.800001f);
        path_0.close();
        path_0.moveTo(5.800000f, 26.500000f);
        path_0.cubicTo(5.900000f, 26.500000f, 6.000000f, 26.600000f, 6.000000f, 26.700001f);
        path_0.cubicTo(6.000000f, 26.800001f, 5.900000f, 26.900002f, 5.800000f, 26.900002f);
        path_0.cubicTo(5.700000f, 26.900002f, 5.600000f, 26.800001f, 5.600000f, 26.700001f);
        path_0.cubicTo(5.600000f, 26.600000f, 5.600000f, 26.500000f, 5.800000f, 26.500000f);
        path_0.close();
        path_0.moveTo(5.800000f, 27.200001f);
        path_0.cubicTo(5.900000f, 27.200001f, 6.000000f, 27.300001f, 6.000000f, 27.400002f);
        path_0.cubicTo(6.000000f, 27.500002f, 5.900000f, 27.600002f, 5.800000f, 27.600002f);
        path_0.cubicTo(5.700000f, 27.600002f, 5.600000f, 27.500002f, 5.600000f, 27.400002f);
        path_0.cubicTo(5.600000f, 27.300001f, 5.600000f, 27.200001f, 5.800000f, 27.200001f);
        path_0.close();
        path_0.moveTo(5.800000f, 27.800001f);
        path_0.cubicTo(5.900000f, 27.800001f, 6.000000f, 27.900000f, 6.000000f, 28.000000f);
        path_0.cubicTo(6.000000f, 28.100000f, 5.900000f, 28.200001f, 5.800000f, 28.200001f);
        path_0.cubicTo(5.700000f, 28.200001f, 5.600000f, 28.100000f, 5.600000f, 28.000000f);
        path_0.cubicTo(5.600000f, 27.900000f, 5.600000f, 27.800001f, 5.800000f, 27.800001f);
        path_0.close();
        path_0.moveTo(5.800000f, 28.500000f);
        path_0.cubicTo(5.900000f, 28.500000f, 6.000000f, 28.600000f, 6.000000f, 28.700001f);
        path_0.cubicTo(6.000000f, 28.800001f, 5.900000f, 28.900002f, 5.800000f, 28.900002f);
        path_0.cubicTo(5.700000f, 28.900002f, 5.600000f, 28.800001f, 5.600000f, 28.700001f);
        path_0.cubicTo(5.600000f, 28.600000f, 5.600000f, 28.500000f, 5.800000f, 28.500000f);
        path_0.close();
        path_0.moveTo(5.100000f, 12.600000f);
        path_0.cubicTo(5.200000f, 12.600000f, 5.300000f, 12.700001f, 5.300000f, 12.800000f);
        path_0.cubicTo(5.300000f, 12.900000f, 5.200000f, 13.000000f, 5.100000f, 13.000000f);
        path_0.cubicTo(5.000000f, 13.000000f, 4.900000f, 12.900000f, 4.900000f, 12.800000f);
        path_0.cubicTo(4.900000f, 12.700001f, 5.000000f, 12.600000f, 5.100000f, 12.600000f);
        path_0.close();
        path_0.moveTo(5.100000f, 13.300000f);
        path_0.cubicTo(5.200000f, 13.300000f, 5.300000f, 13.400001f, 5.300000f, 13.500000f);
        path_0.cubicTo(5.300000f, 13.600000f, 5.200000f, 13.700000f, 5.100000f, 13.700000f);
        path_0.cubicTo(5.000000f, 13.700000f, 4.900000f, 13.599999f, 4.900000f, 13.500000f);
        path_0.cubicTo(4.900000f, 13.400001f, 5.000000f, 13.300000f, 5.100000f, 13.300000f);
        path_0.close();
        path_0.moveTo(5.100000f, 13.900001f);
        path_0.cubicTo(5.200000f, 13.900001f, 5.300000f, 14.000001f, 5.300000f, 14.100000f);
        path_0.cubicTo(5.300000f, 14.200000f, 5.200000f, 14.300000f, 5.100000f, 14.300000f);
        path_0.cubicTo(5.000000f, 14.300000f, 4.900000f, 14.200000f, 4.900000f, 14.100000f);
        path_0.cubicTo(4.900000f, 14.000001f, 5.000000f, 13.900001f, 5.100000f, 13.900001f);
        path_0.close();
        path_0.moveTo(5.100000f, 14.600000f);
        path_0.cubicTo(5.200000f, 14.600000f, 5.300000f, 14.700001f, 5.300000f, 14.800000f);
        path_0.cubicTo(5.300000f, 14.900001f, 5.200000f, 15.000000f, 5.100000f, 15.000000f);
        path_0.cubicTo(5.000000f, 15.000000f, 4.900000f, 14.900000f, 4.900000f, 14.800000f);
        path_0.cubicTo(4.900000f, 14.700001f, 5.000000f, 14.600000f, 5.100000f, 14.600000f);
        path_0.close();
        path_0.moveTo(5.100000f, 15.200000f);
        path_0.cubicTo(5.200000f, 15.200000f, 5.300000f, 15.300000f, 5.300000f, 15.400000f);
        path_0.cubicTo(5.300000f, 15.500000f, 5.200000f, 15.599999f, 5.100000f, 15.599999f);
        path_0.cubicTo(5.000000f, 15.599999f, 4.900000f, 15.499999f, 4.900000f, 15.400000f);
        path_0.cubicTo(4.900000f, 15.300000f, 5.000000f, 15.200000f, 5.100000f, 15.200000f);
        path_0.close();
        path_0.moveTo(5.100000f, 15.900001f);
        path_0.cubicTo(5.200000f, 15.900001f, 5.300000f, 16.000000f, 5.300000f, 16.100000f);
        path_0.cubicTo(5.300000f, 16.200001f, 5.200000f, 16.300001f, 5.100000f, 16.300001f);
        path_0.cubicTo(5.000000f, 16.300001f, 4.900000f, 16.200001f, 4.900000f, 16.100000f);
        path_0.cubicTo(4.900000f, 16.000000f, 5.000000f, 15.900001f, 5.100000f, 15.900001f);
        path_0.close();
        path_0.moveTo(5.100000f, 16.600000f);
        path_0.cubicTo(5.200000f, 16.600000f, 5.300000f, 16.700001f, 5.300000f, 16.800001f);
        path_0.cubicTo(5.300000f, 16.900002f, 5.200000f, 17.000002f, 5.100000f, 17.000002f);
        path_0.cubicTo(5.000000f, 17.000002f, 4.900000f, 16.900002f, 4.900000f, 16.800001f);
        path_0.cubicTo(4.900000f, 16.700001f, 5.000000f, 16.600000f, 5.100000f, 16.600000f);
        path_0.close();
        path_0.moveTo(5.100000f, 17.200001f);
        path_0.cubicTo(5.200000f, 17.200001f, 5.300000f, 17.300001f, 5.300000f, 17.400002f);
        path_0.cubicTo(5.300000f, 17.500002f, 5.200000f, 17.600002f, 5.100000f, 17.600002f);
        path_0.cubicTo(5.000000f, 17.600002f, 4.900000f, 17.500002f, 4.900000f, 17.400002f);
        path_0.cubicTo(4.900000f, 17.300001f, 5.000000f, 17.200001f, 5.100000f, 17.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 17.900000f);
        path_0.cubicTo(5.200000f, 17.900000f, 5.300000f, 18.000000f, 5.300000f, 18.100000f);
        path_0.cubicTo(5.300000f, 18.200001f, 5.200000f, 18.300001f, 5.100000f, 18.300001f);
        path_0.cubicTo(5.000000f, 18.300001f, 4.900000f, 18.200001f, 4.900000f, 18.100000f);
        path_0.cubicTo(4.900000f, 18.000000f, 5.000000f, 17.900000f, 5.100000f, 17.900000f);
        path_0.close();
        path_0.moveTo(5.100000f, 18.600000f);
        path_0.cubicTo(5.200000f, 18.600000f, 5.300000f, 18.700001f, 5.300000f, 18.800001f);
        path_0.cubicTo(5.300000f, 18.900002f, 5.200000f, 19.000000f, 5.100000f, 19.000000f);
        path_0.cubicTo(5.000000f, 19.000000f, 4.900000f, 18.900000f, 4.900000f, 18.799999f);
        path_0.cubicTo(4.900000f, 18.699999f, 5.000000f, 18.600000f, 5.100000f, 18.600000f);
        path_0.close();
        path_0.moveTo(5.100000f, 19.200001f);
        path_0.cubicTo(5.200000f, 19.200001f, 5.300000f, 19.300001f, 5.300000f, 19.400002f);
        path_0.cubicTo(5.300000f, 19.500002f, 5.200000f, 19.600002f, 5.100000f, 19.600002f);
        path_0.cubicTo(5.000000f, 19.600002f, 4.900000f, 19.500002f, 4.900000f, 19.400002f);
        path_0.cubicTo(4.900000f, 19.300001f, 5.000000f, 19.200001f, 5.100000f, 19.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 19.900000f);
        path_0.cubicTo(5.200000f, 19.900000f, 5.300000f, 20.000000f, 5.300000f, 20.100000f);
        path_0.cubicTo(5.300000f, 20.200001f, 5.200000f, 20.300001f, 5.100000f, 20.300001f);
        path_0.cubicTo(5.000000f, 20.300001f, 4.900000f, 20.200001f, 4.900000f, 20.100000f);
        path_0.cubicTo(4.900000f, 20.000000f, 5.000000f, 19.900000f, 5.100000f, 19.900000f);
        path_0.close();
        path_0.moveTo(5.100000f, 20.500000f);
        path_0.cubicTo(5.200000f, 20.500000f, 5.300000f, 20.600000f, 5.300000f, 20.700001f);
        path_0.cubicTo(5.300000f, 20.800001f, 5.200000f, 21.000000f, 5.100000f, 21.000000f);
        path_0.cubicTo(5.000000f, 21.000000f, 4.900000f, 20.900000f, 4.900000f, 20.799999f);
        path_0.cubicTo(4.900000f, 20.699999f, 5.000000f, 20.500000f, 5.100000f, 20.500000f);
        path_0.close();
        path_0.moveTo(5.100000f, 21.200001f);
        path_0.cubicTo(5.200000f, 21.200001f, 5.300000f, 21.300001f, 5.300000f, 21.400002f);
        path_0.cubicTo(5.300000f, 21.500002f, 5.200000f, 21.600002f, 5.100000f, 21.600002f);
        path_0.cubicTo(5.000000f, 21.600002f, 4.900000f, 21.500002f, 4.900000f, 21.400002f);
        path_0.cubicTo(4.900000f, 21.300001f, 5.000000f, 21.200001f, 5.100000f, 21.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 21.900000f);
        path_0.cubicTo(5.200000f, 21.900000f, 5.300000f, 22.000000f, 5.300000f, 22.100000f);
        path_0.cubicTo(5.300000f, 22.200001f, 5.200000f, 22.300001f, 5.100000f, 22.300001f);
        path_0.cubicTo(5.000000f, 22.300001f, 4.900000f, 22.200001f, 4.900000f, 22.100000f);
        path_0.cubicTo(4.900000f, 22.000000f, 5.000000f, 21.900000f, 5.100000f, 21.900000f);
        path_0.close();
        path_0.moveTo(5.100000f, 22.500000f);
        path_0.cubicTo(5.200000f, 22.500000f, 5.300000f, 22.600000f, 5.300000f, 22.700001f);
        path_0.cubicTo(5.300000f, 22.800001f, 5.200000f, 22.900002f, 5.100000f, 22.900002f);
        path_0.cubicTo(5.000000f, 22.900002f, 4.900000f, 22.800001f, 4.900000f, 22.700001f);
        path_0.cubicTo(4.900000f, 22.600000f, 5.000000f, 22.500000f, 5.100000f, 22.500000f);
        path_0.close();
        path_0.moveTo(5.100000f, 23.200001f);
        path_0.cubicTo(5.200000f, 23.200001f, 5.300000f, 23.300001f, 5.300000f, 23.400002f);
        path_0.cubicTo(5.300000f, 23.500002f, 5.200000f, 23.600002f, 5.100000f, 23.600002f);
        path_0.cubicTo(5.000000f, 23.600002f, 4.900000f, 23.500002f, 4.900000f, 23.400002f);
        path_0.cubicTo(4.900000f, 23.300001f, 5.000000f, 23.200001f, 5.100000f, 23.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 23.800001f);
        path_0.cubicTo(5.200000f, 23.800001f, 5.300000f, 23.900002f, 5.300000f, 24.000002f);
        path_0.cubicTo(5.300000f, 24.100002f, 5.200000f, 24.200003f, 5.100000f, 24.200003f);
        path_0.cubicTo(5.000000f, 24.200003f, 4.900000f, 24.100002f, 4.900000f, 24.000002f);
        path_0.cubicTo(4.900000f, 23.900002f, 5.000000f, 23.800001f, 5.100000f, 23.800001f);
        path_0.close();
        path_0.moveTo(5.100000f, 24.500000f);
        path_0.cubicTo(5.200000f, 24.500000f, 5.300000f, 24.600000f, 5.300000f, 24.700001f);
        path_0.cubicTo(5.300000f, 24.800001f, 5.200000f, 24.900002f, 5.100000f, 24.900002f);
        path_0.cubicTo(5.000000f, 24.900002f, 4.900000f, 24.800001f, 4.900000f, 24.700001f);
        path_0.cubicTo(4.900000f, 24.600000f, 5.000000f, 24.500000f, 5.100000f, 24.500000f);
        path_0.close();
        path_0.moveTo(5.100000f, 25.200001f);
        path_0.cubicTo(5.200000f, 25.200001f, 5.300000f, 25.300001f, 5.300000f, 25.400002f);
        path_0.cubicTo(5.300000f, 25.500002f, 5.200000f, 25.600002f, 5.100000f, 25.600002f);
        path_0.cubicTo(5.000000f, 25.600002f, 4.900000f, 25.500002f, 4.900000f, 25.400002f);
        path_0.cubicTo(4.900000f, 25.300001f, 5.000000f, 25.200001f, 5.100000f, 25.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 25.800001f);
        path_0.cubicTo(5.200000f, 25.800001f, 5.300000f, 25.900002f, 5.300000f, 26.000002f);
        path_0.cubicTo(5.300000f, 26.100002f, 5.200000f, 26.200003f, 5.100000f, 26.200003f);
        path_0.cubicTo(5.000000f, 26.200003f, 4.900000f, 26.200001f, 4.900000f, 26.000000f);
        path_0.cubicTo(4.900000f, 25.900000f, 5.000000f, 25.800001f, 5.100000f, 25.800001f);
        path_0.close();
        path_0.moveTo(5.100000f, 26.500000f);
        path_0.cubicTo(5.200000f, 26.500000f, 5.300000f, 26.600000f, 5.300000f, 26.700001f);
        path_0.cubicTo(5.300000f, 26.800001f, 5.200000f, 26.900002f, 5.100000f, 26.900002f);
        path_0.cubicTo(5.000000f, 26.900002f, 4.900000f, 26.800001f, 4.900000f, 26.700001f);
        path_0.cubicTo(4.900000f, 26.600000f, 5.000000f, 26.500000f, 5.100000f, 26.500000f);
        path_0.close();
        path_0.moveTo(5.100000f, 27.200001f);
        path_0.cubicTo(5.200000f, 27.200001f, 5.300000f, 27.300001f, 5.300000f, 27.400002f);
        path_0.cubicTo(5.300000f, 27.500002f, 5.200000f, 27.600002f, 5.100000f, 27.600002f);
        path_0.cubicTo(5.000000f, 27.600002f, 4.900000f, 27.500002f, 4.900000f, 27.400002f);
        path_0.cubicTo(4.900000f, 27.300001f, 5.000000f, 27.200001f, 5.100000f, 27.200001f);
        path_0.close();
        path_0.moveTo(5.100000f, 27.800001f);
        path_0.cubicTo(5.200000f, 27.800001f, 5.300000f, 27.900002f, 5.300000f, 28.000002f);
        path_0.cubicTo(5.300000f, 28.100002f, 5.200000f, 28.200003f, 5.100000f, 28.200003f);
        path_0.cubicTo(5.000000f, 28.200003f, 4.900000f, 28.100000f, 4.900000f, 28.000000f);
        path_0.cubicTo(4.900000f, 27.900000f, 5.000000f, 27.800001f, 5.100000f, 27.800001f);
        path_0.close();
        path_0.moveTo(5.100000f, 28.500000f);
        path_0.cubicTo(5.200000f, 28.500000f, 5.300000f, 28.600000f, 5.300000f, 28.700001f);
        path_0.cubicTo(5.300000f, 28.800001f, 5.200000f, 28.900002f, 5.100000f, 28.900002f);
        path_0.cubicTo(5.000000f, 28.900002f, 4.900000f, 28.800001f, 4.900000f, 28.700001f);
        path_0.cubicTo(4.900000f, 28.600000f, 5.000000f, 28.500000f, 5.100000f, 28.500000f);
        path_0.close();
        path_0.moveTo(4.400000f, 12.600000f);
        path_0.cubicTo(4.500000f, 12.600000f, 4.600000f, 12.700001f, 4.600000f, 12.800000f);
        path_0.cubicTo(4.600000f, 12.900000f, 4.500000f, 13.000000f, 4.400000f, 13.000000f);
        path_0.cubicTo(4.300000f, 13.000000f, 4.200000f, 12.900000f, 4.200000f, 12.800000f);
        path_0.cubicTo(4.200000f, 12.700001f, 4.300000f, 12.600000f, 4.400000f, 12.600000f);
        path_0.close();
        path_0.moveTo(4.400000f, 13.300000f);
        path_0.cubicTo(4.500000f, 13.300000f, 4.600000f, 13.400001f, 4.600000f, 13.500000f);
        path_0.cubicTo(4.600000f, 13.600000f, 4.500000f, 13.700000f, 4.400000f, 13.700000f);
        path_0.cubicTo(4.300000f, 13.700000f, 4.200000f, 13.599999f, 4.200000f, 13.500000f);
        path_0.cubicTo(4.200000f, 13.400001f, 4.300000f, 13.300000f, 4.400000f, 13.300000f);
        path_0.close();
        path_0.moveTo(4.400000f, 13.900001f);
        path_0.cubicTo(4.500000f, 13.900001f, 4.600000f, 14.000001f, 4.600000f, 14.100000f);
        path_0.cubicTo(4.600000f, 14.200000f, 4.500000f, 14.300000f, 4.400000f, 14.300000f);
        path_0.cubicTo(4.300000f, 14.300000f, 4.200000f, 14.200000f, 4.200000f, 14.100000f);
        path_0.cubicTo(4.200000f, 14.000001f, 4.300000f, 13.900001f, 4.400000f, 13.900001f);
        path_0.close();
        path_0.moveTo(4.400000f, 14.600000f);
        path_0.cubicTo(4.500000f, 14.600000f, 4.600000f, 14.700001f, 4.600000f, 14.800000f);
        path_0.cubicTo(4.600000f, 14.900001f, 4.500000f, 15.000000f, 4.400000f, 15.000000f);
        path_0.cubicTo(4.300000f, 15.000000f, 4.200000f, 14.900000f, 4.200000f, 14.800000f);
        path_0.cubicTo(4.200000f, 14.700000f, 4.300000f, 14.600000f, 4.400000f, 14.600000f);
        path_0.close();
        path_0.moveTo(4.400000f, 15.200000f);
        path_0.cubicTo(4.500000f, 15.200000f, 4.600000f, 15.300000f, 4.600000f, 15.400000f);
        path_0.cubicTo(4.600000f, 15.500000f, 4.500000f, 15.599999f, 4.400000f, 15.599999f);
        path_0.cubicTo(4.300000f, 15.599999f, 4.200000f, 15.499999f, 4.200000f, 15.400000f);
        path_0.cubicTo(4.200000f, 15.300000f, 4.300000f, 15.200000f, 4.400000f, 15.200000f);
        path_0.close();
        path_0.moveTo(4.400000f, 15.900001f);
        path_0.cubicTo(4.500000f, 15.900001f, 4.600000f, 16.000000f, 4.600000f, 16.100000f);
        path_0.cubicTo(4.600000f, 16.200001f, 4.500000f, 16.300001f, 4.400000f, 16.300001f);
        path_0.cubicTo(4.300000f, 16.300001f, 4.200000f, 16.200001f, 4.200000f, 16.100000f);
        path_0.cubicTo(4.200000f, 16.000000f, 4.300000f, 15.900001f, 4.400000f, 15.900001f);
        path_0.close();
        path_0.moveTo(4.400000f, 16.600000f);
        path_0.cubicTo(4.500000f, 16.600000f, 4.600000f, 16.700001f, 4.600000f, 16.800001f);
        path_0.cubicTo(4.600000f, 16.900002f, 4.500000f, 17.000002f, 4.400000f, 17.000002f);
        path_0.cubicTo(4.300000f, 17.000002f, 4.200000f, 16.900002f, 4.200000f, 16.800001f);
        path_0.cubicTo(4.200000f, 16.700001f, 4.300000f, 16.600000f, 4.400000f, 16.600000f);
        path_0.close();
        path_0.moveTo(4.400000f, 17.200001f);
        path_0.cubicTo(4.500000f, 17.200001f, 4.600000f, 17.300001f, 4.600000f, 17.400002f);
        path_0.cubicTo(4.600000f, 17.500002f, 4.500000f, 17.600002f, 4.400000f, 17.600002f);
        path_0.cubicTo(4.300000f, 17.600002f, 4.200000f, 17.500002f, 4.200000f, 17.400002f);
        path_0.cubicTo(4.200000f, 17.300001f, 4.300000f, 17.200001f, 4.400000f, 17.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 17.900000f);
        path_0.cubicTo(4.500000f, 17.900000f, 4.600000f, 18.000000f, 4.600000f, 18.100000f);
        path_0.cubicTo(4.600000f, 18.200001f, 4.500000f, 18.300001f, 4.400000f, 18.300001f);
        path_0.cubicTo(4.300000f, 18.300001f, 4.200000f, 18.200001f, 4.200000f, 18.100000f);
        path_0.cubicTo(4.200000f, 18.000000f, 4.300000f, 17.900000f, 4.400000f, 17.900000f);
        path_0.close();
        path_0.moveTo(4.400000f, 18.600000f);
        path_0.cubicTo(4.500000f, 18.600000f, 4.600000f, 18.700001f, 4.600000f, 18.800001f);
        path_0.cubicTo(4.600000f, 18.900002f, 4.500000f, 19.000000f, 4.400000f, 19.000000f);
        path_0.cubicTo(4.300000f, 19.000000f, 4.200000f, 18.900000f, 4.200000f, 18.799999f);
        path_0.cubicTo(4.200000f, 18.699999f, 4.300000f, 18.600000f, 4.400000f, 18.600000f);
        path_0.close();
        path_0.moveTo(4.400000f, 19.200001f);
        path_0.cubicTo(4.500000f, 19.200001f, 4.600000f, 19.300001f, 4.600000f, 19.400002f);
        path_0.cubicTo(4.600000f, 19.500002f, 4.500000f, 19.600002f, 4.400000f, 19.600002f);
        path_0.cubicTo(4.300000f, 19.600002f, 4.200000f, 19.500002f, 4.200000f, 19.400002f);
        path_0.cubicTo(4.200000f, 19.300001f, 4.300000f, 19.200001f, 4.400000f, 19.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 19.900000f);
        path_0.cubicTo(4.500000f, 19.900000f, 4.600000f, 20.000000f, 4.600000f, 20.100000f);
        path_0.cubicTo(4.600000f, 20.200001f, 4.500000f, 20.300001f, 4.400000f, 20.300001f);
        path_0.cubicTo(4.300000f, 20.300001f, 4.200000f, 20.200001f, 4.200000f, 20.100000f);
        path_0.cubicTo(4.200000f, 20.000000f, 4.300000f, 19.900000f, 4.400000f, 19.900000f);
        path_0.close();
        path_0.moveTo(4.400000f, 20.500000f);
        path_0.cubicTo(4.500000f, 20.500000f, 4.600000f, 20.600000f, 4.600000f, 20.700001f);
        path_0.cubicTo(4.600000f, 20.800001f, 4.500000f, 21.000000f, 4.400000f, 21.000000f);
        path_0.cubicTo(4.300000f, 21.000000f, 4.200000f, 20.900000f, 4.200000f, 20.799999f);
        path_0.cubicTo(4.200000f, 20.699999f, 4.300000f, 20.500000f, 4.400000f, 20.500000f);
        path_0.close();
        path_0.moveTo(4.400000f, 21.200001f);
        path_0.cubicTo(4.500000f, 21.200001f, 4.600000f, 21.300001f, 4.600000f, 21.400002f);
        path_0.cubicTo(4.600000f, 21.500002f, 4.500000f, 21.600002f, 4.400000f, 21.600002f);
        path_0.cubicTo(4.300000f, 21.600002f, 4.200000f, 21.500002f, 4.200000f, 21.400002f);
        path_0.cubicTo(4.200000f, 21.300001f, 4.300000f, 21.200001f, 4.400000f, 21.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 21.900000f);
        path_0.cubicTo(4.500000f, 21.900000f, 4.600000f, 22.000000f, 4.600000f, 22.100000f);
        path_0.cubicTo(4.600000f, 22.200001f, 4.500000f, 22.300001f, 4.400000f, 22.300001f);
        path_0.cubicTo(4.300000f, 22.300001f, 4.200000f, 22.200001f, 4.200000f, 22.100000f);
        path_0.cubicTo(4.200000f, 22.000000f, 4.300000f, 21.900000f, 4.400000f, 21.900000f);
        path_0.close();
        path_0.moveTo(4.400000f, 22.500000f);
        path_0.cubicTo(4.500000f, 22.500000f, 4.600000f, 22.600000f, 4.600000f, 22.700001f);
        path_0.cubicTo(4.600000f, 22.800001f, 4.500000f, 22.900002f, 4.400000f, 22.900002f);
        path_0.cubicTo(4.300000f, 22.900002f, 4.200000f, 22.800001f, 4.200000f, 22.700001f);
        path_0.cubicTo(4.200000f, 22.600000f, 4.300000f, 22.500000f, 4.400000f, 22.500000f);
        path_0.close();
        path_0.moveTo(4.400000f, 23.200001f);
        path_0.cubicTo(4.500000f, 23.200001f, 4.600000f, 23.300001f, 4.600000f, 23.400002f);
        path_0.cubicTo(4.600000f, 23.500002f, 4.500000f, 23.600002f, 4.400000f, 23.600002f);
        path_0.cubicTo(4.300000f, 23.600002f, 4.200000f, 23.500002f, 4.200000f, 23.400002f);
        path_0.cubicTo(4.200000f, 23.300001f, 4.300000f, 23.200001f, 4.400000f, 23.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 23.800001f);
        path_0.cubicTo(4.500000f, 23.800001f, 4.600000f, 23.900002f, 4.600000f, 24.000002f);
        path_0.cubicTo(4.600000f, 24.100002f, 4.500000f, 24.200003f, 4.400000f, 24.200003f);
        path_0.cubicTo(4.300000f, 24.200003f, 4.200000f, 24.100002f, 4.200000f, 24.000002f);
        path_0.cubicTo(4.200000f, 23.900002f, 4.300000f, 23.800001f, 4.400000f, 23.800001f);
        path_0.close();
        path_0.moveTo(4.400000f, 24.500000f);
        path_0.cubicTo(4.500000f, 24.500000f, 4.600000f, 24.600000f, 4.600000f, 24.700001f);
        path_0.cubicTo(4.600000f, 24.800001f, 4.500000f, 24.900002f, 4.400000f, 24.900002f);
        path_0.cubicTo(4.300000f, 24.900002f, 4.200000f, 24.800001f, 4.200000f, 24.700001f);
        path_0.cubicTo(4.200000f, 24.600000f, 4.300000f, 24.500000f, 4.400000f, 24.500000f);
        path_0.close();
        path_0.moveTo(4.400000f, 25.200001f);
        path_0.cubicTo(4.500000f, 25.200001f, 4.600000f, 25.300001f, 4.600000f, 25.400002f);
        path_0.cubicTo(4.600000f, 25.500002f, 4.500000f, 25.600002f, 4.400000f, 25.600002f);
        path_0.cubicTo(4.300000f, 25.600002f, 4.200000f, 25.500002f, 4.200000f, 25.400002f);
        path_0.cubicTo(4.200000f, 25.300001f, 4.300000f, 25.200001f, 4.400000f, 25.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 25.800001f);
        path_0.cubicTo(4.500000f, 25.800001f, 4.600000f, 25.900002f, 4.600000f, 26.000002f);
        path_0.cubicTo(4.600000f, 26.100002f, 4.500000f, 26.200003f, 4.400000f, 26.200003f);
        path_0.cubicTo(4.300000f, 26.200003f, 4.200000f, 26.200001f, 4.200000f, 26.000000f);
        path_0.cubicTo(4.200000f, 25.900000f, 4.300000f, 25.800001f, 4.400000f, 25.800001f);
        path_0.close();
        path_0.moveTo(4.400000f, 26.500000f);
        path_0.cubicTo(4.500000f, 26.500000f, 4.600000f, 26.600000f, 4.600000f, 26.700001f);
        path_0.cubicTo(4.600000f, 26.800001f, 4.500000f, 26.900002f, 4.400000f, 26.900002f);
        path_0.cubicTo(4.300000f, 26.900002f, 4.200000f, 26.800001f, 4.200000f, 26.700001f);
        path_0.cubicTo(4.200000f, 26.600000f, 4.300000f, 26.500000f, 4.400000f, 26.500000f);
        path_0.close();
        path_0.moveTo(4.400000f, 27.200001f);
        path_0.cubicTo(4.500000f, 27.200001f, 4.600000f, 27.300001f, 4.600000f, 27.400002f);
        path_0.cubicTo(4.600000f, 27.500002f, 4.500000f, 27.600002f, 4.400000f, 27.600002f);
        path_0.cubicTo(4.300000f, 27.600002f, 4.200000f, 27.500002f, 4.200000f, 27.400002f);
        path_0.cubicTo(4.200000f, 27.300001f, 4.300000f, 27.200001f, 4.400000f, 27.200001f);
        path_0.close();
        path_0.moveTo(4.400000f, 27.800001f);
        path_0.cubicTo(4.500000f, 27.800001f, 4.600000f, 27.900002f, 4.600000f, 28.000002f);
        path_0.cubicTo(4.600000f, 28.100002f, 4.500000f, 28.200003f, 4.400000f, 28.200003f);
        path_0.cubicTo(4.300000f, 28.200003f, 4.200000f, 28.100000f, 4.200000f, 28.000000f);
        path_0.cubicTo(4.200000f, 27.900000f, 4.300000f, 27.800001f, 4.400000f, 27.800001f);
        path_0.close();
        path_0.moveTo(4.400000f, 28.500000f);
        path_0.cubicTo(4.500000f, 28.500000f, 4.600000f, 28.600000f, 4.600000f, 28.700001f);
        path_0.cubicTo(4.600000f, 28.800001f, 4.500000f, 28.900002f, 4.400000f, 28.900002f);
        path_0.cubicTo(4.300000f, 28.900002f, 4.200000f, 28.800001f, 4.200000f, 28.700001f);
        path_0.cubicTo(4.200000f, 28.600000f, 4.300000f, 28.500000f, 4.400000f, 28.500000f);
        path_0.close();
        path_0.moveTo(3.700000f, 12.600000f);
        path_0.cubicTo(3.800000f, 12.600000f, 3.900000f, 12.700001f, 3.900000f, 12.800000f);
        path_0.cubicTo(3.900000f, 12.900000f, 3.800000f, 13.000000f, 3.700000f, 13.000000f);
        path_0.cubicTo(3.600000f, 13.000000f, 3.500000f, 12.900000f, 3.500000f, 12.800000f);
        path_0.cubicTo(3.500000f, 12.700001f, 3.600000f, 12.600000f, 3.700000f, 12.600000f);
        path_0.close();
        path_0.moveTo(3.700000f, 13.300000f);
        path_0.cubicTo(3.800000f, 13.300000f, 3.900000f, 13.400001f, 3.900000f, 13.500000f);
        path_0.cubicTo(3.900000f, 13.600000f, 3.800000f, 13.700000f, 3.700000f, 13.700000f);
        path_0.cubicTo(3.600000f, 13.700000f, 3.500000f, 13.599999f, 3.500000f, 13.500000f);
        path_0.cubicTo(3.500000f, 13.400001f, 3.600000f, 13.300000f, 3.700000f, 13.300000f);
        path_0.close();
        path_0.moveTo(3.700000f, 13.900001f);
        path_0.cubicTo(3.800000f, 13.900001f, 3.900000f, 14.000001f, 3.900000f, 14.100000f);
        path_0.cubicTo(3.900000f, 14.200000f, 3.800000f, 14.300000f, 3.700000f, 14.300000f);
        path_0.cubicTo(3.600000f, 14.300000f, 3.500000f, 14.200000f, 3.500000f, 14.100000f);
        path_0.cubicTo(3.500000f, 14.000001f, 3.600000f, 13.900001f, 3.700000f, 13.900001f);
        path_0.close();
        path_0.moveTo(3.700000f, 14.600000f);
        path_0.cubicTo(3.800000f, 14.600000f, 3.900000f, 14.700001f, 3.900000f, 14.800000f);
        path_0.cubicTo(3.900000f, 14.900001f, 3.800000f, 15.000000f, 3.700000f, 15.000000f);
        path_0.cubicTo(3.600000f, 15.000000f, 3.500000f, 14.900000f, 3.500000f, 14.800000f);
        path_0.cubicTo(3.500000f, 14.700001f, 3.600000f, 14.600000f, 3.700000f, 14.600000f);
        path_0.close();
        path_0.moveTo(3.700000f, 15.200000f);
        path_0.cubicTo(3.800000f, 15.200000f, 3.900000f, 15.300000f, 3.900000f, 15.400000f);
        path_0.cubicTo(3.900000f, 15.500000f, 3.800000f, 15.599999f, 3.700000f, 15.599999f);
        path_0.cubicTo(3.600000f, 15.599999f, 3.500000f, 15.499999f, 3.500000f, 15.400000f);
        path_0.cubicTo(3.500000f, 15.300000f, 3.600000f, 15.200000f, 3.700000f, 15.200000f);
        path_0.close();
        path_0.moveTo(3.700000f, 15.900001f);
        path_0.cubicTo(3.800000f, 15.900001f, 3.900000f, 16.000000f, 3.900000f, 16.100000f);
        path_0.cubicTo(3.900000f, 16.200001f, 3.800000f, 16.300001f, 3.700000f, 16.300001f);
        path_0.cubicTo(3.600000f, 16.300001f, 3.500000f, 16.200001f, 3.500000f, 16.100000f);
        path_0.cubicTo(3.500000f, 16.000000f, 3.600000f, 15.900001f, 3.700000f, 15.900001f);
        path_0.close();
        path_0.moveTo(3.700000f, 16.600000f);
        path_0.cubicTo(3.800000f, 16.600000f, 3.900000f, 16.700001f, 3.900000f, 16.800001f);
        path_0.cubicTo(3.900000f, 16.900002f, 3.800000f, 17.000002f, 3.700000f, 17.000002f);
        path_0.cubicTo(3.600000f, 17.000002f, 3.500000f, 16.900002f, 3.500000f, 16.800001f);
        path_0.cubicTo(3.500000f, 16.700001f, 3.600000f, 16.600000f, 3.700000f, 16.600000f);
        path_0.close();
        path_0.moveTo(3.700000f, 17.200001f);
        path_0.cubicTo(3.800000f, 17.200001f, 3.900000f, 17.300001f, 3.900000f, 17.400002f);
        path_0.cubicTo(3.900000f, 17.500002f, 3.800000f, 17.600002f, 3.700000f, 17.600002f);
        path_0.cubicTo(3.600000f, 17.600002f, 3.500000f, 17.500002f, 3.500000f, 17.400002f);
        path_0.cubicTo(3.500000f, 17.300001f, 3.600000f, 17.200001f, 3.700000f, 17.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 17.900000f);
        path_0.cubicTo(3.800000f, 17.900000f, 3.900000f, 18.000000f, 3.900000f, 18.100000f);
        path_0.cubicTo(3.900000f, 18.200001f, 3.800000f, 18.300001f, 3.700000f, 18.300001f);
        path_0.cubicTo(3.600000f, 18.300001f, 3.500000f, 18.200001f, 3.500000f, 18.100000f);
        path_0.cubicTo(3.500000f, 18.000000f, 3.600000f, 17.900000f, 3.700000f, 17.900000f);
        path_0.close();
        path_0.moveTo(3.700000f, 18.600000f);
        path_0.cubicTo(3.800000f, 18.600000f, 3.900000f, 18.700001f, 3.900000f, 18.800001f);
        path_0.cubicTo(3.900000f, 18.900002f, 3.800000f, 19.000000f, 3.700000f, 19.000000f);
        path_0.cubicTo(3.600000f, 19.000000f, 3.500000f, 18.900000f, 3.500000f, 18.799999f);
        path_0.cubicTo(3.500000f, 18.699999f, 3.600000f, 18.600000f, 3.700000f, 18.600000f);
        path_0.close();
        path_0.moveTo(3.700000f, 19.200001f);
        path_0.cubicTo(3.800000f, 19.200001f, 3.900000f, 19.300001f, 3.900000f, 19.400002f);
        path_0.cubicTo(3.900000f, 19.500002f, 3.800000f, 19.600002f, 3.700000f, 19.600002f);
        path_0.cubicTo(3.600000f, 19.600002f, 3.500000f, 19.500002f, 3.500000f, 19.400002f);
        path_0.cubicTo(3.500000f, 19.300001f, 3.600000f, 19.200001f, 3.700000f, 19.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 19.900000f);
        path_0.cubicTo(3.800000f, 19.900000f, 3.900000f, 20.000000f, 3.900000f, 20.100000f);
        path_0.cubicTo(3.900000f, 20.200001f, 3.800000f, 20.300001f, 3.700000f, 20.300001f);
        path_0.cubicTo(3.600000f, 20.300001f, 3.500000f, 20.200001f, 3.500000f, 20.100000f);
        path_0.cubicTo(3.500000f, 20.000000f, 3.600000f, 19.900000f, 3.700000f, 19.900000f);
        path_0.close();
        path_0.moveTo(3.700000f, 20.500000f);
        path_0.cubicTo(3.800000f, 20.500000f, 3.900000f, 20.600000f, 3.900000f, 20.700001f);
        path_0.cubicTo(3.900000f, 20.800001f, 3.800000f, 21.000000f, 3.700000f, 21.000000f);
        path_0.cubicTo(3.600000f, 21.000000f, 3.500000f, 20.900000f, 3.500000f, 20.799999f);
        path_0.cubicTo(3.500000f, 20.699999f, 3.600000f, 20.500000f, 3.700000f, 20.500000f);
        path_0.close();
        path_0.moveTo(3.700000f, 21.200001f);
        path_0.cubicTo(3.800000f, 21.200001f, 3.900000f, 21.300001f, 3.900000f, 21.400002f);
        path_0.cubicTo(3.900000f, 21.500002f, 3.800000f, 21.600002f, 3.700000f, 21.600002f);
        path_0.cubicTo(3.600000f, 21.600002f, 3.500000f, 21.500002f, 3.500000f, 21.400002f);
        path_0.cubicTo(3.500000f, 21.300001f, 3.600000f, 21.200001f, 3.700000f, 21.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 21.900000f);
        path_0.cubicTo(3.800000f, 21.900000f, 3.900000f, 22.000000f, 3.900000f, 22.100000f);
        path_0.cubicTo(3.900000f, 22.200001f, 3.800000f, 22.300001f, 3.700000f, 22.300001f);
        path_0.cubicTo(3.600000f, 22.300001f, 3.500000f, 22.200001f, 3.500000f, 22.100000f);
        path_0.cubicTo(3.500000f, 22.000000f, 3.600000f, 21.900000f, 3.700000f, 21.900000f);
        path_0.close();
        path_0.moveTo(3.700000f, 22.500000f);
        path_0.cubicTo(3.800000f, 22.500000f, 3.900000f, 22.600000f, 3.900000f, 22.700001f);
        path_0.cubicTo(3.900000f, 22.800001f, 3.800000f, 22.900002f, 3.700000f, 22.900002f);
        path_0.cubicTo(3.600000f, 22.900002f, 3.500000f, 22.800001f, 3.500000f, 22.700001f);
        path_0.cubicTo(3.500000f, 22.600000f, 3.600000f, 22.500000f, 3.700000f, 22.500000f);
        path_0.close();
        path_0.moveTo(3.700000f, 23.200001f);
        path_0.cubicTo(3.800000f, 23.200001f, 3.900000f, 23.300001f, 3.900000f, 23.400002f);
        path_0.cubicTo(3.900000f, 23.500002f, 3.800000f, 23.600002f, 3.700000f, 23.600002f);
        path_0.cubicTo(3.600000f, 23.600002f, 3.500000f, 23.500002f, 3.500000f, 23.400002f);
        path_0.cubicTo(3.500000f, 23.300001f, 3.600000f, 23.200001f, 3.700000f, 23.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 23.800001f);
        path_0.cubicTo(3.800000f, 23.800001f, 3.900000f, 23.900002f, 3.900000f, 24.000002f);
        path_0.cubicTo(3.900000f, 24.100002f, 3.800000f, 24.200003f, 3.700000f, 24.200003f);
        path_0.cubicTo(3.600000f, 24.200003f, 3.500000f, 24.100002f, 3.500000f, 24.000002f);
        path_0.cubicTo(3.500000f, 23.900002f, 3.600000f, 23.800001f, 3.700000f, 23.800001f);
        path_0.close();
        path_0.moveTo(3.700000f, 24.500000f);
        path_0.cubicTo(3.800000f, 24.500000f, 3.900000f, 24.600000f, 3.900000f, 24.700001f);
        path_0.cubicTo(3.900000f, 24.800001f, 3.800000f, 24.900002f, 3.700000f, 24.900002f);
        path_0.cubicTo(3.600000f, 24.900002f, 3.500000f, 24.800001f, 3.500000f, 24.700001f);
        path_0.cubicTo(3.500000f, 24.600000f, 3.600000f, 24.500000f, 3.700000f, 24.500000f);
        path_0.close();
        path_0.moveTo(3.700000f, 25.200001f);
        path_0.cubicTo(3.800000f, 25.200001f, 3.900000f, 25.300001f, 3.900000f, 25.400002f);
        path_0.cubicTo(3.900000f, 25.500002f, 3.800000f, 25.600002f, 3.700000f, 25.600002f);
        path_0.cubicTo(3.600000f, 25.600002f, 3.500000f, 25.500002f, 3.500000f, 25.400002f);
        path_0.cubicTo(3.500000f, 25.300001f, 3.600000f, 25.200001f, 3.700000f, 25.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 25.800001f);
        path_0.cubicTo(3.800000f, 25.800001f, 3.900000f, 25.900002f, 3.900000f, 26.000002f);
        path_0.cubicTo(3.900000f, 26.100002f, 3.800000f, 26.200003f, 3.700000f, 26.200003f);
        path_0.cubicTo(3.600000f, 26.200003f, 3.500000f, 26.100002f, 3.500000f, 26.000002f);
        path_0.cubicTo(3.500000f, 25.900000f, 3.600000f, 25.800001f, 3.700000f, 25.800001f);
        path_0.close();
        path_0.moveTo(3.700000f, 26.500000f);
        path_0.cubicTo(3.800000f, 26.500000f, 3.900000f, 26.600000f, 3.900000f, 26.700001f);
        path_0.cubicTo(3.900000f, 26.800001f, 3.800000f, 26.900002f, 3.700000f, 26.900002f);
        path_0.cubicTo(3.600000f, 26.900002f, 3.500000f, 26.800001f, 3.500000f, 26.700001f);
        path_0.cubicTo(3.500000f, 26.600000f, 3.600000f, 26.500000f, 3.700000f, 26.500000f);
        path_0.close();
        path_0.moveTo(3.700000f, 27.200001f);
        path_0.cubicTo(3.800000f, 27.200001f, 3.900000f, 27.300001f, 3.900000f, 27.400002f);
        path_0.cubicTo(3.900000f, 27.500002f, 3.800000f, 27.600002f, 3.700000f, 27.600002f);
        path_0.cubicTo(3.600000f, 27.600002f, 3.500000f, 27.500002f, 3.500000f, 27.400002f);
        path_0.cubicTo(3.500000f, 27.300001f, 3.600000f, 27.200001f, 3.700000f, 27.200001f);
        path_0.close();
        path_0.moveTo(3.700000f, 27.800001f);
        path_0.cubicTo(3.800000f, 27.800001f, 3.900000f, 27.900002f, 3.900000f, 28.000002f);
        path_0.cubicTo(3.900000f, 28.100002f, 3.800000f, 28.200003f, 3.700000f, 28.200003f);
        path_0.cubicTo(3.600000f, 28.200003f, 3.500000f, 28.100002f, 3.500000f, 28.000002f);
        path_0.cubicTo(3.500000f, 27.900002f, 3.600000f, 27.800001f, 3.700000f, 27.800001f);
        path_0.close();
        path_0.moveTo(3.700000f, 28.500000f);
        path_0.cubicTo(3.800000f, 28.500000f, 3.900000f, 28.600000f, 3.900000f, 28.700001f);
        path_0.cubicTo(3.900000f, 28.800001f, 3.800000f, 28.900002f, 3.700000f, 28.900002f);
        path_0.cubicTo(3.600000f, 28.900002f, 3.500000f, 28.800001f, 3.500000f, 28.700001f);
        path_0.cubicTo(3.500000f, 28.600000f, 3.600000f, 28.500000f, 3.700000f, 28.500000f);
        path_0.close();
        path_0.moveTo(3.000000f, 12.600000f);
        path_0.cubicTo(3.100000f, 12.600000f, 3.200000f, 12.700001f, 3.200000f, 12.800000f);
        path_0.cubicTo(3.200000f, 12.900000f, 3.200000f, 13.000000f, 3.000000f, 13.000000f);
        path_0.cubicTo(2.800000f, 13.000000f, 2.800000f, 12.900000f, 2.800000f, 12.800000f);
        path_0.cubicTo(2.800000f, 12.700001f, 2.900000f, 12.600000f, 3.000000f, 12.600000f);
        path_0.close();
        path_0.moveTo(3.000000f, 13.300000f);
        path_0.cubicTo(3.100000f, 13.300000f, 3.200000f, 13.400001f, 3.200000f, 13.500000f);
        path_0.cubicTo(3.200000f, 13.600000f, 3.100000f, 13.700000f, 3.000000f, 13.700000f);
        path_0.cubicTo(2.900000f, 13.700000f, 2.800000f, 13.599999f, 2.800000f, 13.500000f);
        path_0.cubicTo(2.800000f, 13.400001f, 2.900000f, 13.300000f, 3.000000f, 13.300000f);
        path_0.close();
        path_0.moveTo(3.000000f, 13.900001f);
        path_0.cubicTo(3.100000f, 13.900001f, 3.200000f, 14.000001f, 3.200000f, 14.100000f);
        path_0.cubicTo(3.200000f, 14.200000f, 3.200000f, 14.300000f, 3.000000f, 14.300000f);
        path_0.cubicTo(2.900000f, 14.300000f, 2.800000f, 14.200000f, 2.800000f, 14.100000f);
        path_0.cubicTo(2.800000f, 14.000001f, 2.900000f, 13.900001f, 3.000000f, 13.900001f);
        path_0.close();
        path_0.moveTo(3.000000f, 14.600000f);
        path_0.cubicTo(3.100000f, 14.600000f, 3.200000f, 14.700001f, 3.200000f, 14.800000f);
        path_0.cubicTo(3.200000f, 14.900001f, 3.200000f, 15.000000f, 3.000000f, 15.000000f);
        path_0.cubicTo(2.900000f, 15.000000f, 2.800000f, 14.900000f, 2.800000f, 14.800000f);
        path_0.cubicTo(2.800000f, 14.700001f, 2.900000f, 14.600000f, 3.000000f, 14.600000f);
        path_0.close();
        path_0.moveTo(3.000000f, 15.200000f);
        path_0.cubicTo(3.100000f, 15.200000f, 3.200000f, 15.300000f, 3.200000f, 15.400000f);
        path_0.cubicTo(3.200000f, 15.500000f, 3.100000f, 15.599999f, 3.000000f, 15.599999f);
        path_0.cubicTo(2.900000f, 15.599999f, 2.800000f, 15.499999f, 2.800000f, 15.400000f);
        path_0.cubicTo(2.800000f, 15.300000f, 2.900000f, 15.200000f, 3.000000f, 15.200000f);
        path_0.close();
        path_0.moveTo(3.000000f, 15.900001f);
        path_0.cubicTo(3.100000f, 15.900001f, 3.200000f, 16.000000f, 3.200000f, 16.100000f);
        path_0.cubicTo(3.200000f, 16.200001f, 3.100000f, 16.300001f, 3.000000f, 16.300001f);
        path_0.cubicTo(2.900000f, 16.300001f, 2.800000f, 16.200001f, 2.800000f, 16.100000f);
        path_0.cubicTo(2.800000f, 16.000000f, 2.900000f, 15.900001f, 3.000000f, 15.900001f);
        path_0.close();
        path_0.moveTo(3.000000f, 16.600000f);
        path_0.cubicTo(3.100000f, 16.600000f, 3.200000f, 16.700001f, 3.200000f, 16.800001f);
        path_0.cubicTo(3.200000f, 16.900000f, 3.200000f, 17.000000f, 3.000000f, 17.000000f);
        path_0.cubicTo(2.900000f, 17.000000f, 2.800000f, 16.900000f, 2.800000f, 16.799999f);
        path_0.cubicTo(2.800000f, 16.700001f, 2.900000f, 16.600000f, 3.000000f, 16.600000f);
        path_0.close();
        path_0.moveTo(3.000000f, 17.200001f);
        path_0.cubicTo(3.100000f, 17.200001f, 3.200000f, 17.300001f, 3.200000f, 17.400002f);
        path_0.cubicTo(3.200000f, 17.500002f, 3.100000f, 17.600002f, 3.000000f, 17.600002f);
        path_0.cubicTo(2.900000f, 17.600002f, 2.800000f, 17.500002f, 2.800000f, 17.400002f);
        path_0.cubicTo(2.800000f, 17.300001f, 2.900000f, 17.200001f, 3.000000f, 17.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 17.900000f);
        path_0.cubicTo(3.100000f, 17.900000f, 3.200000f, 18.000000f, 3.200000f, 18.100000f);
        path_0.cubicTo(3.200000f, 18.200001f, 3.200000f, 18.300001f, 3.000000f, 18.300001f);
        path_0.cubicTo(2.900000f, 18.300001f, 2.800000f, 18.200001f, 2.800000f, 18.100000f);
        path_0.cubicTo(2.800000f, 18.000000f, 2.900000f, 17.900000f, 3.000000f, 17.900000f);
        path_0.close();
        path_0.moveTo(3.000000f, 18.600000f);
        path_0.cubicTo(3.100000f, 18.600000f, 3.200000f, 18.700001f, 3.200000f, 18.800001f);
        path_0.cubicTo(3.200000f, 18.900002f, 3.200000f, 19.000000f, 3.000000f, 19.000000f);
        path_0.cubicTo(2.900000f, 19.000000f, 2.800000f, 18.900000f, 2.800000f, 18.799999f);
        path_0.cubicTo(2.800000f, 18.699999f, 2.900000f, 18.600000f, 3.000000f, 18.600000f);
        path_0.close();
        path_0.moveTo(3.000000f, 19.200001f);
        path_0.cubicTo(3.100000f, 19.200001f, 3.200000f, 19.300001f, 3.200000f, 19.400002f);
        path_0.cubicTo(3.200000f, 19.500002f, 3.100000f, 19.600002f, 3.000000f, 19.600002f);
        path_0.cubicTo(2.900000f, 19.600002f, 2.800000f, 19.500002f, 2.800000f, 19.400002f);
        path_0.cubicTo(2.800000f, 19.300001f, 2.900000f, 19.200001f, 3.000000f, 19.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 19.900000f);
        path_0.cubicTo(3.100000f, 19.900000f, 3.200000f, 20.000000f, 3.200000f, 20.100000f);
        path_0.cubicTo(3.200000f, 20.200001f, 3.100000f, 20.300001f, 3.000000f, 20.300001f);
        path_0.cubicTo(2.900000f, 20.300001f, 2.800000f, 20.200001f, 2.800000f, 20.100000f);
        path_0.cubicTo(2.800000f, 20.000000f, 2.900000f, 19.900000f, 3.000000f, 19.900000f);
        path_0.close();
        path_0.moveTo(3.000000f, 20.500000f);
        path_0.cubicTo(3.100000f, 20.500000f, 3.200000f, 20.600000f, 3.200000f, 20.700001f);
        path_0.cubicTo(3.200000f, 20.800001f, 3.200000f, 21.000000f, 3.000000f, 21.000000f);
        path_0.cubicTo(2.900000f, 21.000000f, 2.800000f, 20.900000f, 2.800000f, 20.799999f);
        path_0.cubicTo(2.800000f, 20.699999f, 2.900000f, 20.500000f, 3.000000f, 20.500000f);
        path_0.close();
        path_0.moveTo(3.000000f, 21.200001f);
        path_0.cubicTo(3.100000f, 21.200001f, 3.200000f, 21.300001f, 3.200000f, 21.400002f);
        path_0.cubicTo(3.200000f, 21.500002f, 3.200000f, 21.600000f, 3.000000f, 21.600000f);
        path_0.cubicTo(2.900000f, 21.600000f, 2.800000f, 21.500000f, 2.800000f, 21.400000f);
        path_0.cubicTo(2.800000f, 21.299999f, 2.900000f, 21.200001f, 3.000000f, 21.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 21.900000f);
        path_0.cubicTo(3.100000f, 21.900000f, 3.200000f, 22.000000f, 3.200000f, 22.100000f);
        path_0.cubicTo(3.200000f, 22.200001f, 3.100000f, 22.300001f, 3.000000f, 22.300001f);
        path_0.cubicTo(2.900000f, 22.300001f, 2.800000f, 22.200001f, 2.800000f, 22.100000f);
        path_0.cubicTo(2.800000f, 22.000000f, 2.900000f, 21.900000f, 3.000000f, 21.900000f);
        path_0.close();
        path_0.moveTo(3.000000f, 22.500000f);
        path_0.cubicTo(3.100000f, 22.500000f, 3.200000f, 22.600000f, 3.200000f, 22.700001f);
        path_0.cubicTo(3.200000f, 22.800001f, 3.100000f, 22.900002f, 3.000000f, 22.900002f);
        path_0.cubicTo(2.900000f, 22.900002f, 2.800000f, 22.800001f, 2.800000f, 22.700001f);
        path_0.cubicTo(2.800000f, 22.600000f, 2.900000f, 22.500000f, 3.000000f, 22.500000f);
        path_0.close();
        path_0.moveTo(3.000000f, 23.200001f);
        path_0.cubicTo(3.100000f, 23.200001f, 3.200000f, 23.300001f, 3.200000f, 23.400002f);
        path_0.cubicTo(3.200000f, 23.500002f, 3.100000f, 23.600002f, 3.000000f, 23.600002f);
        path_0.cubicTo(2.900000f, 23.600002f, 2.800000f, 23.500002f, 2.800000f, 23.400002f);
        path_0.cubicTo(2.800000f, 23.300001f, 2.900000f, 23.200001f, 3.000000f, 23.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 23.800001f);
        path_0.cubicTo(3.100000f, 23.800001f, 3.200000f, 23.900002f, 3.200000f, 24.000002f);
        path_0.cubicTo(3.200000f, 24.100002f, 3.200000f, 24.300001f, 3.000000f, 24.300001f);
        path_0.cubicTo(2.900000f, 24.300001f, 2.800000f, 24.200001f, 2.800000f, 24.100000f);
        path_0.cubicTo(2.800000f, 24.000000f, 2.900000f, 23.800001f, 3.000000f, 23.800001f);
        path_0.close();
        path_0.moveTo(3.000000f, 24.500000f);
        path_0.cubicTo(3.100000f, 24.500000f, 3.200000f, 24.600000f, 3.200000f, 24.700001f);
        path_0.cubicTo(3.200000f, 24.800001f, 3.100000f, 24.900002f, 3.000000f, 24.900002f);
        path_0.cubicTo(2.900000f, 24.900002f, 2.800000f, 24.800001f, 2.800000f, 24.700001f);
        path_0.cubicTo(2.800000f, 24.600000f, 2.900000f, 24.500000f, 3.000000f, 24.500000f);
        path_0.close();
        path_0.moveTo(3.000000f, 25.200001f);
        path_0.cubicTo(3.100000f, 25.200001f, 3.200000f, 25.300001f, 3.200000f, 25.400002f);
        path_0.cubicTo(3.200000f, 25.500002f, 3.100000f, 25.600002f, 3.000000f, 25.600002f);
        path_0.cubicTo(2.900000f, 25.600002f, 2.800000f, 25.500002f, 2.800000f, 25.400002f);
        path_0.cubicTo(2.800000f, 25.300001f, 2.900000f, 25.200001f, 3.000000f, 25.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 25.800001f);
        path_0.cubicTo(3.100000f, 25.800001f, 3.200000f, 25.900002f, 3.200000f, 26.000002f);
        path_0.cubicTo(3.200000f, 26.100002f, 3.100000f, 26.200003f, 3.000000f, 26.200003f);
        path_0.cubicTo(2.900000f, 26.200003f, 2.800000f, 26.100002f, 2.800000f, 26.000002f);
        path_0.cubicTo(2.800000f, 25.900000f, 2.900000f, 25.800001f, 3.000000f, 25.800001f);
        path_0.close();
        path_0.moveTo(3.000000f, 26.500000f);
        path_0.cubicTo(3.100000f, 26.500000f, 3.200000f, 26.600000f, 3.200000f, 26.700001f);
        path_0.cubicTo(3.200000f, 26.800001f, 3.200000f, 26.900000f, 3.000000f, 26.900000f);
        path_0.cubicTo(2.900000f, 26.900000f, 2.800000f, 26.799999f, 2.800000f, 26.699999f);
        path_0.cubicTo(2.800000f, 26.599998f, 2.900000f, 26.500000f, 3.000000f, 26.500000f);
        path_0.close();
        path_0.moveTo(3.000000f, 27.200001f);
        path_0.cubicTo(3.100000f, 27.200001f, 3.200000f, 27.300001f, 3.200000f, 27.400002f);
        path_0.cubicTo(3.200000f, 27.500002f, 3.200000f, 27.600000f, 3.000000f, 27.600000f);
        path_0.cubicTo(2.800000f, 27.600000f, 2.800000f, 27.500000f, 2.800000f, 27.400000f);
        path_0.cubicTo(2.800000f, 27.299999f, 2.900000f, 27.200001f, 3.000000f, 27.200001f);
        path_0.close();
        path_0.moveTo(3.000000f, 27.800001f);
        path_0.cubicTo(3.100000f, 27.800001f, 3.200000f, 27.900002f, 3.200000f, 28.000002f);
        path_0.cubicTo(3.200000f, 28.100002f, 3.100000f, 28.200003f, 3.000000f, 28.200003f);
        path_0.cubicTo(2.900000f, 28.200003f, 2.800000f, 28.100002f, 2.800000f, 28.000002f);
        path_0.cubicTo(2.800000f, 27.900002f, 2.900000f, 27.800001f, 3.000000f, 27.800001f);
        path_0.close();
        path_0.moveTo(3.000000f, 28.500000f);
        path_0.cubicTo(3.100000f, 28.500000f, 3.200000f, 28.600000f, 3.200000f, 28.700001f);
        path_0.cubicTo(3.200000f, 28.800001f, 3.100000f, 28.900002f, 3.000000f, 28.900002f);
        path_0.cubicTo(2.900000f, 28.900002f, 2.800000f, 28.800001f, 2.800000f, 28.700001f);
        path_0.cubicTo(2.800000f, 28.600000f, 2.900000f, 28.500000f, 3.000000f, 28.500000f);
        path_0.close();
        path_0.moveTo(2.400000f, 12.600000f);
        path_0.cubicTo(2.500000f, 12.600000f, 2.600000f, 12.700001f, 2.600000f, 12.800000f);
        path_0.cubicTo(2.600000f, 12.900000f, 2.500000f, 13.000000f, 2.400000f, 13.000000f);
        path_0.cubicTo(2.300000f, 13.000000f, 2.200000f, 12.900000f, 2.200000f, 12.800000f);
        path_0.cubicTo(2.200000f, 12.700001f, 2.200000f, 12.600000f, 2.400000f, 12.600000f);
        path_0.close();
        path_0.moveTo(2.400000f, 13.300000f);
        path_0.cubicTo(2.500000f, 13.300000f, 2.600000f, 13.400001f, 2.600000f, 13.500000f);
        path_0.cubicTo(2.600000f, 13.600000f, 2.500000f, 13.700000f, 2.400000f, 13.700000f);
        path_0.cubicTo(2.300000f, 13.700000f, 2.200000f, 13.599999f, 2.200000f, 13.500000f);
        path_0.cubicTo(2.100000f, 13.400001f, 2.200000f, 13.300000f, 2.400000f, 13.300000f);
        path_0.close();
        path_0.moveTo(2.400000f, 13.900001f);
        path_0.cubicTo(2.500000f, 13.900001f, 2.600000f, 14.000001f, 2.600000f, 14.100000f);
        path_0.cubicTo(2.600000f, 14.200000f, 2.500000f, 14.300000f, 2.400000f, 14.300000f);
        path_0.cubicTo(2.300000f, 14.300000f, 2.200000f, 14.200000f, 2.200000f, 14.100000f);
        path_0.cubicTo(2.200000f, 14.000001f, 2.200000f, 13.900001f, 2.400000f, 13.900001f);
        path_0.close();
        path_0.moveTo(2.400000f, 14.600000f);
        path_0.cubicTo(2.500000f, 14.600000f, 2.600000f, 14.700001f, 2.600000f, 14.800000f);
        path_0.cubicTo(2.600000f, 14.900001f, 2.500000f, 15.000000f, 2.400000f, 15.000000f);
        path_0.cubicTo(2.300000f, 15.000000f, 2.200000f, 14.900000f, 2.200000f, 14.800000f);
        path_0.cubicTo(2.200000f, 14.700001f, 2.200000f, 14.600000f, 2.400000f, 14.600000f);
        path_0.close();
        path_0.moveTo(2.400000f, 15.200000f);
        path_0.cubicTo(2.500000f, 15.200000f, 2.600000f, 15.300000f, 2.600000f, 15.400000f);
        path_0.cubicTo(2.600000f, 15.500000f, 2.500000f, 15.599999f, 2.400000f, 15.599999f);
        path_0.cubicTo(2.300000f, 15.599999f, 2.200000f, 15.499999f, 2.200000f, 15.400000f);
        path_0.cubicTo(2.200000f, 15.300000f, 2.200000f, 15.200000f, 2.400000f, 15.200000f);
        path_0.close();
        path_0.moveTo(2.400000f, 15.900001f);
        path_0.cubicTo(2.500000f, 15.900001f, 2.600000f, 16.000000f, 2.600000f, 16.100000f);
        path_0.cubicTo(2.600000f, 16.200001f, 2.500000f, 16.300001f, 2.400000f, 16.300001f);
        path_0.cubicTo(2.300000f, 16.300001f, 2.200000f, 16.200001f, 2.200000f, 16.100000f);
        path_0.cubicTo(2.100000f, 16.000000f, 2.200000f, 15.900001f, 2.400000f, 15.900001f);
        path_0.close();
        path_0.moveTo(2.400000f, 16.600000f);
        path_0.cubicTo(2.500000f, 16.600000f, 2.600000f, 16.700001f, 2.600000f, 16.800001f);
        path_0.cubicTo(2.600000f, 16.900002f, 2.500000f, 17.000002f, 2.400000f, 17.000002f);
        path_0.cubicTo(2.300000f, 17.000002f, 2.200000f, 16.900002f, 2.200000f, 16.800001f);
        path_0.cubicTo(2.100000f, 16.700001f, 2.200000f, 16.600000f, 2.400000f, 16.600000f);
        path_0.close();
        path_0.moveTo(2.400000f, 17.200001f);
        path_0.cubicTo(2.500000f, 17.200001f, 2.600000f, 17.300001f, 2.600000f, 17.400002f);
        path_0.cubicTo(2.600000f, 17.500002f, 2.500000f, 17.600002f, 2.400000f, 17.600002f);
        path_0.cubicTo(2.300000f, 17.600002f, 2.200000f, 17.500002f, 2.200000f, 17.400002f);
        path_0.cubicTo(2.100000f, 17.300001f, 2.200000f, 17.200001f, 2.400000f, 17.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 17.900000f);
        path_0.cubicTo(2.500000f, 17.900000f, 2.600000f, 18.000000f, 2.600000f, 18.100000f);
        path_0.cubicTo(2.600000f, 18.200001f, 2.500000f, 18.300001f, 2.400000f, 18.300001f);
        path_0.cubicTo(2.300000f, 18.300001f, 2.200000f, 18.200001f, 2.200000f, 18.100000f);
        path_0.cubicTo(2.200000f, 18.000000f, 2.200000f, 17.900000f, 2.400000f, 17.900000f);
        path_0.close();
        path_0.moveTo(2.400000f, 18.600000f);
        path_0.cubicTo(2.500000f, 18.600000f, 2.600000f, 18.700001f, 2.600000f, 18.800001f);
        path_0.cubicTo(2.600000f, 18.900002f, 2.500000f, 19.000000f, 2.400000f, 19.000000f);
        path_0.cubicTo(2.300000f, 19.000000f, 2.200000f, 18.900000f, 2.200000f, 18.799999f);
        path_0.cubicTo(2.200000f, 18.699999f, 2.200000f, 18.600000f, 2.400000f, 18.600000f);
        path_0.close();
        path_0.moveTo(2.400000f, 19.200001f);
        path_0.cubicTo(2.500000f, 19.200001f, 2.600000f, 19.300001f, 2.600000f, 19.400002f);
        path_0.cubicTo(2.600000f, 19.500002f, 2.500000f, 19.600002f, 2.400000f, 19.600002f);
        path_0.cubicTo(2.300000f, 19.600002f, 2.200000f, 19.500002f, 2.200000f, 19.400002f);
        path_0.cubicTo(2.100000f, 19.300001f, 2.200000f, 19.200001f, 2.400000f, 19.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 19.900000f);
        path_0.cubicTo(2.500000f, 19.900000f, 2.600000f, 20.000000f, 2.600000f, 20.100000f);
        path_0.cubicTo(2.600000f, 20.200001f, 2.500000f, 20.300001f, 2.400000f, 20.300001f);
        path_0.cubicTo(2.300000f, 20.300001f, 2.200000f, 20.200001f, 2.200000f, 20.100000f);
        path_0.cubicTo(2.100000f, 20.000000f, 2.200000f, 19.900000f, 2.400000f, 19.900000f);
        path_0.close();
        path_0.moveTo(2.400000f, 20.500000f);
        path_0.cubicTo(2.500000f, 20.500000f, 2.600000f, 20.600000f, 2.600000f, 20.700001f);
        path_0.cubicTo(2.600000f, 20.800001f, 2.500000f, 21.000000f, 2.400000f, 21.000000f);
        path_0.cubicTo(2.300000f, 21.000000f, 2.200000f, 20.900000f, 2.200000f, 20.799999f);
        path_0.cubicTo(2.200000f, 20.699999f, 2.200000f, 20.500000f, 2.400000f, 20.500000f);
        path_0.close();
        path_0.moveTo(2.400000f, 21.200001f);
        path_0.cubicTo(2.500000f, 21.200001f, 2.600000f, 21.300001f, 2.600000f, 21.400002f);
        path_0.cubicTo(2.600000f, 21.500002f, 2.500000f, 21.600002f, 2.400000f, 21.600002f);
        path_0.cubicTo(2.300000f, 21.600002f, 2.200000f, 21.500002f, 2.200000f, 21.400002f);
        path_0.cubicTo(2.200000f, 21.300001f, 2.200000f, 21.200001f, 2.400000f, 21.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 21.900000f);
        path_0.cubicTo(2.500000f, 21.900000f, 2.600000f, 22.000000f, 2.600000f, 22.100000f);
        path_0.cubicTo(2.600000f, 22.200001f, 2.500000f, 22.300001f, 2.400000f, 22.300001f);
        path_0.cubicTo(2.300000f, 22.300001f, 2.200000f, 22.200001f, 2.200000f, 22.100000f);
        path_0.cubicTo(2.200000f, 22.000000f, 2.200000f, 21.900000f, 2.400000f, 21.900000f);
        path_0.close();
        path_0.moveTo(2.400000f, 22.500000f);
        path_0.cubicTo(2.500000f, 22.500000f, 2.600000f, 22.600000f, 2.600000f, 22.700001f);
        path_0.cubicTo(2.600000f, 22.800001f, 2.500000f, 22.900002f, 2.400000f, 22.900002f);
        path_0.cubicTo(2.300000f, 22.900002f, 2.200000f, 22.800001f, 2.200000f, 22.700001f);
        path_0.cubicTo(2.100000f, 22.600000f, 2.200000f, 22.500000f, 2.400000f, 22.500000f);
        path_0.close();
        path_0.moveTo(2.400000f, 23.200001f);
        path_0.cubicTo(2.500000f, 23.200001f, 2.600000f, 23.300001f, 2.600000f, 23.400002f);
        path_0.cubicTo(2.600000f, 23.500002f, 2.500000f, 23.600002f, 2.400000f, 23.600002f);
        path_0.cubicTo(2.300000f, 23.600002f, 2.200000f, 23.500002f, 2.200000f, 23.400002f);
        path_0.cubicTo(2.200000f, 23.300001f, 2.200000f, 23.200001f, 2.400000f, 23.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 23.800001f);
        path_0.cubicTo(2.500000f, 23.800001f, 2.600000f, 23.900002f, 2.600000f, 24.000002f);
        path_0.cubicTo(2.600000f, 24.100002f, 2.500000f, 24.200003f, 2.400000f, 24.200003f);
        path_0.cubicTo(2.300000f, 24.200003f, 2.200000f, 24.100002f, 2.200000f, 24.000002f);
        path_0.cubicTo(2.200000f, 23.900002f, 2.200000f, 23.800001f, 2.400000f, 23.800001f);
        path_0.close();
        path_0.moveTo(2.400000f, 24.500000f);
        path_0.cubicTo(2.500000f, 24.500000f, 2.600000f, 24.600000f, 2.600000f, 24.700001f);
        path_0.cubicTo(2.600000f, 24.800001f, 2.500000f, 24.900002f, 2.400000f, 24.900002f);
        path_0.cubicTo(2.300000f, 24.900002f, 2.200000f, 24.800001f, 2.200000f, 24.700001f);
        path_0.cubicTo(2.200000f, 24.600000f, 2.200000f, 24.500000f, 2.400000f, 24.500000f);
        path_0.close();
        path_0.moveTo(2.400000f, 25.200001f);
        path_0.cubicTo(2.500000f, 25.200001f, 2.600000f, 25.300001f, 2.600000f, 25.400002f);
        path_0.cubicTo(2.600000f, 25.500002f, 2.500000f, 25.600002f, 2.400000f, 25.600002f);
        path_0.cubicTo(2.300000f, 25.600002f, 2.200000f, 25.500002f, 2.200000f, 25.400002f);
        path_0.cubicTo(2.200000f, 25.300001f, 2.200000f, 25.200001f, 2.400000f, 25.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 25.800001f);
        path_0.cubicTo(2.500000f, 25.800001f, 2.600000f, 25.900002f, 2.600000f, 26.000002f);
        path_0.cubicTo(2.600000f, 26.100002f, 2.500000f, 26.200003f, 2.400000f, 26.200003f);
        path_0.cubicTo(2.300000f, 26.200003f, 2.200000f, 26.100002f, 2.200000f, 26.000002f);
        path_0.cubicTo(2.100000f, 25.900000f, 2.200000f, 25.800001f, 2.400000f, 25.800001f);
        path_0.close();
        path_0.moveTo(2.400000f, 26.500000f);
        path_0.cubicTo(2.500000f, 26.500000f, 2.600000f, 26.600000f, 2.600000f, 26.700001f);
        path_0.cubicTo(2.600000f, 26.800001f, 2.500000f, 26.900002f, 2.400000f, 26.900002f);
        path_0.cubicTo(2.300000f, 26.900002f, 2.200000f, 26.800001f, 2.200000f, 26.700001f);
        path_0.cubicTo(2.200000f, 26.600000f, 2.200000f, 26.500000f, 2.400000f, 26.500000f);
        path_0.close();
        path_0.moveTo(2.400000f, 27.200001f);
        path_0.cubicTo(2.500000f, 27.200001f, 2.600000f, 27.300001f, 2.600000f, 27.400002f);
        path_0.cubicTo(2.600000f, 27.500002f, 2.500000f, 27.600002f, 2.400000f, 27.600002f);
        path_0.cubicTo(2.300000f, 27.600002f, 2.200000f, 27.500002f, 2.200000f, 27.400002f);
        path_0.cubicTo(2.200000f, 27.300001f, 2.200000f, 27.200001f, 2.400000f, 27.200001f);
        path_0.close();
        path_0.moveTo(2.400000f, 27.800001f);
        path_0.cubicTo(2.500000f, 27.800001f, 2.600000f, 27.900002f, 2.600000f, 28.000002f);
        path_0.cubicTo(2.600000f, 28.100002f, 2.500000f, 28.200003f, 2.400000f, 28.200003f);
        path_0.cubicTo(2.300000f, 28.200003f, 2.200000f, 28.100002f, 2.200000f, 28.000002f);
        path_0.cubicTo(2.200000f, 27.900002f, 2.200000f, 27.800001f, 2.400000f, 27.800001f);
        path_0.close();
        path_0.moveTo(2.400000f, 28.500000f);
        path_0.cubicTo(2.500000f, 28.500000f, 2.600000f, 28.600000f, 2.600000f, 28.700001f);
        path_0.cubicTo(2.600000f, 28.800001f, 2.500000f, 28.900002f, 2.400000f, 28.900002f);
        path_0.cubicTo(2.300000f, 28.900002f, 2.200000f, 28.800001f, 2.200000f, 28.700001f);
        path_0.cubicTo(2.200000f, 28.600000f, 2.200000f, 28.500000f, 2.400000f, 28.500000f);
        path_0.close();
        path_0.moveTo(1.700000f, 13.300000f);
        path_0.cubicTo(1.800000f, 13.300000f, 1.900000f, 13.400001f, 1.900000f, 13.500000f);
        path_0.cubicTo(1.900000f, 13.600000f, 1.800000f, 13.700000f, 1.700000f, 13.700000f);
        path_0.cubicTo(1.600000f, 13.700000f, 1.500000f, 13.599999f, 1.500000f, 13.500000f);
        path_0.cubicTo(1.500000f, 13.400001f, 1.600000f, 13.300000f, 1.700000f, 13.300000f);
        path_0.close();
        path_0.moveTo(1.700000f, 13.900001f);
        path_0.cubicTo(1.800000f, 13.900001f, 1.900000f, 14.000001f, 1.900000f, 14.100000f);
        path_0.cubicTo(1.900000f, 14.200000f, 1.800000f, 14.300000f, 1.700000f, 14.300000f);
        path_0.cubicTo(1.600000f, 14.300000f, 1.500000f, 14.200000f, 1.500000f, 14.100000f);
        path_0.cubicTo(1.500000f, 14.000001f, 1.600000f, 13.900001f, 1.700000f, 13.900001f);
        path_0.close();
        path_0.moveTo(1.700000f, 14.600000f);
        path_0.cubicTo(1.800000f, 14.600000f, 1.900000f, 14.700001f, 1.900000f, 14.800000f);
        path_0.cubicTo(1.900000f, 14.900001f, 1.800000f, 15.000000f, 1.700000f, 15.000000f);
        path_0.cubicTo(1.600000f, 15.000000f, 1.500000f, 14.900000f, 1.500000f, 14.800000f);
        path_0.cubicTo(1.500000f, 14.700001f, 1.600000f, 14.600000f, 1.700000f, 14.600000f);
        path_0.close();
        path_0.moveTo(1.700000f, 15.200000f);
        path_0.cubicTo(1.800000f, 15.200000f, 1.900000f, 15.300000f, 1.900000f, 15.400000f);
        path_0.cubicTo(1.900000f, 15.500000f, 1.800000f, 15.599999f, 1.700000f, 15.599999f);
        path_0.cubicTo(1.600000f, 15.599999f, 1.500000f, 15.499999f, 1.500000f, 15.400000f);
        path_0.cubicTo(1.500000f, 15.300000f, 1.600000f, 15.200000f, 1.700000f, 15.200000f);
        path_0.close();
        path_0.moveTo(1.700000f, 15.900001f);
        path_0.cubicTo(1.800000f, 15.900001f, 1.900000f, 16.000000f, 1.900000f, 16.100000f);
        path_0.cubicTo(1.900000f, 16.200001f, 1.800000f, 16.300001f, 1.700000f, 16.300001f);
        path_0.cubicTo(1.600000f, 16.300001f, 1.500000f, 16.200001f, 1.500000f, 16.100000f);
        path_0.cubicTo(1.500000f, 16.000000f, 1.600000f, 15.900001f, 1.700000f, 15.900001f);
        path_0.close();
        path_0.moveTo(1.700000f, 16.600000f);
        path_0.cubicTo(1.800000f, 16.600000f, 1.900000f, 16.700001f, 1.900000f, 16.800001f);
        path_0.cubicTo(1.900000f, 16.900002f, 1.800000f, 17.000002f, 1.700000f, 17.000002f);
        path_0.cubicTo(1.600000f, 17.000002f, 1.500000f, 16.900002f, 1.500000f, 16.800001f);
        path_0.cubicTo(1.500000f, 16.700001f, 1.600000f, 16.600000f, 1.700000f, 16.600000f);
        path_0.close();
        path_0.moveTo(1.700000f, 17.200001f);
        path_0.cubicTo(1.800000f, 17.200001f, 1.900000f, 17.300001f, 1.900000f, 17.400002f);
        path_0.cubicTo(1.900000f, 17.500002f, 1.800000f, 17.600002f, 1.700000f, 17.600002f);
        path_0.cubicTo(1.600000f, 17.600002f, 1.500000f, 17.500002f, 1.500000f, 17.400002f);
        path_0.cubicTo(1.500000f, 17.300001f, 1.600000f, 17.200001f, 1.700000f, 17.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 17.900000f);
        path_0.cubicTo(1.800000f, 17.900000f, 1.900000f, 18.000000f, 1.900000f, 18.100000f);
        path_0.cubicTo(1.900000f, 18.200001f, 1.800000f, 18.300001f, 1.700000f, 18.300001f);
        path_0.cubicTo(1.600000f, 18.300001f, 1.500000f, 18.200001f, 1.500000f, 18.100000f);
        path_0.cubicTo(1.500000f, 18.000000f, 1.600000f, 17.900000f, 1.700000f, 17.900000f);
        path_0.close();
        path_0.moveTo(1.700000f, 18.600000f);
        path_0.cubicTo(1.800000f, 18.600000f, 1.900000f, 18.700001f, 1.900000f, 18.800001f);
        path_0.cubicTo(1.900000f, 18.900002f, 1.800000f, 19.000000f, 1.700000f, 19.000000f);
        path_0.cubicTo(1.600000f, 19.000000f, 1.500000f, 18.900000f, 1.500000f, 18.799999f);
        path_0.cubicTo(1.500000f, 18.699999f, 1.600000f, 18.600000f, 1.700000f, 18.600000f);
        path_0.close();
        path_0.moveTo(1.700000f, 19.200001f);
        path_0.cubicTo(1.800000f, 19.200001f, 1.900000f, 19.300001f, 1.900000f, 19.400002f);
        path_0.cubicTo(1.900000f, 19.500002f, 1.800000f, 19.600002f, 1.700000f, 19.600002f);
        path_0.cubicTo(1.600000f, 19.600002f, 1.500000f, 19.500002f, 1.500000f, 19.400002f);
        path_0.cubicTo(1.500000f, 19.300001f, 1.600000f, 19.200001f, 1.700000f, 19.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 19.900000f);
        path_0.cubicTo(1.800000f, 19.900000f, 1.900000f, 20.000000f, 1.900000f, 20.100000f);
        path_0.cubicTo(1.900000f, 20.200001f, 1.800000f, 20.300001f, 1.700000f, 20.300001f);
        path_0.cubicTo(1.600000f, 20.300001f, 1.500000f, 20.200001f, 1.500000f, 20.100000f);
        path_0.cubicTo(1.500000f, 20.000000f, 1.600000f, 19.900000f, 1.700000f, 19.900000f);
        path_0.close();
        path_0.moveTo(1.700000f, 20.500000f);
        path_0.cubicTo(1.800000f, 20.500000f, 1.900000f, 20.600000f, 1.900000f, 20.700001f);
        path_0.cubicTo(1.900000f, 20.800001f, 1.800000f, 21.000000f, 1.700000f, 21.000000f);
        path_0.cubicTo(1.600000f, 21.000000f, 1.500000f, 20.900000f, 1.500000f, 20.799999f);
        path_0.cubicTo(1.500000f, 20.699999f, 1.600000f, 20.500000f, 1.700000f, 20.500000f);
        path_0.close();
        path_0.moveTo(1.700000f, 21.200001f);
        path_0.cubicTo(1.800000f, 21.200001f, 1.900000f, 21.300001f, 1.900000f, 21.400002f);
        path_0.cubicTo(1.900000f, 21.500002f, 1.800000f, 21.600002f, 1.700000f, 21.600002f);
        path_0.cubicTo(1.600000f, 21.600002f, 1.500000f, 21.500002f, 1.500000f, 21.400002f);
        path_0.cubicTo(1.500000f, 21.300001f, 1.600000f, 21.200001f, 1.700000f, 21.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 21.900000f);
        path_0.cubicTo(1.800000f, 21.900000f, 1.900000f, 22.000000f, 1.900000f, 22.100000f);
        path_0.cubicTo(1.900000f, 22.200001f, 1.800000f, 22.300001f, 1.700000f, 22.300001f);
        path_0.cubicTo(1.600000f, 22.300001f, 1.500000f, 22.200001f, 1.500000f, 22.100000f);
        path_0.cubicTo(1.500000f, 22.000000f, 1.600000f, 21.900000f, 1.700000f, 21.900000f);
        path_0.close();
        path_0.moveTo(1.700000f, 22.500000f);
        path_0.cubicTo(1.800000f, 22.500000f, 1.900000f, 22.600000f, 1.900000f, 22.700001f);
        path_0.cubicTo(1.900000f, 22.800001f, 1.800000f, 22.900002f, 1.700000f, 22.900002f);
        path_0.cubicTo(1.600000f, 22.900002f, 1.500000f, 22.800001f, 1.500000f, 22.700001f);
        path_0.cubicTo(1.500000f, 22.600000f, 1.600000f, 22.500000f, 1.700000f, 22.500000f);
        path_0.close();
        path_0.moveTo(1.700000f, 23.200001f);
        path_0.cubicTo(1.800000f, 23.200001f, 1.900000f, 23.300001f, 1.900000f, 23.400002f);
        path_0.cubicTo(1.900000f, 23.500002f, 1.800000f, 23.600002f, 1.700000f, 23.600002f);
        path_0.cubicTo(1.600000f, 23.600002f, 1.500000f, 23.500002f, 1.500000f, 23.400002f);
        path_0.cubicTo(1.500000f, 23.300001f, 1.600000f, 23.200001f, 1.700000f, 23.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 23.800001f);
        path_0.cubicTo(1.800000f, 23.800001f, 1.900000f, 23.900002f, 1.900000f, 24.000002f);
        path_0.cubicTo(1.900000f, 24.100002f, 1.800000f, 24.200003f, 1.700000f, 24.200003f);
        path_0.cubicTo(1.600000f, 24.200003f, 1.500000f, 24.100002f, 1.500000f, 24.000002f);
        path_0.cubicTo(1.500000f, 23.900002f, 1.600000f, 23.800001f, 1.700000f, 23.800001f);
        path_0.close();
        path_0.moveTo(1.700000f, 24.500000f);
        path_0.cubicTo(1.800000f, 24.500000f, 1.900000f, 24.600000f, 1.900000f, 24.700001f);
        path_0.cubicTo(1.900000f, 24.800001f, 1.800000f, 24.900002f, 1.700000f, 24.900002f);
        path_0.cubicTo(1.600000f, 24.900002f, 1.500000f, 24.800001f, 1.500000f, 24.700001f);
        path_0.cubicTo(1.500000f, 24.600000f, 1.600000f, 24.500000f, 1.700000f, 24.500000f);
        path_0.close();
        path_0.moveTo(1.700000f, 25.200001f);
        path_0.cubicTo(1.800000f, 25.200001f, 1.900000f, 25.300001f, 1.900000f, 25.400002f);
        path_0.cubicTo(1.900000f, 25.500002f, 1.800000f, 25.600002f, 1.700000f, 25.600002f);
        path_0.cubicTo(1.600000f, 25.600002f, 1.500000f, 25.500002f, 1.500000f, 25.400002f);
        path_0.cubicTo(1.500000f, 25.300001f, 1.600000f, 25.200001f, 1.700000f, 25.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 25.800001f);
        path_0.cubicTo(1.800000f, 25.800001f, 1.900000f, 25.900002f, 1.900000f, 26.000002f);
        path_0.cubicTo(1.900000f, 26.100002f, 1.800000f, 26.200003f, 1.700000f, 26.200003f);
        path_0.cubicTo(1.600000f, 26.200003f, 1.500000f, 26.200001f, 1.500000f, 26.000000f);
        path_0.cubicTo(1.500000f, 25.900000f, 1.600000f, 25.800001f, 1.700000f, 25.800001f);
        path_0.close();
        path_0.moveTo(1.700000f, 26.500000f);
        path_0.cubicTo(1.800000f, 26.500000f, 1.900000f, 26.600000f, 1.900000f, 26.700001f);
        path_0.cubicTo(1.900000f, 26.800001f, 1.800000f, 26.900002f, 1.700000f, 26.900002f);
        path_0.cubicTo(1.600000f, 26.900002f, 1.500000f, 26.800001f, 1.500000f, 26.700001f);
        path_0.cubicTo(1.500000f, 26.600000f, 1.600000f, 26.500000f, 1.700000f, 26.500000f);
        path_0.close();
        path_0.moveTo(1.700000f, 27.200001f);
        path_0.cubicTo(1.800000f, 27.200001f, 1.900000f, 27.300001f, 1.900000f, 27.400002f);
        path_0.cubicTo(1.900000f, 27.500002f, 1.800000f, 27.600002f, 1.700000f, 27.600002f);
        path_0.cubicTo(1.600000f, 27.600002f, 1.500000f, 27.500002f, 1.500000f, 27.400002f);
        path_0.cubicTo(1.500000f, 27.300001f, 1.600000f, 27.200001f, 1.700000f, 27.200001f);
        path_0.close();
        path_0.moveTo(1.700000f, 27.800001f);
        path_0.cubicTo(1.800000f, 27.800001f, 1.900000f, 27.900002f, 1.900000f, 28.000002f);
        path_0.cubicTo(1.900000f, 28.100002f, 1.800000f, 28.200003f, 1.700000f, 28.200003f);
        path_0.cubicTo(1.600000f, 28.200003f, 1.500000f, 28.100000f, 1.500000f, 28.000000f);
        path_0.cubicTo(1.500000f, 27.900000f, 1.600000f, 27.800001f, 1.700000f, 27.800001f);
        path_0.close();
        path_0.moveTo(7.500000f, 39.500000f);
        path_0.cubicTo(7.500000f, 40.900002f, 7.500000f, 42.200001f, 7.500000f, 43.599998f);
        path_0.cubicTo(7.500000f, 43.599998f, 7.500000f, 43.599998f, 7.500000f, 43.599998f);
        path_0.cubicTo(7.500000f, 47.199997f, 7.500000f, 50.899998f, 7.500000f, 54.500000f);
        path_0.cubicTo(7.500000f, 55.099998f, 7.500000f, 55.700001f, 7.500000f, 56.299999f);
        path_0.cubicTo(7.500000f, 56.500000f, 7.500000f, 56.599998f, 7.300000f, 56.700001f);
        path_0.cubicTo(7.300000f, 56.700001f, 7.300000f, 56.700001f, 7.300000f, 56.700001f);
        path_0.cubicTo(7.000000f, 57.200001f, 6.500000f, 57.100002f, 6.100000f, 57.100002f);
        path_0.cubicTo(6.000000f, 57.100002f, 5.900001f, 56.900002f, 5.800000f, 56.900002f);
        path_0.cubicTo(5.500000f, 56.700001f, 5.500000f, 56.400002f, 5.500000f, 56.100002f);
        path_0.cubicTo(5.500000f, 52.800003f, 5.500000f, 49.600002f, 5.400000f, 46.300003f);
        path_0.cubicTo(5.400000f, 44.800003f, 5.000000f, 43.300003f, 4.600000f, 41.800003f);
        path_0.cubicTo(3.700000f, 39.000004f, 2.900000f, 36.200005f, 2.100000f, 33.400002f);
        path_0.cubicTo(1.900000f, 32.700001f, 1.800000f, 31.900002f, 1.600000f, 31.100002f);
        path_0.cubicTo(1.500000f, 30.400002f, 2.000000f, 29.900002f, 2.700000f, 29.900002f);
        path_0.cubicTo(3.400000f, 29.900002f, 4.000000f, 29.900002f, 4.700000f, 29.900002f);
        path_0.cubicTo(5.300000f, 29.900002f, 5.900000f, 29.900002f, 6.500000f, 29.900002f);
        path_0.cubicTo(7.300000f, 29.900002f, 7.600000f, 30.300001f, 7.600000f, 31.000002f);
        path_0.cubicTo(7.500000f, 33.900002f, 7.500000f, 36.700001f, 7.500000f, 39.500000f);
        path_0.close();
        path_0.moveTo(7.800000f, 28.900000f);
        path_0.cubicTo(7.700000f, 28.900000f, 7.600000f, 28.799999f, 7.600000f, 28.699999f);
        path_0.cubicTo(7.600000f, 28.599998f, 7.700000f, 28.499998f, 7.800000f, 28.499998f);
        path_0.cubicTo(7.900000f, 28.499998f, 8.000000f, 28.599998f, 8.000000f, 28.699999f);
        path_0.cubicTo(8.000000f, 28.800001f, 7.900000f, 28.900000f, 7.800000f, 28.900000f);
        path_0.close();
        path_0.moveTo(7.800000f, 28.200001f);
        path_0.cubicTo(7.700000f, 28.200001f, 7.600000f, 28.100000f, 7.600000f, 28.000000f);
        path_0.cubicTo(7.600000f, 27.900000f, 7.700000f, 27.799999f, 7.800000f, 27.799999f);
        path_0.cubicTo(7.900000f, 27.800001f, 8.000000f, 27.900000f, 8.000000f, 28.000000f);
        path_0.cubicTo(8.000000f, 28.100000f, 7.900000f, 28.200001f, 7.800000f, 28.200001f);
        path_0.close();
        path_0.moveTo(7.800000f, 27.600000f);
        path_0.cubicTo(7.700000f, 27.600000f, 7.600000f, 27.500000f, 7.600000f, 27.400000f);
        path_0.cubicTo(7.600000f, 27.299999f, 7.700000f, 27.199999f, 7.800000f, 27.199999f);
        path_0.cubicTo(7.900000f, 27.199999f, 8.000000f, 27.299999f, 8.000000f, 27.400000f);
        path_0.cubicTo(8.000000f, 27.500000f, 7.900000f, 27.600000f, 7.800000f, 27.600000f);
        path_0.close();
        path_0.moveTo(7.800000f, 26.900000f);
        path_0.cubicTo(7.700000f, 26.900000f, 7.600000f, 26.799999f, 7.600000f, 26.699999f);
        path_0.cubicTo(7.600000f, 26.599998f, 7.700000f, 26.499998f, 7.800000f, 26.499998f);
        path_0.cubicTo(7.900000f, 26.499998f, 8.000000f, 26.599998f, 8.000000f, 26.699999f);
        path_0.cubicTo(8.000000f, 26.799999f, 7.900000f, 26.900000f, 7.800000f, 26.900000f);
        path_0.close();
        path_0.moveTo(7.800000f, 26.300001f);
        path_0.cubicTo(7.700000f, 26.300001f, 7.600000f, 26.200001f, 7.600000f, 26.100000f);
        path_0.cubicTo(7.600000f, 26.000000f, 7.700000f, 25.900000f, 7.800000f, 25.900000f);
        path_0.cubicTo(7.900000f, 25.800001f, 8.000000f, 25.900000f, 8.000000f, 26.000000f);
        path_0.cubicTo(8.000000f, 26.200001f, 7.900000f, 26.300001f, 7.800000f, 26.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 25.600000f);
        path_0.cubicTo(7.700000f, 25.600000f, 7.600000f, 25.500000f, 7.600000f, 25.400000f);
        path_0.cubicTo(7.600000f, 25.299999f, 7.700000f, 25.199999f, 7.800000f, 25.199999f);
        path_0.cubicTo(7.900000f, 25.199999f, 8.000000f, 25.299999f, 8.000000f, 25.400000f);
        path_0.cubicTo(8.000000f, 25.500000f, 7.900000f, 25.600000f, 7.800000f, 25.600000f);
        path_0.close();
        path_0.moveTo(7.800000f, 24.900000f);
        path_0.cubicTo(7.700000f, 24.900000f, 7.600000f, 24.799999f, 7.600000f, 24.699999f);
        path_0.cubicTo(7.600000f, 24.599998f, 7.700000f, 24.499998f, 7.800000f, 24.499998f);
        path_0.cubicTo(7.900000f, 24.499998f, 8.000000f, 24.599998f, 8.000000f, 24.699999f);
        path_0.cubicTo(8.000000f, 24.800001f, 7.900000f, 24.900000f, 7.800000f, 24.900000f);
        path_0.close();
        path_0.moveTo(7.800000f, 24.300001f);
        path_0.cubicTo(7.700000f, 24.300001f, 7.600000f, 24.200001f, 7.600000f, 24.100000f);
        path_0.cubicTo(7.600000f, 24.000000f, 7.700000f, 23.900000f, 7.800000f, 23.900000f);
        path_0.cubicTo(7.900000f, 23.900000f, 8.000000f, 24.000000f, 8.000000f, 24.100000f);
        path_0.cubicTo(8.000000f, 24.200001f, 7.900000f, 24.300001f, 7.800000f, 24.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 23.600000f);
        path_0.cubicTo(7.700000f, 23.600000f, 7.600000f, 23.500000f, 7.600000f, 23.400000f);
        path_0.cubicTo(7.600000f, 23.299999f, 7.700000f, 23.199999f, 7.800000f, 23.199999f);
        path_0.cubicTo(7.900000f, 23.199999f, 8.000000f, 23.299999f, 8.000000f, 23.400000f);
        path_0.cubicTo(8.000000f, 23.500000f, 7.900000f, 23.600000f, 7.800000f, 23.600000f);
        path_0.close();
        path_0.moveTo(7.800000f, 22.900000f);
        path_0.cubicTo(7.700000f, 22.900000f, 7.600000f, 22.799999f, 7.600000f, 22.699999f);
        path_0.cubicTo(7.600000f, 22.599998f, 7.700000f, 22.499998f, 7.800000f, 22.499998f);
        path_0.cubicTo(7.900000f, 22.499998f, 8.000000f, 22.599998f, 8.000000f, 22.699999f);
        path_0.cubicTo(8.000000f, 22.900000f, 7.900000f, 22.900000f, 7.800000f, 22.900000f);
        path_0.close();
        path_0.moveTo(7.800000f, 22.300001f);
        path_0.cubicTo(7.700000f, 22.300001f, 7.600000f, 22.200001f, 7.600000f, 22.100000f);
        path_0.cubicTo(7.600000f, 22.000000f, 7.700000f, 21.900000f, 7.800000f, 21.900000f);
        path_0.cubicTo(7.900000f, 21.900000f, 8.000000f, 22.000000f, 8.000000f, 22.100000f);
        path_0.cubicTo(8.000000f, 22.200001f, 7.900000f, 22.300001f, 7.800000f, 22.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 21.600000f);
        path_0.cubicTo(7.700000f, 21.600000f, 7.600000f, 21.500000f, 7.600000f, 21.400000f);
        render_0(canvas);



        ImageView myImage = new ImageView(context);
        myImage.setImageBitmap(b);
            myImage.setX(lastPosition[0]);
            myImage.setY(lastPosition[1]);

            myImage.setRotation(lastPosition[2]);
        base_svg.addView(myImage);

//            need to inforce the pivot for some reason
        myImage.setPivotX(0.0f);
        myImage.setPivotY(0.0f);

        JSONObject lineAnima = player.getJSONObject("lineAnima");
        JSONArray arrayPosition = lineAnima.optJSONArray("data");

        CustomAnimation.justDoIt(context, myImage, arrayPosition, screenHeight, screenWidth, velocity, (float) player.getInt("rotation"), (CustomAnimation.convertDpToPixels(0.0f,context) * scale),(CustomAnimation.convertDpToPixels(0.0f,context) * scale));

    } catch (JSONException e) {
        e.printStackTrace();
    }
    }

    private void render_0(Canvas canvas) {
        path_0.cubicTo(7.600000f, 21.299999f, 7.700000f, 21.199999f, 7.800000f, 21.199999f);
        path_0.cubicTo(7.900000f, 21.199999f, 8.000000f, 21.299999f, 8.000000f, 21.400000f);
        path_0.cubicTo(8.000000f, 21.500000f, 7.900000f, 21.600000f, 7.800000f, 21.600000f);
        path_0.close();
        path_0.moveTo(7.800000f, 21.000000f);
        path_0.cubicTo(7.700000f, 21.000000f, 7.600000f, 20.900000f, 7.600000f, 20.799999f);
        path_0.cubicTo(7.600000f, 20.699999f, 7.700000f, 20.599998f, 7.800000f, 20.599998f);
        path_0.cubicTo(7.900000f, 20.599998f, 8.000000f, 20.699999f, 8.000000f, 20.799999f);
        path_0.cubicTo(8.000000f, 20.900000f, 7.900000f, 21.000000f, 7.800000f, 21.000000f);
        path_0.close();
        path_0.moveTo(7.800000f, 20.300001f);
        path_0.cubicTo(7.700000f, 20.300001f, 7.600000f, 20.200001f, 7.600000f, 20.100000f);
        path_0.cubicTo(7.600000f, 20.000000f, 7.700000f, 19.900000f, 7.800000f, 19.900000f);
        path_0.cubicTo(7.900000f, 19.900000f, 8.000000f, 20.000000f, 8.000000f, 20.100000f);
        path_0.cubicTo(8.000000f, 20.200001f, 7.900000f, 20.300001f, 7.800000f, 20.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 19.600000f);
        path_0.cubicTo(7.700000f, 19.600000f, 7.600000f, 19.500000f, 7.600000f, 19.400000f);
        path_0.cubicTo(7.600000f, 19.299999f, 7.700000f, 19.199999f, 7.800000f, 19.199999f);
        path_0.cubicTo(7.900000f, 19.199999f, 8.000000f, 19.299999f, 8.000000f, 19.400000f);
        path_0.cubicTo(8.000000f, 19.500000f, 7.900000f, 19.600000f, 7.800000f, 19.600000f);
        path_0.close();
        path_0.moveTo(7.800000f, 19.000000f);
        path_0.cubicTo(7.700000f, 19.000000f, 7.600000f, 18.900000f, 7.600000f, 18.799999f);
        path_0.cubicTo(7.600000f, 18.699999f, 7.700000f, 18.599998f, 7.800000f, 18.599998f);
        path_0.cubicTo(7.900000f, 18.599998f, 8.000000f, 18.699999f, 8.000000f, 18.799999f);
        path_0.cubicTo(8.000000f, 18.900000f, 7.900000f, 19.000000f, 7.800000f, 19.000000f);
        path_0.close();
        path_0.moveTo(7.800000f, 18.300001f);
        path_0.cubicTo(7.700000f, 18.300001f, 7.600000f, 18.200001f, 7.600000f, 18.100000f);
        path_0.cubicTo(7.600000f, 18.000000f, 7.700000f, 17.900000f, 7.800000f, 17.900000f);
        path_0.cubicTo(7.900000f, 17.900000f, 8.000000f, 18.000000f, 8.000000f, 18.100000f);
        path_0.cubicTo(8.000000f, 18.200001f, 7.900000f, 18.300001f, 7.800000f, 18.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 17.700001f);
        path_0.cubicTo(7.700000f, 17.700001f, 7.600000f, 17.600000f, 7.600000f, 17.500000f);
        path_0.cubicTo(7.600000f, 17.400000f, 7.700000f, 17.299999f, 7.800000f, 17.299999f);
        path_0.cubicTo(7.900000f, 17.299999f, 8.000000f, 17.400000f, 8.000000f, 17.500000f);
        path_0.cubicTo(8.000000f, 17.600000f, 7.900000f, 17.700001f, 7.800000f, 17.700001f);
        path_0.close();
        path_0.moveTo(7.800000f, 17.000000f);
        path_0.cubicTo(7.700000f, 17.000000f, 7.600000f, 16.900000f, 7.600000f, 16.799999f);
        path_0.cubicTo(7.600000f, 16.699999f, 7.700000f, 16.599998f, 7.800000f, 16.599998f);
        path_0.cubicTo(7.900000f, 16.599998f, 8.000000f, 16.699999f, 8.000000f, 16.799999f);
        path_0.cubicTo(8.000000f, 16.900000f, 7.900000f, 17.000000f, 7.800000f, 17.000000f);
        path_0.close();
        path_0.moveTo(7.800000f, 16.300001f);
        path_0.cubicTo(7.700000f, 16.300001f, 7.600000f, 16.200001f, 7.600000f, 16.100000f);
        path_0.cubicTo(7.600000f, 16.000000f, 7.700000f, 15.900001f, 7.800000f, 15.900001f);
        path_0.cubicTo(7.900000f, 15.900001f, 8.000000f, 16.000000f, 8.000000f, 16.100000f);
        path_0.cubicTo(8.000000f, 16.200001f, 7.900000f, 16.300001f, 7.800000f, 16.300001f);
        path_0.close();
        path_0.moveTo(7.800000f, 15.700000f);
        path_0.cubicTo(7.700000f, 15.700000f, 7.600000f, 15.599999f, 7.600000f, 15.500000f);
        path_0.cubicTo(7.600000f, 15.400000f, 7.700000f, 15.300000f, 7.800000f, 15.300000f);
        path_0.cubicTo(7.900000f, 15.300000f, 8.000000f, 15.400001f, 8.000000f, 15.500000f);
        path_0.cubicTo(8.000000f, 15.600000f, 7.900000f, 15.700000f, 7.800000f, 15.700000f);
        path_0.close();
        path_0.moveTo(7.800000f, 15.000000f);
        path_0.cubicTo(7.700000f, 15.000000f, 7.600000f, 14.900000f, 7.600000f, 14.800000f);
        path_0.cubicTo(7.600000f, 14.700000f, 7.700000f, 14.600000f, 7.800000f, 14.600000f);
        path_0.cubicTo(7.900000f, 14.600000f, 8.000000f, 14.700001f, 8.000000f, 14.800000f);
        path_0.cubicTo(8.000000f, 14.900001f, 7.900000f, 15.000000f, 7.800000f, 15.000000f);
        path_0.close();
        path_0.moveTo(7.800000f, 14.300000f);
        path_0.cubicTo(7.700000f, 14.300000f, 7.600000f, 14.200000f, 7.600000f, 14.100000f);
        path_0.cubicTo(7.600000f, 14.000001f, 7.700000f, 13.900001f, 7.800000f, 13.900001f);
        path_0.cubicTo(7.900000f, 13.900001f, 8.000000f, 14.000000f, 8.000000f, 14.100000f);
        path_0.cubicTo(8.000000f, 14.200001f, 7.900000f, 14.300000f, 7.800000f, 14.300000f);
        path_0.close();
        path_0.moveTo(7.800000f, 13.700000f);
        path_0.cubicTo(7.700000f, 13.700000f, 7.600000f, 13.599999f, 7.600000f, 13.500000f);
        path_0.cubicTo(7.600000f, 13.400000f, 7.700000f, 13.300000f, 7.800000f, 13.300000f);
        path_0.cubicTo(7.900000f, 13.300000f, 8.000000f, 13.400001f, 8.000000f, 13.500000f);
        path_0.cubicTo(8.000000f, 13.600000f, 7.900000f, 13.700000f, 7.800000f, 13.700000f);
        path_0.close();
        path_0.moveTo(7.800000f, 13.000000f);
        path_0.cubicTo(7.700000f, 13.000000f, 7.600000f, 12.900000f, 7.600000f, 12.800000f);
        path_0.cubicTo(7.600000f, 12.700001f, 7.700000f, 12.600000f, 7.800000f, 12.600000f);
        path_0.cubicTo(7.900000f, 12.600000f, 8.000000f, 12.700001f, 8.000000f, 12.800000f);
        path_0.cubicTo(8.000000f, 12.900000f, 7.900000f, 13.000000f, 7.800000f, 13.000000f);
        path_0.close();
        path_0.moveTo(8.500000f, 28.900000f);
        path_0.cubicTo(8.400000f, 28.900000f, 8.300000f, 28.799999f, 8.300000f, 28.699999f);
        path_0.cubicTo(8.300000f, 28.599998f, 8.400001f, 28.499998f, 8.500000f, 28.499998f);
        path_0.cubicTo(8.600000f, 28.499998f, 8.700000f, 28.599998f, 8.700000f, 28.699999f);
        path_0.cubicTo(8.700000f, 28.799999f, 8.600000f, 28.900000f, 8.500000f, 28.900000f);
        path_0.close();
        path_0.moveTo(8.500000f, 28.200001f);
        path_0.cubicTo(8.400000f, 28.200001f, 8.300000f, 28.100000f, 8.300000f, 28.000000f);
        path_0.cubicTo(8.300000f, 27.900000f, 8.400001f, 27.799999f, 8.500000f, 27.799999f);
        path_0.cubicTo(8.600000f, 27.799999f, 8.700000f, 27.900000f, 8.700000f, 28.000000f);
        path_0.cubicTo(8.700000f, 28.100000f, 8.600000f, 28.200001f, 8.500000f, 28.200001f);
        path_0.close();
        path_0.moveTo(8.500000f, 27.600000f);
        path_0.cubicTo(8.400000f, 27.600000f, 8.300000f, 27.500000f, 8.300000f, 27.400000f);
        path_0.cubicTo(8.300000f, 27.299999f, 8.400001f, 27.199999f, 8.500000f, 27.199999f);
        path_0.cubicTo(8.600000f, 27.199999f, 8.700000f, 27.299999f, 8.700000f, 27.400000f);
        path_0.cubicTo(8.700000f, 27.500000f, 8.600000f, 27.600000f, 8.500000f, 27.600000f);
        path_0.close();
        path_0.moveTo(8.500000f, 26.900000f);
        path_0.cubicTo(8.400000f, 26.900000f, 8.300000f, 26.799999f, 8.300000f, 26.699999f);
        path_0.cubicTo(8.300000f, 26.599998f, 8.400001f, 26.499998f, 8.500000f, 26.499998f);
        path_0.cubicTo(8.600000f, 26.499998f, 8.700000f, 26.599998f, 8.700000f, 26.699999f);
        path_0.cubicTo(8.700000f, 26.799999f, 8.600000f, 26.900000f, 8.500000f, 26.900000f);
        path_0.close();
        path_0.moveTo(8.500000f, 26.300001f);
        path_0.cubicTo(8.400000f, 26.300001f, 8.300000f, 26.200001f, 8.300000f, 26.100000f);
        path_0.cubicTo(8.300000f, 26.000000f, 8.400001f, 25.900000f, 8.500000f, 25.900000f);
        path_0.cubicTo(8.600000f, 25.900000f, 8.700000f, 26.000000f, 8.700000f, 26.100000f);
        path_0.cubicTo(8.700000f, 26.200001f, 8.600000f, 26.300001f, 8.500000f, 26.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 25.600000f);
        path_0.cubicTo(8.400000f, 25.600000f, 8.300000f, 25.500000f, 8.300000f, 25.400000f);
        path_0.cubicTo(8.300000f, 25.299999f, 8.400001f, 25.199999f, 8.500000f, 25.199999f);
        path_0.cubicTo(8.600000f, 25.199999f, 8.700000f, 25.299999f, 8.700000f, 25.400000f);
        path_0.cubicTo(8.700000f, 25.500000f, 8.600000f, 25.600000f, 8.500000f, 25.600000f);
        path_0.close();
        path_0.moveTo(8.500000f, 24.900000f);
        path_0.cubicTo(8.400000f, 24.900000f, 8.300000f, 24.799999f, 8.300000f, 24.699999f);
        path_0.cubicTo(8.300000f, 24.599998f, 8.400001f, 24.499998f, 8.500000f, 24.499998f);
        path_0.cubicTo(8.600000f, 24.499998f, 8.700000f, 24.599998f, 8.700000f, 24.699999f);
        path_0.cubicTo(8.700000f, 24.800001f, 8.600000f, 24.900000f, 8.500000f, 24.900000f);
        path_0.close();
        path_0.moveTo(8.500000f, 24.300001f);
        path_0.cubicTo(8.400000f, 24.300001f, 8.300000f, 24.200001f, 8.300000f, 24.100000f);
        path_0.cubicTo(8.300000f, 24.000000f, 8.400001f, 23.900000f, 8.500000f, 23.900000f);
        path_0.cubicTo(8.600000f, 23.900000f, 8.700000f, 24.000000f, 8.700000f, 24.100000f);
        path_0.cubicTo(8.700000f, 24.200001f, 8.600000f, 24.300001f, 8.500000f, 24.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 23.600000f);
        path_0.cubicTo(8.400000f, 23.600000f, 8.300000f, 23.500000f, 8.300000f, 23.400000f);
        path_0.cubicTo(8.300000f, 23.299999f, 8.400001f, 23.199999f, 8.500000f, 23.199999f);
        path_0.cubicTo(8.600000f, 23.199999f, 8.700000f, 23.299999f, 8.700000f, 23.400000f);
        path_0.cubicTo(8.700000f, 23.500000f, 8.600000f, 23.600000f, 8.500000f, 23.600000f);
        path_0.close();
        path_0.moveTo(8.500000f, 22.900000f);
        path_0.cubicTo(8.400000f, 22.900000f, 8.300000f, 22.799999f, 8.300000f, 22.699999f);
        path_0.cubicTo(8.300000f, 22.599998f, 8.400001f, 22.499998f, 8.500000f, 22.499998f);
        path_0.cubicTo(8.600000f, 22.499998f, 8.700000f, 22.599998f, 8.700000f, 22.699999f);
        path_0.cubicTo(8.700000f, 22.900000f, 8.600000f, 22.900000f, 8.500000f, 22.900000f);
        path_0.close();
        path_0.moveTo(8.500000f, 22.300001f);
        path_0.cubicTo(8.400000f, 22.300001f, 8.300000f, 22.200001f, 8.300000f, 22.100000f);
        path_0.cubicTo(8.300000f, 22.000000f, 8.400001f, 21.900000f, 8.500000f, 21.900000f);
        path_0.cubicTo(8.600000f, 21.900000f, 8.700000f, 22.000000f, 8.700000f, 22.100000f);
        path_0.cubicTo(8.700000f, 22.200001f, 8.600000f, 22.300001f, 8.500000f, 22.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 21.600000f);
        path_0.cubicTo(8.400000f, 21.600000f, 8.300000f, 21.500000f, 8.300000f, 21.400000f);
        path_0.cubicTo(8.300000f, 21.299999f, 8.400001f, 21.199999f, 8.500000f, 21.199999f);
        path_0.cubicTo(8.600000f, 21.199999f, 8.700000f, 21.299999f, 8.700000f, 21.400000f);
        path_0.cubicTo(8.700000f, 21.500000f, 8.600000f, 21.600000f, 8.500000f, 21.600000f);
        path_0.close();
        path_0.moveTo(8.500000f, 21.000000f);
        path_0.cubicTo(8.400000f, 21.000000f, 8.300000f, 20.900000f, 8.300000f, 20.799999f);
        path_0.cubicTo(8.300000f, 20.699999f, 8.400001f, 20.599998f, 8.500000f, 20.599998f);
        path_0.cubicTo(8.600000f, 20.599998f, 8.700000f, 20.699999f, 8.700000f, 20.799999f);
        path_0.cubicTo(8.700000f, 20.900000f, 8.600000f, 21.000000f, 8.500000f, 21.000000f);
        path_0.close();
        path_0.moveTo(8.500000f, 20.300001f);
        path_0.cubicTo(8.400000f, 20.300001f, 8.300000f, 20.200001f, 8.300000f, 20.100000f);
        path_0.cubicTo(8.300000f, 20.000000f, 8.400001f, 19.900000f, 8.500000f, 19.900000f);
        path_0.cubicTo(8.600000f, 19.900000f, 8.700000f, 20.000000f, 8.700000f, 20.100000f);
        path_0.cubicTo(8.700000f, 20.200001f, 8.600000f, 20.300001f, 8.500000f, 20.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 19.600000f);
        path_0.cubicTo(8.400000f, 19.600000f, 8.300000f, 19.500000f, 8.300000f, 19.400000f);
        path_0.cubicTo(8.300000f, 19.299999f, 8.400001f, 19.199999f, 8.500000f, 19.199999f);
        path_0.cubicTo(8.600000f, 19.199999f, 8.700000f, 19.299999f, 8.700000f, 19.400000f);
        path_0.cubicTo(8.700000f, 19.500000f, 8.600000f, 19.600000f, 8.500000f, 19.600000f);
        path_0.close();
        path_0.moveTo(8.500000f, 19.000000f);
        path_0.cubicTo(8.400000f, 19.000000f, 8.300000f, 18.900000f, 8.300000f, 18.799999f);
        path_0.cubicTo(8.300000f, 18.699999f, 8.400001f, 18.599998f, 8.500000f, 18.599998f);
        path_0.cubicTo(8.600000f, 18.599998f, 8.700000f, 18.699999f, 8.700000f, 18.799999f);
        path_0.cubicTo(8.700000f, 18.900000f, 8.600000f, 19.000000f, 8.500000f, 19.000000f);
        path_0.close();
        path_0.moveTo(8.500000f, 18.300001f);
        path_0.cubicTo(8.400000f, 18.300001f, 8.300000f, 18.200001f, 8.300000f, 18.100000f);
        path_0.cubicTo(8.300000f, 18.000000f, 8.400001f, 17.900000f, 8.500000f, 17.900000f);
        path_0.cubicTo(8.600000f, 17.900000f, 8.700000f, 18.000000f, 8.700000f, 18.100000f);
        path_0.cubicTo(8.700000f, 18.200001f, 8.600000f, 18.300001f, 8.500000f, 18.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 17.700001f);
        path_0.cubicTo(8.400000f, 17.700001f, 8.300000f, 17.600000f, 8.300000f, 17.500000f);
        path_0.cubicTo(8.300000f, 17.400000f, 8.400001f, 17.299999f, 8.500000f, 17.299999f);
        path_0.cubicTo(8.600000f, 17.299999f, 8.700000f, 17.400000f, 8.700000f, 17.500000f);
        path_0.cubicTo(8.700000f, 17.600000f, 8.600000f, 17.700001f, 8.500000f, 17.700001f);
        path_0.close();
        path_0.moveTo(8.500000f, 17.000000f);
        path_0.cubicTo(8.400000f, 17.000000f, 8.300000f, 16.900000f, 8.300000f, 16.799999f);
        path_0.cubicTo(8.300000f, 16.699999f, 8.400001f, 16.599998f, 8.500000f, 16.599998f);
        path_0.cubicTo(8.600000f, 16.599998f, 8.700000f, 16.699999f, 8.700000f, 16.799999f);
        path_0.cubicTo(8.700000f, 16.900000f, 8.600000f, 17.000000f, 8.500000f, 17.000000f);
        path_0.close();
        path_0.moveTo(8.500000f, 16.300001f);
        path_0.cubicTo(8.400000f, 16.300001f, 8.300000f, 16.200001f, 8.300000f, 16.100000f);
        path_0.cubicTo(8.300000f, 16.000000f, 8.400001f, 15.900001f, 8.500000f, 15.900001f);
        path_0.cubicTo(8.600000f, 15.900001f, 8.700000f, 16.000000f, 8.700000f, 16.100000f);
        path_0.cubicTo(8.700000f, 16.200001f, 8.600000f, 16.300001f, 8.500000f, 16.300001f);
        path_0.close();
        path_0.moveTo(8.500000f, 15.700000f);
        path_0.cubicTo(8.400000f, 15.700000f, 8.300000f, 15.599999f, 8.300000f, 15.500000f);
        path_0.cubicTo(8.300000f, 15.400000f, 8.400001f, 15.300000f, 8.500000f, 15.300000f);
        path_0.cubicTo(8.600000f, 15.300000f, 8.700000f, 15.400001f, 8.700000f, 15.500000f);
        path_0.cubicTo(8.700000f, 15.599999f, 8.600000f, 15.700000f, 8.500000f, 15.700000f);
        path_0.close();
        path_0.moveTo(8.500000f, 15.000000f);
        path_0.cubicTo(8.400000f, 15.000000f, 8.300000f, 14.900000f, 8.300000f, 14.800000f);
        path_0.cubicTo(8.300000f, 14.700000f, 8.400001f, 14.600000f, 8.500000f, 14.600000f);
        path_0.cubicTo(8.600000f, 14.600000f, 8.700000f, 14.700001f, 8.700000f, 14.800000f);
        path_0.cubicTo(8.700000f, 14.900000f, 8.600000f, 15.000000f, 8.500000f, 15.000000f);
        path_0.close();
        path_0.moveTo(8.500000f, 14.300000f);
        path_0.cubicTo(8.400000f, 14.300000f, 8.300000f, 14.200000f, 8.300000f, 14.100000f);
        path_0.cubicTo(8.300000f, 14.000001f, 8.400001f, 13.900001f, 8.500000f, 13.900001f);
        path_0.cubicTo(8.600000f, 13.900001f, 8.700000f, 14.000001f, 8.700000f, 14.100000f);
        path_0.cubicTo(8.700000f, 14.200000f, 8.600000f, 14.300000f, 8.500000f, 14.300000f);
        path_0.close();
        path_0.moveTo(8.500000f, 13.700000f);
        path_0.cubicTo(8.400000f, 13.700000f, 8.300000f, 13.599999f, 8.300000f, 13.500000f);
        path_0.cubicTo(8.300000f, 13.400000f, 8.400001f, 13.300000f, 8.500000f, 13.300000f);
        path_0.cubicTo(8.600000f, 13.300000f, 8.700000f, 13.400001f, 8.700000f, 13.500000f);
        path_0.cubicTo(8.700000f, 13.599999f, 8.600000f, 13.700000f, 8.500000f, 13.700000f);
        path_0.close();
        path_0.moveTo(8.500000f, 13.000000f);
        path_0.cubicTo(8.400000f, 13.000000f, 8.300000f, 12.900000f, 8.300000f, 12.800000f);
        path_0.cubicTo(8.300000f, 12.700001f, 8.400001f, 12.600000f, 8.500000f, 12.600000f);
        path_0.cubicTo(8.600000f, 12.600000f, 8.700000f, 12.700001f, 8.700000f, 12.800000f);
        path_0.cubicTo(8.700000f, 12.900000f, 8.600000f, 13.000000f, 8.500000f, 13.000000f);
        path_0.close();
        path_0.moveTo(13.300000f, 34.900002f);
        path_0.cubicTo(13.300000f, 36.600002f, 13.300000f, 38.400002f, 13.300000f, 40.100002f);
        path_0.cubicTo(13.300000f, 42.600002f, 13.300000f, 45.100002f, 13.200000f, 47.600002f);
        path_0.cubicTo(13.200000f, 50.000004f, 13.200000f, 52.500004f, 13.200000f, 54.900002f);
        path_0.cubicTo(13.200000f, 55.400002f, 13.200000f, 55.900002f, 13.200000f, 56.400002f);
        path_0.cubicTo(13.200000f, 56.500000f, 13.099999f, 56.600002f, 13.099999f, 56.700001f);
        path_0.cubicTo(12.799999f, 57.100002f, 12.400000f, 57.200001f, 11.900000f, 57.200001f);
        path_0.cubicTo(11.200000f, 57.200001f, 10.500000f, 57.200001f, 9.799999f, 57.200001f);
        path_0.cubicTo(9.699999f, 57.200001f, 9.599999f, 57.100002f, 9.499999f, 57.100002f);
        path_0.cubicTo(9.000000f, 56.799999f, 8.900001f, 56.500000f, 8.900001f, 56.000000f);
        path_0.cubicTo(8.900001f, 52.400002f, 8.900001f, 48.900002f, 9.000001f, 45.299999f);
        path_0.cubicTo(9.000001f, 44.700001f, 9.000001f, 44.200001f, 9.000001f, 43.599998f);
        path_0.cubicTo(9.000001f, 43.599998f, 9.000001f, 43.599998f, 9.000001f, 43.599998f);
        path_0.cubicTo(9.000001f, 40.799999f, 9.000001f, 38.000000f, 9.000001f, 35.199997f);
        path_0.cubicTo(9.000001f, 33.699997f, 9.000001f, 32.299995f, 9.000001f, 30.799997f);
        path_0.cubicTo(9.000001f, 30.299997f, 9.500001f, 29.899998f, 10.000001f, 29.899998f);
        path_0.cubicTo(10.500001f, 29.899998f, 11.100001f, 29.899998f, 11.600001f, 29.899998f);
        path_0.cubicTo(11.900002f, 29.899998f, 12.100001f, 29.899998f, 12.400002f, 29.999998f);
        path_0.cubicTo(12.900002f, 30.099998f, 13.300001f, 30.499998f, 13.300001f, 30.999998f);
        path_0.cubicTo(13.300000f, 32.200001f, 13.300000f, 33.600002f, 13.300000f, 34.900002f);
        path_0.close();
        path_0.moveTo(9.200000f, 13.300000f);
        path_0.cubicTo(9.300000f, 13.300000f, 9.400000f, 13.400001f, 9.400000f, 13.500000f);
        path_0.cubicTo(9.400000f, 13.600000f, 9.299999f, 13.700000f, 9.200000f, 13.700000f);
        path_0.cubicTo(9.100000f, 13.700000f, 9.000000f, 13.599999f, 9.000000f, 13.500000f);
        path_0.cubicTo(8.900001f, 13.400001f, 9.000000f, 13.300000f, 9.200000f, 13.300000f);
        path_0.close();
        path_0.moveTo(8.900001f, 12.800000f);
        path_0.cubicTo(8.900001f, 12.700000f, 9.000001f, 12.600000f, 9.100000f, 12.600000f);
        path_0.cubicTo(9.200000f, 12.600000f, 9.300000f, 12.700001f, 9.300000f, 12.800000f);
        path_0.cubicTo(9.300000f, 12.900000f, 9.300000f, 13.000000f, 9.200000f, 13.000000f);
        path_0.cubicTo(9.099999f, 13.000000f, 8.900001f, 12.900001f, 8.900001f, 12.800000f);
        path_0.close();
        path_0.moveTo(9.200000f, 13.900001f);
        path_0.cubicTo(9.300000f, 13.900001f, 9.400000f, 14.000001f, 9.400000f, 14.100000f);
        path_0.cubicTo(9.400000f, 14.200000f, 9.299999f, 14.300000f, 9.200000f, 14.300000f);
        path_0.cubicTo(9.100000f, 14.300000f, 9.000000f, 14.200000f, 9.000000f, 14.100000f);
        path_0.cubicTo(9.000000f, 14.000001f, 9.000000f, 13.900001f, 9.200000f, 13.900001f);
        path_0.close();
        path_0.moveTo(9.200000f, 14.600000f);
        path_0.cubicTo(9.300000f, 14.600000f, 9.400000f, 14.700001f, 9.400000f, 14.800000f);
        path_0.cubicTo(9.400000f, 14.900001f, 9.299999f, 15.000000f, 9.200000f, 15.000000f);
        path_0.cubicTo(9.100000f, 15.000000f, 9.000000f, 14.900000f, 9.000000f, 14.800000f);
        path_0.cubicTo(9.000000f, 14.700001f, 9.000000f, 14.600000f, 9.200000f, 14.600000f);
        path_0.close();
        path_0.moveTo(9.200000f, 15.200000f);
        path_0.cubicTo(9.300000f, 15.200000f, 9.400000f, 15.300000f, 9.400000f, 15.400000f);
        path_0.cubicTo(9.400000f, 15.500000f, 9.299999f, 15.599999f, 9.200000f, 15.599999f);
        path_0.cubicTo(9.100000f, 15.599999f, 9.000000f, 15.499999f, 9.000000f, 15.400000f);
        path_0.cubicTo(9.000000f, 15.300000f, 9.000000f, 15.200000f, 9.200000f, 15.200000f);
        path_0.close();
        path_0.moveTo(9.200000f, 15.900001f);
        path_0.cubicTo(9.300000f, 15.900001f, 9.400000f, 16.000000f, 9.400000f, 16.100000f);
        path_0.cubicTo(9.400000f, 16.200001f, 9.299999f, 16.300001f, 9.200000f, 16.300001f);
        path_0.cubicTo(9.100000f, 16.300001f, 9.000000f, 16.200001f, 9.000000f, 16.100000f);
        path_0.cubicTo(8.900001f, 16.000000f, 9.000000f, 15.900001f, 9.200000f, 15.900001f);
        path_0.close();
        path_0.moveTo(9.200000f, 16.600000f);
        path_0.cubicTo(9.300000f, 16.600000f, 9.400000f, 16.700001f, 9.400000f, 16.800001f);
        path_0.cubicTo(9.400000f, 16.900002f, 9.299999f, 17.000002f, 9.200000f, 17.000002f);
        path_0.cubicTo(9.100000f, 17.000002f, 9.000000f, 16.900002f, 9.000000f, 16.800001f);
        path_0.cubicTo(8.900001f, 16.700001f, 9.000000f, 16.600000f, 9.200000f, 16.600000f);
        path_0.close();
        path_0.moveTo(9.200000f, 17.200001f);
        path_0.cubicTo(9.300000f, 17.200001f, 9.400000f, 17.300001f, 9.400000f, 17.400002f);
        path_0.cubicTo(9.400000f, 17.500002f, 9.299999f, 17.600002f, 9.200000f, 17.600002f);
        path_0.cubicTo(9.100000f, 17.600002f, 9.000000f, 17.500002f, 9.000000f, 17.400002f);
        path_0.cubicTo(8.900001f, 17.300001f, 9.000000f, 17.200001f, 9.200000f, 17.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 17.900000f);
        path_0.cubicTo(9.300000f, 17.900000f, 9.400000f, 18.000000f, 9.400000f, 18.100000f);
        path_0.cubicTo(9.400000f, 18.200001f, 9.299999f, 18.300001f, 9.200000f, 18.300001f);
        path_0.cubicTo(9.100000f, 18.300001f, 9.000000f, 18.200001f, 9.000000f, 18.100000f);
        path_0.cubicTo(9.000000f, 18.000000f, 9.000000f, 17.900000f, 9.200000f, 17.900000f);
        path_0.close();
        path_0.moveTo(9.200000f, 18.600000f);
        path_0.cubicTo(9.300000f, 18.600000f, 9.400000f, 18.700001f, 9.400000f, 18.800001f);
        path_0.cubicTo(9.400000f, 18.900002f, 9.300000f, 19.000000f, 9.200000f, 19.000000f);
        path_0.cubicTo(9.099999f, 19.000000f, 9.000000f, 18.900000f, 9.000000f, 18.799999f);
        path_0.cubicTo(9.000000f, 18.699999f, 9.000000f, 18.600000f, 9.200000f, 18.600000f);
        path_0.close();
        path_0.moveTo(9.200000f, 19.200001f);
        path_0.cubicTo(9.300000f, 19.200001f, 9.400000f, 19.300001f, 9.400000f, 19.400002f);
        path_0.cubicTo(9.400000f, 19.500002f, 9.299999f, 19.600002f, 9.200000f, 19.600002f);
        path_0.cubicTo(9.100000f, 19.600002f, 9.000000f, 19.500002f, 9.000000f, 19.400002f);
        path_0.cubicTo(8.900001f, 19.300001f, 9.000000f, 19.200001f, 9.200000f, 19.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 19.900000f);
        path_0.cubicTo(9.300000f, 19.900000f, 9.400000f, 20.000000f, 9.400000f, 20.100000f);
        path_0.cubicTo(9.400000f, 20.200001f, 9.299999f, 20.300001f, 9.200000f, 20.300001f);
        path_0.cubicTo(9.100000f, 20.300001f, 9.000000f, 20.200001f, 9.000000f, 20.100000f);
        path_0.cubicTo(8.900001f, 20.000000f, 9.000000f, 19.900000f, 9.200000f, 19.900000f);
        path_0.close();
        path_0.moveTo(9.200000f, 20.500000f);
        path_0.cubicTo(9.300000f, 20.500000f, 9.400000f, 20.600000f, 9.400000f, 20.700001f);
        path_0.cubicTo(9.400000f, 20.800001f, 9.300000f, 21.000000f, 9.200000f, 21.000000f);
        path_0.cubicTo(9.099999f, 21.000000f, 9.000000f, 20.900000f, 9.000000f, 20.799999f);
        path_0.cubicTo(9.000000f, 20.699999f, 9.000000f, 20.500000f, 9.200000f, 20.500000f);
        path_0.close();
        path_0.moveTo(9.200000f, 21.200001f);
        path_0.cubicTo(9.300000f, 21.200001f, 9.400000f, 21.300001f, 9.400000f, 21.400002f);
        path_0.cubicTo(9.400000f, 21.500002f, 9.299999f, 21.600002f, 9.200000f, 21.600002f);
        path_0.cubicTo(9.100000f, 21.600002f, 9.000000f, 21.500002f, 9.000000f, 21.400002f);
        path_0.cubicTo(9.000000f, 21.300001f, 9.000000f, 21.200001f, 9.200000f, 21.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 21.900000f);
        path_0.cubicTo(9.300000f, 21.900000f, 9.400000f, 22.000000f, 9.400000f, 22.100000f);
        path_0.cubicTo(9.400000f, 22.200001f, 9.299999f, 22.300001f, 9.200000f, 22.300001f);
        path_0.cubicTo(9.100000f, 22.300001f, 9.000000f, 22.200001f, 9.000000f, 22.100000f);
        path_0.cubicTo(9.000000f, 22.000000f, 9.000000f, 21.900000f, 9.200000f, 21.900000f);
        path_0.close();
        path_0.moveTo(9.200000f, 22.500000f);
        path_0.cubicTo(9.300000f, 22.500000f, 9.400000f, 22.600000f, 9.400000f, 22.700001f);
        path_0.cubicTo(9.400000f, 22.800001f, 9.299999f, 22.900002f, 9.200000f, 22.900002f);
        path_0.cubicTo(9.100000f, 22.900002f, 9.000000f, 22.800001f, 9.000000f, 22.700001f);
        path_0.cubicTo(8.900001f, 22.600000f, 9.000000f, 22.500000f, 9.200000f, 22.500000f);
        path_0.close();
        path_0.moveTo(9.200000f, 23.200001f);
        path_0.cubicTo(9.300000f, 23.200001f, 9.400000f, 23.300001f, 9.400000f, 23.400002f);
        path_0.cubicTo(9.400000f, 23.500002f, 9.299999f, 23.600002f, 9.200000f, 23.600002f);
        path_0.cubicTo(9.100000f, 23.600002f, 9.000000f, 23.500002f, 9.000000f, 23.400002f);
        path_0.cubicTo(9.000000f, 23.300001f, 9.000000f, 23.200001f, 9.200000f, 23.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 23.800001f);
        path_0.cubicTo(9.300000f, 23.800001f, 9.400000f, 23.900002f, 9.400000f, 24.000002f);
        path_0.cubicTo(9.400000f, 24.100002f, 9.299999f, 24.200003f, 9.200000f, 24.200003f);
        path_0.cubicTo(9.100000f, 24.200003f, 9.000000f, 24.100002f, 9.000000f, 24.000002f);
        path_0.cubicTo(9.000000f, 23.900002f, 9.000000f, 23.800001f, 9.200000f, 23.800001f);
        path_0.close();
        path_0.moveTo(9.200000f, 24.500000f);
        path_0.cubicTo(9.300000f, 24.500000f, 9.400000f, 24.600000f, 9.400000f, 24.700001f);
        path_0.cubicTo(9.400000f, 24.800001f, 9.299999f, 24.900002f, 9.200000f, 24.900002f);
        path_0.cubicTo(9.100000f, 24.900002f, 9.000000f, 24.800001f, 9.000000f, 24.700001f);
        path_0.cubicTo(9.000000f, 24.600000f, 9.000000f, 24.500000f, 9.200000f, 24.500000f);
        path_0.close();
        path_0.moveTo(9.200000f, 25.200001f);
        path_0.cubicTo(9.300000f, 25.200001f, 9.400000f, 25.300001f, 9.400000f, 25.400002f);
        path_0.cubicTo(9.400000f, 25.500002f, 9.299999f, 25.600002f, 9.200000f, 25.600002f);
        path_0.cubicTo(9.100000f, 25.600002f, 9.000000f, 25.500002f, 9.000000f, 25.400002f);
        path_0.cubicTo(9.000000f, 25.300001f, 9.000000f, 25.200001f, 9.200000f, 25.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 25.800001f);
        path_0.cubicTo(9.300000f, 25.800001f, 9.400000f, 25.900002f, 9.400000f, 26.000002f);
        path_0.cubicTo(9.400000f, 26.100002f, 9.299999f, 26.200003f, 9.200000f, 26.200003f);
        path_0.cubicTo(9.100000f, 26.200003f, 8.900001f, 26.200001f, 8.900001f, 26.000000f);
        path_0.cubicTo(8.900001f, 25.900000f, 9.000000f, 25.800001f, 9.200000f, 25.800001f);
        path_0.close();
        path_0.moveTo(9.200000f, 26.500000f);
        path_0.cubicTo(9.300000f, 26.500000f, 9.400000f, 26.600000f, 9.400000f, 26.700001f);
        path_0.cubicTo(9.400000f, 26.800001f, 9.299999f, 26.900002f, 9.200000f, 26.900002f);
        path_0.cubicTo(9.100000f, 26.900002f, 9.000000f, 26.800001f, 9.000000f, 26.700001f);
        path_0.cubicTo(9.000000f, 26.600000f, 9.000000f, 26.500000f, 9.200000f, 26.500000f);
        path_0.close();
        path_0.moveTo(9.200000f, 27.200001f);
        path_0.cubicTo(9.300000f, 27.200001f, 9.400000f, 27.300001f, 9.400000f, 27.400002f);
        path_0.cubicTo(9.400000f, 27.500002f, 9.299999f, 27.600002f, 9.200000f, 27.600002f);
        path_0.cubicTo(9.100000f, 27.600002f, 9.000000f, 27.500002f, 9.000000f, 27.400002f);
        path_0.cubicTo(9.000000f, 27.300001f, 9.000000f, 27.200001f, 9.200000f, 27.200001f);
        path_0.close();
        path_0.moveTo(9.200000f, 27.800001f);
        path_0.cubicTo(9.300000f, 27.800001f, 9.400000f, 27.900002f, 9.400000f, 28.000002f);
        path_0.cubicTo(9.400000f, 28.100002f, 9.299999f, 28.200003f, 9.200000f, 28.200003f);
        path_0.cubicTo(9.100000f, 28.200003f, 8.900001f, 28.100000f, 8.900001f, 28.000000f);
        path_0.cubicTo(8.900001f, 27.900000f, 9.000000f, 27.800001f, 9.200000f, 27.800001f);
        path_0.close();
        path_0.moveTo(9.200000f, 28.500000f);
        path_0.cubicTo(9.300000f, 28.500000f, 9.400000f, 28.600000f, 9.400000f, 28.700001f);
        path_0.cubicTo(9.400000f, 28.800001f, 9.299999f, 28.900002f, 9.200000f, 28.900002f);
        path_0.cubicTo(9.100000f, 28.900002f, 9.000000f, 28.800001f, 9.000000f, 28.700001f);
        path_0.cubicTo(9.000000f, 28.600000f, 9.000000f, 28.500000f, 9.200000f, 28.500000f);
        path_0.close();
        path_0.moveTo(9.800000f, 13.300000f);
        path_0.cubicTo(9.900001f, 13.300000f, 10.000000f, 13.400001f, 10.000000f, 13.500000f);
        path_0.cubicTo(10.000000f, 13.600000f, 9.900000f, 13.700000f, 9.800000f, 13.700000f);
        path_0.cubicTo(9.700000f, 13.700000f, 9.600000f, 13.599999f, 9.600000f, 13.500000f);
        path_0.cubicTo(9.600000f, 13.400001f, 9.700000f, 13.300000f, 9.800000f, 13.300000f);
        path_0.close();
        path_0.moveTo(9.600000f, 12.800000f);
        path_0.cubicTo(9.600000f, 12.700000f, 9.700001f, 12.600000f, 9.800000f, 12.600000f);
        path_0.cubicTo(9.900001f, 12.600000f, 10.000000f, 12.700001f, 10.000000f, 12.800000f);
        path_0.cubicTo(10.000000f, 12.900000f, 10.000000f, 13.000000f, 9.800000f, 13.000000f);
        path_0.cubicTo(9.700000f, 13.000000f, 9.600000f, 12.900001f, 9.600000f, 12.800000f);
        path_0.close();
        path_0.moveTo(9.800000f, 13.900001f);
        path_0.cubicTo(9.900001f, 13.900001f, 10.000000f, 14.000001f, 10.000000f, 14.100000f);
        path_0.cubicTo(10.000000f, 14.200000f, 9.900000f, 14.300000f, 9.800000f, 14.300000f);
        path_0.cubicTo(9.700000f, 14.300000f, 9.600000f, 14.200000f, 9.600000f, 14.100000f);
        path_0.cubicTo(9.600000f, 14.000001f, 9.700000f, 13.900001f, 9.800000f, 13.900001f);
        path_0.close();
        path_0.moveTo(9.800000f, 14.600000f);
        path_0.cubicTo(9.900001f, 14.600000f, 10.000000f, 14.700001f, 10.000000f, 14.800000f);
        path_0.cubicTo(10.000000f, 14.900001f, 9.900000f, 15.000000f, 9.800000f, 15.000000f);
        path_0.cubicTo(9.700000f, 15.000000f, 9.600000f, 14.900000f, 9.600000f, 14.800000f);
        path_0.cubicTo(9.600000f, 14.700000f, 9.700000f, 14.600000f, 9.800000f, 14.600000f);
        path_0.close();
        path_0.moveTo(9.800000f, 15.200000f);
        path_0.cubicTo(9.900001f, 15.200000f, 10.000000f, 15.300000f, 10.000000f, 15.400000f);
        path_0.cubicTo(10.000000f, 15.500000f, 9.900000f, 15.599999f, 9.800000f, 15.599999f);
        path_0.cubicTo(9.700000f, 15.599999f, 9.600000f, 15.499999f, 9.600000f, 15.400000f);
        path_0.cubicTo(9.600000f, 15.300000f, 9.700000f, 15.200000f, 9.800000f, 15.200000f);
        path_0.close();
        path_0.moveTo(9.800000f, 15.900001f);
        path_0.cubicTo(9.900001f, 15.900001f, 10.000000f, 16.000000f, 10.000000f, 16.100000f);
        path_0.cubicTo(10.000000f, 16.200001f, 9.900000f, 16.300001f, 9.800000f, 16.300001f);
        path_0.cubicTo(9.700000f, 16.300001f, 9.600000f, 16.200001f, 9.600000f, 16.100000f);
        path_0.cubicTo(9.600000f, 16.000000f, 9.700000f, 15.900001f, 9.800000f, 15.900001f);
        path_0.close();
        path_0.moveTo(9.800000f, 16.600000f);
        path_0.cubicTo(9.900001f, 16.600000f, 10.000000f, 16.700001f, 10.000000f, 16.800001f);
        path_0.cubicTo(10.000000f, 16.900002f, 9.900000f, 17.000002f, 9.800000f, 17.000002f);
        path_0.cubicTo(9.700000f, 17.000002f, 9.600000f, 16.900002f, 9.600000f, 16.800001f);
        path_0.cubicTo(9.600000f, 16.700001f, 9.700000f, 16.600000f, 9.800000f, 16.600000f);
        path_0.close();
        path_0.moveTo(9.800000f, 17.200001f);
        path_0.cubicTo(9.900001f, 17.200001f, 10.000000f, 17.300001f, 10.000000f, 17.400002f);
        path_0.cubicTo(10.000000f, 17.500002f, 9.900000f, 17.600002f, 9.800000f, 17.600002f);
        path_0.cubicTo(9.700000f, 17.600002f, 9.600000f, 17.500002f, 9.600000f, 17.400002f);
        path_0.cubicTo(9.600000f, 17.300001f, 9.700000f, 17.200001f, 9.800000f, 17.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 17.900000f);
        path_0.cubicTo(9.900001f, 17.900000f, 10.000000f, 18.000000f, 10.000000f, 18.100000f);
        path_0.cubicTo(10.000000f, 18.200001f, 9.900000f, 18.300001f, 9.800000f, 18.300001f);
        path_0.cubicTo(9.700000f, 18.300001f, 9.600000f, 18.200001f, 9.600000f, 18.100000f);
        path_0.cubicTo(9.600000f, 18.000000f, 9.700000f, 17.900000f, 9.800000f, 17.900000f);
        path_0.close();
        path_0.moveTo(9.800000f, 18.600000f);
        path_0.cubicTo(9.900001f, 18.600000f, 10.000000f, 18.700001f, 10.000000f, 18.800001f);
        path_0.cubicTo(10.000000f, 18.900002f, 10.000000f, 19.000000f, 9.800000f, 19.000000f);
        path_0.cubicTo(9.700000f, 19.000000f, 9.600000f, 18.900000f, 9.600000f, 18.799999f);
        path_0.cubicTo(9.600000f, 18.699999f, 9.700000f, 18.600000f, 9.800000f, 18.600000f);
        path_0.close();
        path_0.moveTo(9.800000f, 19.200001f);
        path_0.cubicTo(9.900001f, 19.200001f, 10.000000f, 19.300001f, 10.000000f, 19.400002f);
        path_0.cubicTo(10.000000f, 19.500002f, 9.900000f, 19.600002f, 9.800000f, 19.600002f);
        path_0.cubicTo(9.700000f, 19.600002f, 9.600000f, 19.500002f, 9.600000f, 19.400002f);
        path_0.cubicTo(9.600000f, 19.300001f, 9.700000f, 19.200001f, 9.800000f, 19.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 19.900000f);
        path_0.cubicTo(9.900001f, 19.900000f, 10.000000f, 20.000000f, 10.000000f, 20.100000f);
        path_0.cubicTo(10.000000f, 20.200001f, 9.900000f, 20.300001f, 9.800000f, 20.300001f);
        path_0.cubicTo(9.700000f, 20.300001f, 9.600000f, 20.200001f, 9.600000f, 20.100000f);
        path_0.cubicTo(9.600000f, 20.000000f, 9.700000f, 19.900000f, 9.800000f, 19.900000f);
        path_0.close();
        path_0.moveTo(9.800000f, 20.500000f);
        path_0.cubicTo(9.900001f, 20.500000f, 10.000000f, 20.600000f, 10.000000f, 20.700001f);
        path_0.cubicTo(10.000000f, 20.800001f, 10.000000f, 21.000000f, 9.800000f, 21.000000f);
        path_0.cubicTo(9.700000f, 21.000000f, 9.600000f, 20.900000f, 9.600000f, 20.799999f);
        path_0.cubicTo(9.600000f, 20.699999f, 9.700000f, 20.500000f, 9.800000f, 20.500000f);
        path_0.close();
        path_0.moveTo(9.800000f, 21.200001f);
        path_0.cubicTo(9.900001f, 21.200001f, 10.000000f, 21.300001f, 10.000000f, 21.400002f);
        path_0.cubicTo(10.000000f, 21.500002f, 9.900000f, 21.600002f, 9.800000f, 21.600002f);
        path_0.cubicTo(9.700000f, 21.600002f, 9.600000f, 21.500002f, 9.600000f, 21.400002f);
        path_0.cubicTo(9.600000f, 21.300001f, 9.700000f, 21.200001f, 9.800000f, 21.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 21.900000f);
        path_0.cubicTo(9.900001f, 21.900000f, 10.000000f, 22.000000f, 10.000000f, 22.100000f);
        path_0.cubicTo(10.000000f, 22.200001f, 9.900000f, 22.300001f, 9.800000f, 22.300001f);
        path_0.cubicTo(9.700000f, 22.300001f, 9.600000f, 22.200001f, 9.600000f, 22.100000f);
        path_0.cubicTo(9.600000f, 22.000000f, 9.700000f, 21.900000f, 9.800000f, 21.900000f);
        path_0.close();
        path_0.moveTo(9.800000f, 22.500000f);
        path_0.cubicTo(9.900001f, 22.500000f, 10.000000f, 22.600000f, 10.000000f, 22.700001f);
        path_0.cubicTo(10.000000f, 22.800001f, 9.900000f, 22.900002f, 9.800000f, 22.900002f);
        path_0.cubicTo(9.700000f, 22.900002f, 9.600000f, 22.800001f, 9.600000f, 22.700001f);
        path_0.cubicTo(9.600000f, 22.600000f, 9.700000f, 22.500000f, 9.800000f, 22.500000f);
        path_0.close();
        path_0.moveTo(9.800000f, 23.200001f);
        path_0.cubicTo(9.900001f, 23.200001f, 10.000000f, 23.300001f, 10.000000f, 23.400002f);
        path_0.cubicTo(10.000000f, 23.500002f, 9.900000f, 23.600002f, 9.800000f, 23.600002f);
        path_0.cubicTo(9.700000f, 23.600002f, 9.600000f, 23.500002f, 9.600000f, 23.400002f);
        path_0.cubicTo(9.600000f, 23.300001f, 9.700000f, 23.200001f, 9.800000f, 23.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 23.800001f);
        path_0.cubicTo(9.900001f, 23.800001f, 10.000000f, 23.900002f, 10.000000f, 24.000002f);
        path_0.cubicTo(10.000000f, 24.100002f, 9.900000f, 24.200003f, 9.800000f, 24.200003f);
        path_0.cubicTo(9.700000f, 24.200003f, 9.600000f, 24.100002f, 9.600000f, 24.000002f);
        path_0.cubicTo(9.600000f, 23.900002f, 9.700000f, 23.800001f, 9.800000f, 23.800001f);
        path_0.close();
        path_0.moveTo(9.800000f, 24.500000f);
        path_0.cubicTo(9.900001f, 24.500000f, 10.000000f, 24.600000f, 10.000000f, 24.700001f);
        path_0.cubicTo(10.000000f, 24.800001f, 9.900000f, 24.900002f, 9.800000f, 24.900002f);
        path_0.cubicTo(9.700000f, 24.900002f, 9.600000f, 24.800001f, 9.600000f, 24.700001f);
        path_0.cubicTo(9.600000f, 24.600000f, 9.700000f, 24.500000f, 9.800000f, 24.500000f);
        path_0.close();
        path_0.moveTo(9.800000f, 25.200001f);
        path_0.cubicTo(9.900001f, 25.200001f, 10.000000f, 25.300001f, 10.000000f, 25.400002f);
        path_0.cubicTo(10.000000f, 25.500002f, 9.900000f, 25.600002f, 9.800000f, 25.600002f);
        path_0.cubicTo(9.700000f, 25.600002f, 9.600000f, 25.500002f, 9.600000f, 25.400002f);
        path_0.cubicTo(9.600000f, 25.300001f, 9.700000f, 25.200001f, 9.800000f, 25.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 25.800001f);
        path_0.cubicTo(9.900001f, 25.800001f, 10.000000f, 25.900002f, 10.000000f, 26.000002f);
        path_0.cubicTo(10.000000f, 26.100002f, 9.900000f, 26.200003f, 9.800000f, 26.200003f);
        path_0.cubicTo(9.700000f, 26.200003f, 9.600000f, 26.100002f, 9.600000f, 26.000002f);
        path_0.cubicTo(9.600000f, 25.900000f, 9.700000f, 25.800001f, 9.800000f, 25.800001f);
        path_0.close();
        path_0.moveTo(9.800000f, 26.500000f);
        path_0.cubicTo(9.900001f, 26.500000f, 10.000000f, 26.600000f, 10.000000f, 26.700001f);
        path_0.cubicTo(10.000000f, 26.800001f, 9.900000f, 26.900002f, 9.800000f, 26.900002f);
        path_0.cubicTo(9.700000f, 26.900002f, 9.600000f, 26.800001f, 9.600000f, 26.700001f);
        path_0.cubicTo(9.600000f, 26.600000f, 9.700000f, 26.500000f, 9.800000f, 26.500000f);
        path_0.close();
        path_0.moveTo(9.800000f, 27.200001f);
        path_0.cubicTo(9.900001f, 27.200001f, 10.000000f, 27.300001f, 10.000000f, 27.400002f);
        path_0.cubicTo(10.000000f, 27.500002f, 9.900000f, 27.600002f, 9.800000f, 27.600002f);
        path_0.cubicTo(9.700000f, 27.600002f, 9.600000f, 27.500002f, 9.600000f, 27.400002f);
        path_0.cubicTo(9.600000f, 27.300001f, 9.700000f, 27.200001f, 9.800000f, 27.200001f);
        path_0.close();
        path_0.moveTo(9.800000f, 27.800001f);
        path_0.cubicTo(9.900001f, 27.800001f, 10.000000f, 27.900002f, 10.000000f, 28.000002f);
        path_0.cubicTo(10.000000f, 28.100002f, 9.900000f, 28.200003f, 9.800000f, 28.200003f);
        path_0.cubicTo(9.700000f, 28.200003f, 9.600000f, 28.100002f, 9.600000f, 28.000002f);
        path_0.cubicTo(9.600000f, 27.900000f, 9.700000f, 27.800001f, 9.800000f, 27.800001f);
        path_0.close();
        path_0.moveTo(9.800000f, 28.500000f);
        path_0.cubicTo(9.900001f, 28.500000f, 10.000000f, 28.600000f, 10.000000f, 28.700001f);
        path_0.cubicTo(10.000000f, 28.800001f, 9.900000f, 28.900002f, 9.800000f, 28.900002f);
        path_0.cubicTo(9.700000f, 28.900002f, 9.600000f, 28.800001f, 9.600000f, 28.700001f);
        path_0.cubicTo(9.600000f, 28.600000f, 9.700000f, 28.500000f, 9.800000f, 28.500000f);
        path_0.close();
        path_0.moveTo(10.500000f, 13.300000f);
        path_0.cubicTo(10.600000f, 13.300000f, 10.700000f, 13.400001f, 10.700000f, 13.500000f);
        path_0.cubicTo(10.700000f, 13.600000f, 10.599999f, 13.700000f, 10.500000f, 13.700000f);
        path_0.cubicTo(10.400000f, 13.700000f, 10.300000f, 13.599999f, 10.300000f, 13.500000f);
        path_0.cubicTo(10.300000f, 13.400001f, 10.400001f, 13.300000f, 10.500000f, 13.300000f);
        path_0.close();
        path_0.moveTo(10.300000f, 12.800000f);
        path_0.cubicTo(10.300000f, 12.700000f, 10.400001f, 12.600000f, 10.500000f, 12.600000f);
        path_0.cubicTo(10.600000f, 12.600000f, 10.700000f, 12.700001f, 10.700000f, 12.800000f);
        path_0.cubicTo(10.700000f, 12.900000f, 10.600000f, 13.000000f, 10.500000f, 13.000000f);
        path_0.cubicTo(10.400000f, 13.000000f, 10.300000f, 12.900001f, 10.300000f, 12.800000f);
        path_0.close();
        path_0.moveTo(10.500000f, 13.900001f);
        path_0.cubicTo(10.600000f, 13.900001f, 10.700000f, 14.000001f, 10.700000f, 14.100000f);
        path_0.cubicTo(10.700000f, 14.200000f, 10.599999f, 14.300000f, 10.500000f, 14.300000f);
        path_0.cubicTo(10.400000f, 14.300000f, 10.300000f, 14.200000f, 10.300000f, 14.100000f);
        path_0.cubicTo(10.300000f, 14.000001f, 10.400001f, 13.900001f, 10.500000f, 13.900001f);
        path_0.close();
        path_0.moveTo(10.500000f, 14.600000f);
        path_0.cubicTo(10.600000f, 14.600000f, 10.700000f, 14.700001f, 10.700000f, 14.800000f);
        path_0.cubicTo(10.700000f, 14.900001f, 10.599999f, 15.000000f, 10.500000f, 15.000000f);
        path_0.cubicTo(10.400000f, 15.000000f, 10.300000f, 14.900000f, 10.300000f, 14.800000f);
        path_0.cubicTo(10.300000f, 14.700001f, 10.400001f, 14.600000f, 10.500000f, 14.600000f);
        path_0.close();
        path_0.moveTo(10.500000f, 15.200000f);
        path_0.cubicTo(10.600000f, 15.200000f, 10.700000f, 15.300000f, 10.700000f, 15.400000f);
        path_0.cubicTo(10.700000f, 15.500000f, 10.599999f, 15.599999f, 10.500000f, 15.599999f);
        path_0.cubicTo(10.400000f, 15.599999f, 10.300000f, 15.499999f, 10.300000f, 15.400000f);
        path_0.cubicTo(10.300000f, 15.300000f, 10.400001f, 15.200000f, 10.500000f, 15.200000f);
        path_0.close();
        path_0.moveTo(10.500000f, 15.900001f);
        path_0.cubicTo(10.600000f, 15.900001f, 10.700000f, 16.000000f, 10.700000f, 16.100000f);
        path_0.cubicTo(10.700000f, 16.200001f, 10.599999f, 16.300001f, 10.500000f, 16.300001f);
        path_0.cubicTo(10.400000f, 16.300001f, 10.300000f, 16.200001f, 10.300000f, 16.100000f);
        path_0.cubicTo(10.300000f, 16.000000f, 10.400001f, 15.900001f, 10.500000f, 15.900001f);
        path_0.close();
        path_0.moveTo(10.500000f, 16.600000f);
        path_0.cubicTo(10.600000f, 16.600000f, 10.700000f, 16.700001f, 10.700000f, 16.800001f);
        path_0.cubicTo(10.700000f, 16.900002f, 10.599999f, 17.000002f, 10.500000f, 17.000002f);
        path_0.cubicTo(10.400000f, 17.000002f, 10.300000f, 16.900002f, 10.300000f, 16.800001f);
        path_0.cubicTo(10.300000f, 16.700001f, 10.400001f, 16.600000f, 10.500000f, 16.600000f);
        path_0.close();
        path_0.moveTo(10.500000f, 17.200001f);
        path_0.cubicTo(10.600000f, 17.200001f, 10.700000f, 17.300001f, 10.700000f, 17.400002f);
        path_0.cubicTo(10.700000f, 17.500002f, 10.599999f, 17.600002f, 10.500000f, 17.600002f);
        path_0.cubicTo(10.400000f, 17.600002f, 10.300000f, 17.500002f, 10.300000f, 17.400002f);
        path_0.cubicTo(10.300000f, 17.300001f, 10.400001f, 17.200001f, 10.500000f, 17.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 17.900000f);
        path_0.cubicTo(10.600000f, 17.900000f, 10.700000f, 18.000000f, 10.700000f, 18.100000f);
        path_0.cubicTo(10.700000f, 18.200001f, 10.599999f, 18.300001f, 10.500000f, 18.300001f);
        path_0.cubicTo(10.400000f, 18.300001f, 10.300000f, 18.200001f, 10.300000f, 18.100000f);
        path_0.cubicTo(10.300000f, 18.000000f, 10.400001f, 17.900000f, 10.500000f, 17.900000f);
        path_0.close();
        path_0.moveTo(10.500000f, 18.600000f);
        path_0.cubicTo(10.600000f, 18.600000f, 10.700000f, 18.700001f, 10.700000f, 18.800001f);
        path_0.cubicTo(10.700000f, 18.900002f, 10.600000f, 19.000000f, 10.500000f, 19.000000f);
        path_0.cubicTo(10.400000f, 19.000000f, 10.300000f, 18.900000f, 10.300000f, 18.799999f);
        path_0.cubicTo(10.300000f, 18.699999f, 10.400001f, 18.600000f, 10.500000f, 18.600000f);
        path_0.close();
        path_0.moveTo(10.500000f, 19.200001f);
        path_0.cubicTo(10.600000f, 19.200001f, 10.700000f, 19.300001f, 10.700000f, 19.400002f);
        path_0.cubicTo(10.700000f, 19.500002f, 10.599999f, 19.600002f, 10.500000f, 19.600002f);
        path_0.cubicTo(10.400000f, 19.600002f, 10.300000f, 19.500002f, 10.300000f, 19.400002f);
        path_0.cubicTo(10.300000f, 19.300001f, 10.400001f, 19.200001f, 10.500000f, 19.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 19.900000f);
        path_0.cubicTo(10.600000f, 19.900000f, 10.700000f, 20.000000f, 10.700000f, 20.100000f);
        path_0.cubicTo(10.700000f, 20.200001f, 10.599999f, 20.300001f, 10.500000f, 20.300001f);
        path_0.cubicTo(10.400000f, 20.300001f, 10.300000f, 20.200001f, 10.300000f, 20.100000f);
        path_0.cubicTo(10.300000f, 20.000000f, 10.400001f, 19.900000f, 10.500000f, 19.900000f);
        path_0.close();
        path_0.moveTo(10.500000f, 20.500000f);
        path_0.cubicTo(10.600000f, 20.500000f, 10.700000f, 20.600000f, 10.700000f, 20.700001f);
        path_0.cubicTo(10.700000f, 20.800001f, 10.600000f, 21.000000f, 10.500000f, 21.000000f);
        path_0.cubicTo(10.400000f, 21.000000f, 10.300000f, 20.900000f, 10.300000f, 20.799999f);
        path_0.cubicTo(10.300000f, 20.699999f, 10.400001f, 20.500000f, 10.500000f, 20.500000f);
        path_0.close();
        path_0.moveTo(10.500000f, 21.200001f);
        path_0.cubicTo(10.600000f, 21.200001f, 10.700000f, 21.300001f, 10.700000f, 21.400002f);
        path_0.cubicTo(10.700000f, 21.500002f, 10.599999f, 21.600002f, 10.500000f, 21.600002f);
        path_0.cubicTo(10.400000f, 21.600002f, 10.300000f, 21.500002f, 10.300000f, 21.400002f);
        path_0.cubicTo(10.300000f, 21.300001f, 10.400001f, 21.200001f, 10.500000f, 21.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 21.900000f);
        path_0.cubicTo(10.600000f, 21.900000f, 10.700000f, 22.000000f, 10.700000f, 22.100000f);
        path_0.cubicTo(10.700000f, 22.200001f, 10.599999f, 22.300001f, 10.500000f, 22.300001f);
        path_0.cubicTo(10.400000f, 22.300001f, 10.300000f, 22.200001f, 10.300000f, 22.100000f);
        path_0.cubicTo(10.300000f, 22.000000f, 10.400001f, 21.900000f, 10.500000f, 21.900000f);
        path_0.close();
        path_0.moveTo(10.500000f, 22.500000f);
        path_0.cubicTo(10.600000f, 22.500000f, 10.700000f, 22.600000f, 10.700000f, 22.700001f);
        path_0.cubicTo(10.700000f, 22.800001f, 10.599999f, 22.900002f, 10.500000f, 22.900002f);
        path_0.cubicTo(10.400000f, 22.900002f, 10.300000f, 22.800001f, 10.300000f, 22.700001f);
        path_0.cubicTo(10.300000f, 22.600000f, 10.400001f, 22.500000f, 10.500000f, 22.500000f);
        path_0.close();
        path_0.moveTo(10.500000f, 23.200001f);
        path_0.cubicTo(10.600000f, 23.200001f, 10.700000f, 23.300001f, 10.700000f, 23.400002f);
        path_0.cubicTo(10.700000f, 23.500002f, 10.599999f, 23.600002f, 10.500000f, 23.600002f);
        path_0.cubicTo(10.400000f, 23.600002f, 10.300000f, 23.500002f, 10.300000f, 23.400002f);
        path_0.cubicTo(10.300000f, 23.300001f, 10.400001f, 23.200001f, 10.500000f, 23.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 23.800001f);
        path_0.cubicTo(10.600000f, 23.800001f, 10.700000f, 23.900002f, 10.700000f, 24.000002f);
        path_0.cubicTo(10.700000f, 24.100002f, 10.599999f, 24.200003f, 10.500000f, 24.200003f);
        path_0.cubicTo(10.400000f, 24.200003f, 10.300000f, 24.100002f, 10.300000f, 24.000002f);
        path_0.cubicTo(10.300000f, 23.900002f, 10.400001f, 23.800001f, 10.500000f, 23.800001f);
        path_0.close();
        path_0.moveTo(10.500000f, 24.500000f);
        path_0.cubicTo(10.600000f, 24.500000f, 10.700000f, 24.600000f, 10.700000f, 24.700001f);
        path_0.cubicTo(10.700000f, 24.800001f, 10.599999f, 24.900002f, 10.500000f, 24.900002f);
        path_0.cubicTo(10.400000f, 24.900002f, 10.300000f, 24.800001f, 10.300000f, 24.700001f);
        path_0.cubicTo(10.300000f, 24.600000f, 10.400001f, 24.500000f, 10.500000f, 24.500000f);
        path_0.close();
        path_0.moveTo(10.500000f, 25.200001f);
        path_0.cubicTo(10.600000f, 25.200001f, 10.700000f, 25.300001f, 10.700000f, 25.400002f);
        path_0.cubicTo(10.700000f, 25.500002f, 10.599999f, 25.600002f, 10.500000f, 25.600002f);
        path_0.cubicTo(10.400000f, 25.600002f, 10.300000f, 25.500002f, 10.300000f, 25.400002f);
        path_0.cubicTo(10.300000f, 25.300001f, 10.400001f, 25.200001f, 10.500000f, 25.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 25.800001f);
        path_0.cubicTo(10.600000f, 25.800001f, 10.700000f, 25.900002f, 10.700000f, 26.000002f);
        path_0.cubicTo(10.700000f, 26.100002f, 10.599999f, 26.200003f, 10.500000f, 26.200003f);
        path_0.cubicTo(10.400000f, 26.200003f, 10.300000f, 26.100002f, 10.300000f, 26.000002f);
        path_0.cubicTo(10.300000f, 25.900000f, 10.400001f, 25.800001f, 10.500000f, 25.800001f);
        path_0.close();
        path_0.moveTo(10.500000f, 26.500000f);
        path_0.cubicTo(10.600000f, 26.500000f, 10.700000f, 26.600000f, 10.700000f, 26.700001f);
        path_0.cubicTo(10.700000f, 26.800001f, 10.599999f, 26.900002f, 10.500000f, 26.900002f);
        path_0.cubicTo(10.400000f, 26.900002f, 10.300000f, 26.800001f, 10.300000f, 26.700001f);
        path_0.cubicTo(10.300000f, 26.600000f, 10.400001f, 26.500000f, 10.500000f, 26.500000f);
        path_0.close();
        path_0.moveTo(10.500000f, 27.200001f);
        path_0.cubicTo(10.600000f, 27.200001f, 10.700000f, 27.300001f, 10.700000f, 27.400002f);
        path_0.cubicTo(10.700000f, 27.500002f, 10.599999f, 27.600002f, 10.500000f, 27.600002f);
        path_0.cubicTo(10.400000f, 27.600002f, 10.300000f, 27.500002f, 10.300000f, 27.400002f);
        path_0.cubicTo(10.300000f, 27.300001f, 10.400001f, 27.200001f, 10.500000f, 27.200001f);
        path_0.close();
        path_0.moveTo(10.500000f, 27.800001f);
        path_0.cubicTo(10.600000f, 27.800001f, 10.700000f, 27.900002f, 10.700000f, 28.000002f);
        path_0.cubicTo(10.700000f, 28.100002f, 10.599999f, 28.200003f, 10.500000f, 28.200003f);
        path_0.cubicTo(10.400000f, 28.200003f, 10.300000f, 28.100002f, 10.300000f, 28.000002f);
        path_0.cubicTo(10.300000f, 27.900002f, 10.400001f, 27.800001f, 10.500000f, 27.800001f);
        path_0.close();
        path_0.moveTo(10.500000f, 28.500000f);
        path_0.cubicTo(10.600000f, 28.500000f, 10.700000f, 28.600000f, 10.700000f, 28.700001f);
        path_0.cubicTo(10.700000f, 28.800001f, 10.599999f, 28.900002f, 10.500000f, 28.900002f);
        path_0.cubicTo(10.400000f, 28.900002f, 10.300000f, 28.800001f, 10.300000f, 28.700001f);
        path_0.cubicTo(10.300000f, 28.600000f, 10.400001f, 28.500000f, 10.500000f, 28.500000f);
        path_0.close();
        path_0.moveTo(11.200000f, 13.300000f);
        path_0.cubicTo(11.300000f, 13.300000f, 11.400000f, 13.400001f, 11.400000f, 13.500000f);
        path_0.cubicTo(11.400000f, 13.600000f, 11.299999f, 13.700000f, 11.200000f, 13.700000f);
        path_0.cubicTo(11.100000f, 13.700000f, 11.000000f, 13.600000f, 11.000000f, 13.500000f);
        path_0.cubicTo(11.000000f, 13.400001f, 11.100000f, 13.300000f, 11.200000f, 13.300000f);
        path_0.close();
        path_0.moveTo(11.000000f, 12.800000f);
        path_0.cubicTo(11.000000f, 12.700000f, 11.100000f, 12.600000f, 11.200000f, 12.600000f);
        path_0.cubicTo(11.299999f, 12.600000f, 11.400000f, 12.700001f, 11.400000f, 12.800000f);
        path_0.cubicTo(11.400000f, 12.900000f, 11.300000f, 13.000000f, 11.200000f, 13.000000f);
        path_0.cubicTo(11.099999f, 13.000000f, 11.000000f, 12.900001f, 11.000000f, 12.800000f);
        path_0.close();
        path_0.moveTo(11.200000f, 13.900001f);
        path_0.cubicTo(11.300000f, 13.900001f, 11.400000f, 14.000001f, 11.400000f, 14.100000f);
        path_0.cubicTo(11.400000f, 14.200000f, 11.299999f, 14.300000f, 11.200000f, 14.300000f);
        path_0.cubicTo(11.100000f, 14.300000f, 11.000000f, 14.200000f, 11.000000f, 14.100000f);
        path_0.cubicTo(11.000000f, 14.000001f, 11.100000f, 13.900001f, 11.200000f, 13.900001f);
        path_0.close();
        path_0.moveTo(11.200000f, 14.600000f);
        path_0.cubicTo(11.300000f, 14.600000f, 11.400000f, 14.700001f, 11.400000f, 14.800000f);
        path_0.cubicTo(11.400000f, 14.900001f, 11.299999f, 15.000000f, 11.200000f, 15.000000f);
        path_0.cubicTo(11.100000f, 15.000000f, 11.000000f, 14.900001f, 11.000000f, 14.800000f);
        path_0.cubicTo(11.000000f, 14.700000f, 11.100000f, 14.600000f, 11.200000f, 14.600000f);
        path_0.close();
        path_0.moveTo(11.200000f, 15.200000f);
        path_0.cubicTo(11.300000f, 15.200000f, 11.400000f, 15.300000f, 11.400000f, 15.400000f);
        path_0.cubicTo(11.400000f, 15.500000f, 11.299999f, 15.599999f, 11.200000f, 15.599999f);
        path_0.cubicTo(11.100000f, 15.599999f, 11.000000f, 15.600000f, 11.000000f, 15.500000f);
        path_0.cubicTo(11.000000f, 15.400000f, 11.100000f, 15.200000f, 11.200000f, 15.200000f);
        path_0.close();
        path_0.moveTo(11.200000f, 15.900001f);
        path_0.cubicTo(11.300000f, 15.900001f, 11.400000f, 16.000000f, 11.400000f, 16.100000f);
        path_0.cubicTo(11.400000f, 16.200001f, 11.299999f, 16.300001f, 11.200000f, 16.300001f);
        path_0.cubicTo(11.100000f, 16.300001f, 11.000000f, 16.200001f, 11.000000f, 16.100000f);
        path_0.cubicTo(11.000000f, 16.000000f, 11.100000f, 15.900001f, 11.200000f, 15.900001f);
        path_0.close();
        path_0.moveTo(11.200000f, 16.600000f);
        path_0.cubicTo(11.300000f, 16.600000f, 11.400000f, 16.700001f, 11.400000f, 16.800001f);
        path_0.cubicTo(11.400000f, 16.900002f, 11.299999f, 17.000002f, 11.200000f, 17.000002f);
        path_0.cubicTo(11.100000f, 17.000002f, 11.000000f, 16.900000f, 11.000000f, 16.800001f);
        path_0.cubicTo(11.000000f, 16.700001f, 11.100000f, 16.600000f, 11.200000f, 16.600000f);
        path_0.close();
        path_0.moveTo(11.200000f, 17.200001f);
        path_0.cubicTo(11.300000f, 17.200001f, 11.400000f, 17.300001f, 11.400000f, 17.400002f);
        path_0.cubicTo(11.400000f, 17.500002f, 11.299999f, 17.600002f, 11.200000f, 17.600002f);
        path_0.cubicTo(11.100000f, 17.600002f, 11.000000f, 17.600000f, 11.000000f, 17.400000f);
        path_0.cubicTo(11.000000f, 17.300001f, 11.100000f, 17.200001f, 11.200000f, 17.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 17.900000f);
        path_0.cubicTo(11.300000f, 17.900000f, 11.400000f, 18.000000f, 11.400000f, 18.100000f);
        path_0.cubicTo(11.400000f, 18.200001f, 11.299999f, 18.300001f, 11.200000f, 18.300001f);
        path_0.cubicTo(11.100000f, 18.300001f, 11.000000f, 18.200001f, 11.000000f, 18.100000f);
        path_0.cubicTo(11.000000f, 18.000000f, 11.100000f, 17.900000f, 11.200000f, 17.900000f);
        path_0.close();
        path_0.moveTo(11.200000f, 18.600000f);
        path_0.cubicTo(11.300000f, 18.600000f, 11.400000f, 18.700001f, 11.400000f, 18.800001f);
        path_0.cubicTo(11.400000f, 18.900002f, 11.300000f, 19.000000f, 11.200000f, 19.000000f);
        path_0.cubicTo(11.099999f, 19.000000f, 11.000000f, 18.900000f, 11.000000f, 18.800001f);
        path_0.cubicTo(11.000000f, 18.700003f, 11.100000f, 18.600000f, 11.200000f, 18.600000f);
        path_0.close();
        path_0.moveTo(11.200000f, 19.200001f);
        path_0.cubicTo(11.300000f, 19.200001f, 11.400000f, 19.300001f, 11.400000f, 19.400002f);
        path_0.cubicTo(11.400000f, 19.500002f, 11.299999f, 19.600002f, 11.200000f, 19.600002f);
        path_0.cubicTo(11.100000f, 19.600002f, 11.000000f, 19.500000f, 11.000000f, 19.400000f);
        path_0.cubicTo(11.000000f, 19.300001f, 11.100000f, 19.200001f, 11.200000f, 19.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 19.900000f);
        path_0.cubicTo(11.300000f, 19.900000f, 11.400000f, 20.000000f, 11.400000f, 20.100000f);
        path_0.cubicTo(11.400000f, 20.200001f, 11.299999f, 20.300001f, 11.200000f, 20.300001f);
        path_0.cubicTo(11.100000f, 20.300001f, 11.000000f, 20.200001f, 11.000000f, 20.100000f);
        path_0.cubicTo(11.000000f, 20.000000f, 11.100000f, 19.900000f, 11.200000f, 19.900000f);
        path_0.close();
        path_0.moveTo(11.200000f, 20.500000f);
        path_0.cubicTo(11.300000f, 20.500000f, 11.400000f, 20.600000f, 11.400000f, 20.700001f);
        path_0.cubicTo(11.400000f, 20.800001f, 11.300000f, 21.000000f, 11.200000f, 21.000000f);
        path_0.cubicTo(11.099999f, 21.000000f, 11.000000f, 20.900000f, 11.000000f, 20.700001f);
        path_0.cubicTo(11.000000f, 20.500002f, 11.100000f, 20.500000f, 11.200000f, 20.500000f);
        path_0.close();
        path_0.moveTo(11.200000f, 21.200001f);
        path_0.cubicTo(11.300000f, 21.200001f, 11.400000f, 21.300001f, 11.400000f, 21.400002f);
        path_0.cubicTo(11.400000f, 21.500002f, 11.299999f, 21.600002f, 11.200000f, 21.600002f);
        path_0.cubicTo(11.100000f, 21.600002f, 11.000000f, 21.500000f, 11.000000f, 21.400000f);
        path_0.cubicTo(11.000000f, 21.299999f, 11.100000f, 21.200001f, 11.200000f, 21.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 21.900000f);
        path_0.cubicTo(11.300000f, 21.900000f, 11.400000f, 22.000000f, 11.400000f, 22.100000f);
        path_0.cubicTo(11.400000f, 22.200001f, 11.299999f, 22.300001f, 11.200000f, 22.300001f);
        path_0.cubicTo(11.100000f, 22.300001f, 11.000000f, 22.200001f, 11.000000f, 22.100000f);
        path_0.cubicTo(11.000000f, 22.000000f, 11.100000f, 21.900000f, 11.200000f, 21.900000f);
        path_0.close();
        path_0.moveTo(11.200000f, 22.500000f);
        path_0.cubicTo(11.300000f, 22.500000f, 11.400000f, 22.600000f, 11.400000f, 22.700001f);
        path_0.cubicTo(11.400000f, 22.800001f, 11.299999f, 22.900002f, 11.200000f, 22.900002f);
        path_0.cubicTo(11.100000f, 22.900002f, 11.000000f, 22.900000f, 11.000000f, 22.700001f);
        path_0.cubicTo(11.000000f, 22.600000f, 11.100000f, 22.500000f, 11.200000f, 22.500000f);
        path_0.close();
        path_0.moveTo(11.200000f, 23.200001f);
        path_0.cubicTo(11.300000f, 23.200001f, 11.400000f, 23.300001f, 11.400000f, 23.400002f);
        path_0.cubicTo(11.400000f, 23.500002f, 11.299999f, 23.600002f, 11.200000f, 23.600002f);
        path_0.cubicTo(11.100000f, 23.600002f, 11.000000f, 23.500000f, 11.000000f, 23.400000f);
        path_0.cubicTo(11.000000f, 23.299999f, 11.100000f, 23.200001f, 11.200000f, 23.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 23.800001f);
        path_0.cubicTo(11.300000f, 23.800001f, 11.400000f, 23.900002f, 11.400000f, 24.000002f);
        path_0.cubicTo(11.400000f, 24.100002f, 11.299999f, 24.200003f, 11.200000f, 24.200003f);
        path_0.cubicTo(11.100000f, 24.200003f, 11.000000f, 24.200001f, 11.000000f, 24.100000f);
        path_0.cubicTo(11.000000f, 24.000000f, 11.100000f, 23.800001f, 11.200000f, 23.800001f);
        path_0.close();
        path_0.moveTo(11.200000f, 24.500000f);
        path_0.cubicTo(11.300000f, 24.500000f, 11.400000f, 24.600000f, 11.400000f, 24.700001f);
        path_0.cubicTo(11.400000f, 24.800001f, 11.299999f, 24.900002f, 11.200000f, 24.900002f);
        path_0.cubicTo(11.100000f, 24.900002f, 11.000000f, 24.800001f, 11.000000f, 24.700001f);
        path_0.cubicTo(11.000000f, 24.600000f, 11.100000f, 24.500000f, 11.200000f, 24.500000f);
        path_0.close();
        path_0.moveTo(11.200000f, 25.200001f);
        path_0.cubicTo(11.300000f, 25.200001f, 11.400000f, 25.300001f, 11.400000f, 25.400002f);
        path_0.cubicTo(11.400000f, 25.500002f, 11.299999f, 25.600002f, 11.200000f, 25.600002f);
        path_0.cubicTo(11.100000f, 25.600002f, 11.000000f, 25.500000f, 11.000000f, 25.400000f);
        path_0.cubicTo(11.000000f, 25.299999f, 11.100000f, 25.200001f, 11.200000f, 25.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 25.800001f);
        path_0.cubicTo(11.300000f, 25.800001f, 11.400000f, 25.900002f, 11.400000f, 26.000002f);
        path_0.cubicTo(11.400000f, 26.100002f, 11.299999f, 26.200003f, 11.200000f, 26.200003f);
        path_0.cubicTo(11.100000f, 26.200003f, 11.000000f, 26.200001f, 11.000000f, 26.000000f);
        path_0.cubicTo(11.000000f, 25.900000f, 11.100000f, 25.800001f, 11.200000f, 25.800001f);
        path_0.close();
        path_0.moveTo(11.200000f, 26.500000f);
        path_0.cubicTo(11.300000f, 26.500000f, 11.400000f, 26.600000f, 11.400000f, 26.700001f);
        path_0.cubicTo(11.400000f, 26.800001f, 11.299999f, 26.900002f, 11.200000f, 26.900002f);
        path_0.cubicTo(11.100000f, 26.900002f, 11.000000f, 26.800001f, 11.000000f, 26.700001f);
        path_0.cubicTo(11.000000f, 26.600000f, 11.100000f, 26.500000f, 11.200000f, 26.500000f);
        path_0.close();
        path_0.moveTo(11.200000f, 27.200001f);
        path_0.cubicTo(11.300000f, 27.200001f, 11.400000f, 27.300001f, 11.400000f, 27.400002f);
        path_0.cubicTo(11.400000f, 27.500002f, 11.299999f, 27.600002f, 11.200000f, 27.600002f);
        path_0.cubicTo(11.100000f, 27.600002f, 11.000000f, 27.500000f, 11.000000f, 27.400000f);
        path_0.cubicTo(11.000000f, 27.299999f, 11.100000f, 27.200001f, 11.200000f, 27.200001f);
        path_0.close();
        path_0.moveTo(11.200000f, 27.800001f);
        path_0.cubicTo(11.300000f, 27.800001f, 11.400000f, 27.900002f, 11.400000f, 28.000002f);
        path_0.cubicTo(11.400000f, 28.100002f, 11.299999f, 28.200003f, 11.200000f, 28.200003f);
        path_0.cubicTo(11.100000f, 28.200003f, 11.000000f, 28.100000f, 11.000000f, 28.000000f);
        path_0.cubicTo(11.000000f, 27.900000f, 11.100000f, 27.800001f, 11.200000f, 27.800001f);
        path_0.close();
        path_0.moveTo(11.200000f, 28.500000f);
        path_0.cubicTo(11.300000f, 28.500000f, 11.400000f, 28.600000f, 11.400000f, 28.700001f);
        path_0.cubicTo(11.400000f, 28.800001f, 11.299999f, 28.900002f, 11.200000f, 28.900002f);
        path_0.cubicTo(11.100000f, 28.900002f, 11.000000f, 28.800001f, 11.000000f, 28.700001f);
        path_0.cubicTo(11.000000f, 28.600000f, 11.100000f, 28.500000f, 11.200000f, 28.500000f);
        path_0.close();
        path_0.moveTo(11.900001f, 13.300000f);
        path_0.cubicTo(12.000001f, 13.300000f, 12.100000f, 13.400001f, 12.100000f, 13.500000f);
        path_0.cubicTo(12.100000f, 13.600000f, 12.000000f, 13.700000f, 11.900001f, 13.700000f);
        path_0.cubicTo(11.800001f, 13.700000f, 11.700001f, 13.599999f, 11.700001f, 13.500000f);
        path_0.cubicTo(11.700000f, 13.400001f, 11.800000f, 13.300000f, 11.900001f, 13.300000f);
        path_0.close();
        path_0.moveTo(11.700000f, 12.800000f);
        path_0.cubicTo(11.700000f, 12.700000f, 11.800000f, 12.600000f, 11.900000f, 12.600000f);
        path_0.cubicTo(11.999999f, 12.600000f, 12.099999f, 12.700001f, 12.099999f, 12.800000f);
        path_0.cubicTo(12.099999f, 12.900000f, 12.000000f, 13.000000f, 11.900001f, 13.000000f);
        path_0.cubicTo(11.800001f, 13.000000f, 11.700000f, 12.900001f, 11.700000f, 12.800000f);
        path_0.close();
        path_0.moveTo(11.900001f, 13.900001f);
        path_0.cubicTo(12.000001f, 13.900001f, 12.100000f, 14.000001f, 12.100000f, 14.100000f);
        path_0.cubicTo(12.100000f, 14.200000f, 12.000000f, 14.300000f, 11.900001f, 14.300000f);
        path_0.cubicTo(11.800001f, 14.300000f, 11.700001f, 14.200000f, 11.700001f, 14.100000f);
        path_0.cubicTo(11.700001f, 14.000001f, 11.800000f, 13.900001f, 11.900001f, 13.900001f);
        path_0.close();
        path_0.moveTo(11.900001f, 14.600000f);
        path_0.cubicTo(12.000001f, 14.600000f, 12.100000f, 14.700001f, 12.100000f, 14.800000f);
        path_0.cubicTo(12.100000f, 14.900001f, 12.000000f, 15.000000f, 11.900001f, 15.000000f);
        path_0.cubicTo(11.800001f, 15.000000f, 11.700001f, 14.900000f, 11.700001f, 14.800000f);
        path_0.cubicTo(11.700000f, 14.700000f, 11.800000f, 14.600000f, 11.900001f, 14.600000f);
        path_0.close();
        path_0.moveTo(11.900001f, 15.200000f);
        path_0.cubicTo(12.000001f, 15.200000f, 12.100000f, 15.300000f, 12.100000f, 15.400000f);
        path_0.cubicTo(12.100000f, 15.500000f, 12.000000f, 15.599999f, 11.900001f, 15.599999f);
        path_0.cubicTo(11.800001f, 15.599999f, 11.700001f, 15.499999f, 11.700001f, 15.400000f);
        path_0.cubicTo(11.700000f, 15.300000f, 11.800000f, 15.200000f, 11.900001f, 15.200000f);
        path_0.close();
        path_0.moveTo(11.900001f, 15.900001f);
        path_0.cubicTo(12.000001f, 15.900001f, 12.100000f, 16.000000f, 12.100000f, 16.100000f);
        path_0.cubicTo(12.100000f, 16.200001f, 12.000000f, 16.300001f, 11.900001f, 16.300001f);
        path_0.cubicTo(11.800001f, 16.300001f, 11.700001f, 16.200001f, 11.700001f, 16.100000f);
        path_0.cubicTo(11.700000f, 16.000000f, 11.800000f, 15.900001f, 11.900001f, 15.900001f);
        path_0.close();
        path_0.moveTo(11.900001f, 16.600000f);
        path_0.cubicTo(12.000001f, 16.600000f, 12.100000f, 16.700001f, 12.100000f, 16.800001f);
        path_0.cubicTo(12.100000f, 16.900002f, 12.000000f, 17.000002f, 11.900001f, 17.000002f);
        path_0.cubicTo(11.800001f, 17.000002f, 11.700001f, 16.900002f, 11.700001f, 16.800001f);
        path_0.cubicTo(11.700000f, 16.700001f, 11.800000f, 16.600000f, 11.900001f, 16.600000f);
        path_0.close();
        path_0.moveTo(11.900001f, 17.200001f);
        path_0.cubicTo(12.000001f, 17.200001f, 12.100000f, 17.300001f, 12.100000f, 17.400002f);
        path_0.cubicTo(12.100000f, 17.500002f, 12.000000f, 17.600002f, 11.900001f, 17.600002f);
        path_0.cubicTo(11.800001f, 17.600002f, 11.700001f, 17.500002f, 11.700001f, 17.400002f);
        path_0.cubicTo(11.700000f, 17.300001f, 11.800000f, 17.200001f, 11.900001f, 17.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 17.900000f);
        path_0.cubicTo(12.000001f, 17.900000f, 12.100000f, 18.000000f, 12.100000f, 18.100000f);
        path_0.cubicTo(12.100000f, 18.200001f, 12.000000f, 18.300001f, 11.900001f, 18.300001f);
        path_0.cubicTo(11.800001f, 18.300001f, 11.700001f, 18.200001f, 11.700001f, 18.100000f);
        path_0.cubicTo(11.700001f, 18.000000f, 11.800000f, 17.900000f, 11.900001f, 17.900000f);
        path_0.close();
        path_0.moveTo(11.900001f, 18.600000f);
        path_0.cubicTo(12.000001f, 18.600000f, 12.100000f, 18.700001f, 12.100000f, 18.800001f);
        path_0.cubicTo(12.100000f, 18.900002f, 12.000000f, 19.000000f, 11.900001f, 19.000000f);
        path_0.cubicTo(11.800001f, 19.000000f, 11.700001f, 18.900000f, 11.700001f, 18.799999f);
        path_0.cubicTo(11.700001f, 18.699999f, 11.800000f, 18.600000f, 11.900001f, 18.600000f);
        path_0.close();
        path_0.moveTo(11.900001f, 19.200001f);
        path_0.cubicTo(12.000001f, 19.200001f, 12.100000f, 19.300001f, 12.100000f, 19.400002f);
        path_0.cubicTo(12.100000f, 19.500002f, 12.000000f, 19.600002f, 11.900001f, 19.600002f);
        path_0.cubicTo(11.800001f, 19.600002f, 11.700001f, 19.500002f, 11.700001f, 19.400002f);
        path_0.cubicTo(11.700000f, 19.300001f, 11.800000f, 19.200001f, 11.900001f, 19.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 19.900000f);
        path_0.cubicTo(12.000001f, 19.900000f, 12.100000f, 20.000000f, 12.100000f, 20.100000f);
        path_0.cubicTo(12.100000f, 20.200001f, 12.000000f, 20.300001f, 11.900001f, 20.300001f);
        path_0.cubicTo(11.800001f, 20.300001f, 11.700001f, 20.200001f, 11.700001f, 20.100000f);
        path_0.cubicTo(11.700000f, 20.000000f, 11.800000f, 19.900000f, 11.900001f, 19.900000f);
        path_0.close();
        path_0.moveTo(11.900001f, 20.500000f);
        path_0.cubicTo(12.000001f, 20.500000f, 12.100000f, 20.600000f, 12.100000f, 20.700001f);
        path_0.cubicTo(12.100000f, 20.800001f, 12.000000f, 21.000000f, 11.900001f, 21.000000f);
        path_0.cubicTo(11.800001f, 21.000000f, 11.700001f, 20.900000f, 11.700001f, 20.799999f);
        path_0.cubicTo(11.700001f, 20.699999f, 11.800000f, 20.500000f, 11.900001f, 20.500000f);
        path_0.close();
        path_0.moveTo(11.900001f, 21.200001f);
        path_0.cubicTo(12.000001f, 21.200001f, 12.100000f, 21.300001f, 12.100000f, 21.400002f);
        path_0.cubicTo(12.100000f, 21.500002f, 12.000000f, 21.600002f, 11.900001f, 21.600002f);
        path_0.cubicTo(11.800001f, 21.600002f, 11.700001f, 21.500002f, 11.700001f, 21.400002f);
        path_0.cubicTo(11.700001f, 21.300001f, 11.800000f, 21.200001f, 11.900001f, 21.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 21.900000f);
        path_0.cubicTo(12.000001f, 21.900000f, 12.100000f, 22.000000f, 12.100000f, 22.100000f);
        path_0.cubicTo(12.100000f, 22.200001f, 12.000000f, 22.300001f, 11.900001f, 22.300001f);
        path_0.cubicTo(11.800001f, 22.300001f, 11.700001f, 22.200001f, 11.700001f, 22.100000f);
        path_0.cubicTo(11.700000f, 22.000000f, 11.800000f, 21.900000f, 11.900001f, 21.900000f);
        path_0.close();
        path_0.moveTo(11.900001f, 22.500000f);
        path_0.cubicTo(12.000001f, 22.500000f, 12.100000f, 22.600000f, 12.100000f, 22.700001f);
        path_0.cubicTo(12.100000f, 22.800001f, 12.000000f, 22.900002f, 11.900001f, 22.900002f);
        path_0.cubicTo(11.800001f, 22.900002f, 11.700001f, 22.800001f, 11.700001f, 22.700001f);
        path_0.cubicTo(11.700000f, 22.600000f, 11.800000f, 22.500000f, 11.900001f, 22.500000f);
        path_0.close();
        path_0.moveTo(11.900001f, 23.200001f);
        path_0.cubicTo(12.000001f, 23.200001f, 12.100000f, 23.300001f, 12.100000f, 23.400002f);
        path_0.cubicTo(12.100000f, 23.500002f, 12.000000f, 23.600002f, 11.900001f, 23.600002f);
        path_0.cubicTo(11.800001f, 23.600002f, 11.700001f, 23.500002f, 11.700001f, 23.400002f);
        path_0.cubicTo(11.700000f, 23.300001f, 11.800000f, 23.200001f, 11.900001f, 23.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 23.800001f);
        path_0.cubicTo(12.000001f, 23.800001f, 12.100000f, 23.900002f, 12.100000f, 24.000002f);
        path_0.cubicTo(12.100000f, 24.100002f, 12.000000f, 24.200003f, 11.900001f, 24.200003f);
        path_0.cubicTo(11.800001f, 24.200003f, 11.700001f, 24.100002f, 11.700001f, 24.000002f);
        path_0.cubicTo(11.700001f, 23.900002f, 11.800000f, 23.800001f, 11.900001f, 23.800001f);
        path_0.close();
        path_0.moveTo(11.900001f, 24.500000f);
        path_0.cubicTo(12.000001f, 24.500000f, 12.100000f, 24.600000f, 12.100000f, 24.700001f);
        path_0.cubicTo(12.100000f, 24.800001f, 12.000000f, 24.900002f, 11.900001f, 24.900002f);
        path_0.cubicTo(11.800001f, 24.900002f, 11.700001f, 24.800001f, 11.700001f, 24.700001f);
        path_0.cubicTo(11.700000f, 24.600000f, 11.800000f, 24.500000f, 11.900001f, 24.500000f);
        path_0.close();
        path_0.moveTo(11.900001f, 25.200001f);
        path_0.cubicTo(12.000001f, 25.200001f, 12.100000f, 25.300001f, 12.100000f, 25.400002f);
        path_0.cubicTo(12.100000f, 25.500002f, 12.000000f, 25.600002f, 11.900001f, 25.600002f);
        path_0.cubicTo(11.800001f, 25.600002f, 11.700001f, 25.500002f, 11.700001f, 25.400002f);
        path_0.cubicTo(11.700000f, 25.300001f, 11.800000f, 25.200001f, 11.900001f, 25.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 25.800001f);
        path_0.cubicTo(12.000001f, 25.800001f, 12.100000f, 25.900002f, 12.100000f, 26.000002f);
        path_0.cubicTo(12.100000f, 26.100002f, 12.000000f, 26.200003f, 11.900001f, 26.200003f);
        path_0.cubicTo(11.800001f, 26.200003f, 11.700001f, 26.100002f, 11.700001f, 26.000002f);
        path_0.cubicTo(11.700000f, 25.900000f, 11.800000f, 25.800001f, 11.900001f, 25.800001f);
        path_0.close();
        path_0.moveTo(11.900001f, 26.500000f);
        path_0.cubicTo(12.000001f, 26.500000f, 12.100000f, 26.600000f, 12.100000f, 26.700001f);
        path_0.cubicTo(12.100000f, 26.800001f, 12.000000f, 26.900002f, 11.900001f, 26.900002f);
        path_0.cubicTo(11.800001f, 26.900002f, 11.700001f, 26.800001f, 11.700001f, 26.700001f);
        path_0.cubicTo(11.700001f, 26.600000f, 11.800000f, 26.500000f, 11.900001f, 26.500000f);
        path_0.close();
        path_0.moveTo(11.900001f, 27.200001f);
        path_0.cubicTo(12.000001f, 27.200001f, 12.100000f, 27.300001f, 12.100000f, 27.400002f);
        path_0.cubicTo(12.100000f, 27.500002f, 12.000000f, 27.600002f, 11.900001f, 27.600002f);
        path_0.cubicTo(11.800001f, 27.600002f, 11.700001f, 27.500002f, 11.700001f, 27.400002f);
        path_0.cubicTo(11.700001f, 27.300001f, 11.800000f, 27.200001f, 11.900001f, 27.200001f);
        path_0.close();
        path_0.moveTo(11.900001f, 27.800001f);
        path_0.cubicTo(12.000001f, 27.800001f, 12.100000f, 27.900002f, 12.100000f, 28.000002f);
        path_0.cubicTo(12.100000f, 28.100002f, 12.000000f, 28.200003f, 11.900001f, 28.200003f);
        path_0.cubicTo(11.800001f, 28.200003f, 11.700001f, 28.100002f, 11.700001f, 28.000002f);
        path_0.cubicTo(11.700000f, 27.900000f, 11.800000f, 27.800001f, 11.900001f, 27.800001f);
        path_0.close();
        path_0.moveTo(11.900001f, 28.500000f);
        path_0.cubicTo(12.000001f, 28.500000f, 12.100000f, 28.600000f, 12.100000f, 28.700001f);
        path_0.cubicTo(12.100000f, 28.800001f, 12.000000f, 28.900002f, 11.900001f, 28.900002f);
        path_0.cubicTo(11.800001f, 28.900002f, 11.700001f, 28.800001f, 11.700001f, 28.700001f);
        path_0.cubicTo(11.700000f, 28.600000f, 11.800000f, 28.500000f, 11.900001f, 28.500000f);
        path_0.close();
        path_0.moveTo(12.600000f, 13.300000f);
        path_0.cubicTo(12.700001f, 13.300000f, 12.800000f, 13.400001f, 12.800000f, 13.500000f);
        path_0.cubicTo(12.800000f, 13.600000f, 12.700000f, 13.700000f, 12.600000f, 13.700000f);
        path_0.cubicTo(12.500000f, 13.700000f, 12.400001f, 13.599999f, 12.400001f, 13.500000f);
        path_0.cubicTo(12.400001f, 13.400001f, 12.400001f, 13.300000f, 12.600000f, 13.300000f);
        path_0.close();
        path_0.moveTo(12.400001f, 12.800000f);
        path_0.cubicTo(12.400001f, 12.700000f, 12.500001f, 12.600000f, 12.600000f, 12.600000f);
        path_0.cubicTo(12.700001f, 12.600000f, 12.800000f, 12.700001f, 12.800000f, 12.800000f);
        path_0.cubicTo(12.800000f, 12.900000f, 12.700000f, 13.000000f, 12.600000f, 13.000000f);
        path_0.cubicTo(12.400001f, 13.000000f, 12.400001f, 12.900001f, 12.400001f, 12.800000f);
        path_0.close();
        path_0.moveTo(12.600000f, 13.900001f);
        path_0.cubicTo(12.700001f, 13.900001f, 12.800000f, 14.000001f, 12.800000f, 14.100000f);
        path_0.cubicTo(12.800000f, 14.200000f, 12.700000f, 14.300000f, 12.600000f, 14.300000f);
        path_0.cubicTo(12.500000f, 14.300000f, 12.400001f, 14.200000f, 12.400001f, 14.100000f);
        path_0.cubicTo(12.400001f, 14.000001f, 12.400001f, 13.900001f, 12.600000f, 13.900001f);
        path_0.close();
        path_0.moveTo(12.600000f, 14.600000f);
        path_0.cubicTo(12.700001f, 14.600000f, 12.800000f, 14.700001f, 12.800000f, 14.800000f);
        path_0.cubicTo(12.800000f, 14.900001f, 12.700000f, 15.000000f, 12.600000f, 15.000000f);
        path_0.cubicTo(12.500000f, 15.000000f, 12.400001f, 14.900000f, 12.400001f, 14.800000f);
        path_0.cubicTo(12.400001f, 14.700000f, 12.400001f, 14.600000f, 12.600000f, 14.600000f);
        path_0.close();
        path_0.moveTo(12.600000f, 15.200000f);
        path_0.cubicTo(12.700001f, 15.200000f, 12.800000f, 15.300000f, 12.800000f, 15.400000f);
        path_0.cubicTo(12.800000f, 15.500000f, 12.700000f, 15.599999f, 12.600000f, 15.599999f);
        path_0.cubicTo(12.500000f, 15.599999f, 12.400001f, 15.499999f, 12.400001f, 15.400000f);
        path_0.cubicTo(12.400001f, 15.300000f, 12.400001f, 15.200000f, 12.600000f, 15.200000f);
        path_0.close();
        path_0.moveTo(12.600000f, 15.900001f);
        path_0.cubicTo(12.700001f, 15.900001f, 12.800000f, 16.000000f, 12.800000f, 16.100000f);
        path_0.cubicTo(12.800000f, 16.200001f, 12.700000f, 16.300001f, 12.600000f, 16.300001f);
        path_0.cubicTo(12.500000f, 16.300001f, 12.400001f, 16.200001f, 12.400001f, 16.100000f);
        path_0.cubicTo(12.400001f, 16.000000f, 12.400001f, 15.900001f, 12.600000f, 15.900001f);
        path_0.close();
        path_0.moveTo(12.600000f, 16.600000f);
        path_0.cubicTo(12.700001f, 16.600000f, 12.800000f, 16.700001f, 12.800000f, 16.800001f);
        path_0.cubicTo(12.800000f, 16.900002f, 12.700000f, 17.000002f, 12.600000f, 17.000002f);
        path_0.cubicTo(12.500000f, 17.000002f, 12.400001f, 16.900002f, 12.400001f, 16.800001f);
        path_0.cubicTo(12.400001f, 16.700001f, 12.400001f, 16.600000f, 12.600000f, 16.600000f);
        path_0.close();
        path_0.moveTo(12.600000f, 17.200001f);
        path_0.cubicTo(12.700001f, 17.200001f, 12.800000f, 17.300001f, 12.800000f, 17.400002f);
        path_0.cubicTo(12.800000f, 17.500002f, 12.700000f, 17.600002f, 12.600000f, 17.600002f);
        path_0.cubicTo(12.500000f, 17.600002f, 12.400001f, 17.500002f, 12.400001f, 17.400002f);
        path_0.cubicTo(12.400001f, 17.300001f, 12.400001f, 17.200001f, 12.600000f, 17.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 17.900000f);
        path_0.cubicTo(12.700001f, 17.900000f, 12.800000f, 18.000000f, 12.800000f, 18.100000f);
        path_0.cubicTo(12.800000f, 18.200001f, 12.700000f, 18.300001f, 12.600000f, 18.300001f);
        path_0.cubicTo(12.500000f, 18.300001f, 12.400001f, 18.200001f, 12.400001f, 18.100000f);
        path_0.cubicTo(12.400001f, 18.000000f, 12.400001f, 17.900000f, 12.600000f, 17.900000f);
        path_0.close();
        path_0.moveTo(12.600000f, 18.600000f);
        path_0.cubicTo(12.700001f, 18.600000f, 12.800000f, 18.700001f, 12.800000f, 18.800001f);
        path_0.cubicTo(12.800000f, 18.900002f, 12.700000f, 19.000000f, 12.600000f, 19.000000f);
        path_0.cubicTo(12.500000f, 19.000000f, 12.400001f, 18.900000f, 12.400001f, 18.799999f);
        path_0.cubicTo(12.400001f, 18.699999f, 12.400001f, 18.600000f, 12.600000f, 18.600000f);
        path_0.close();
        path_0.moveTo(12.600000f, 19.200001f);
        path_0.cubicTo(12.700001f, 19.200001f, 12.800000f, 19.300001f, 12.800000f, 19.400002f);
        path_0.cubicTo(12.800000f, 19.500002f, 12.700000f, 19.600002f, 12.600000f, 19.600002f);
        path_0.cubicTo(12.500000f, 19.600002f, 12.400001f, 19.500002f, 12.400001f, 19.400002f);
        path_0.cubicTo(12.400001f, 19.300001f, 12.400001f, 19.200001f, 12.600000f, 19.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 19.900000f);
        path_0.cubicTo(12.700001f, 19.900000f, 12.800000f, 20.000000f, 12.800000f, 20.100000f);
        path_0.cubicTo(12.800000f, 20.200001f, 12.700000f, 20.300001f, 12.600000f, 20.300001f);
        path_0.cubicTo(12.500000f, 20.300001f, 12.400001f, 20.200001f, 12.400001f, 20.100000f);
        path_0.cubicTo(12.400001f, 20.000000f, 12.400001f, 19.900000f, 12.600000f, 19.900000f);
        path_0.close();
        path_0.moveTo(12.600000f, 20.500000f);
        path_0.cubicTo(12.700001f, 20.500000f, 12.800000f, 20.600000f, 12.800000f, 20.700001f);
        path_0.cubicTo(12.800000f, 20.800001f, 12.700000f, 21.000000f, 12.600000f, 21.000000f);
        path_0.cubicTo(12.500000f, 21.000000f, 12.400001f, 20.900000f, 12.400001f, 20.799999f);
        path_0.cubicTo(12.400001f, 20.699999f, 12.400001f, 20.500000f, 12.600000f, 20.500000f);
        path_0.close();
        path_0.moveTo(12.600000f, 21.200001f);
        path_0.cubicTo(12.700001f, 21.200001f, 12.800000f, 21.300001f, 12.800000f, 21.400002f);
        path_0.cubicTo(12.800000f, 21.500002f, 12.700000f, 21.600002f, 12.600000f, 21.600002f);
        path_0.cubicTo(12.500000f, 21.600002f, 12.400001f, 21.500002f, 12.400001f, 21.400002f);
        path_0.cubicTo(12.400001f, 21.300001f, 12.400001f, 21.200001f, 12.600000f, 21.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 21.900000f);
        path_0.cubicTo(12.700001f, 21.900000f, 12.800000f, 22.000000f, 12.800000f, 22.100000f);
        path_0.cubicTo(12.800000f, 22.200001f, 12.700000f, 22.300001f, 12.600000f, 22.300001f);
        path_0.cubicTo(12.500000f, 22.300001f, 12.400001f, 22.200001f, 12.400001f, 22.100000f);
        path_0.cubicTo(12.400001f, 22.000000f, 12.400001f, 21.900000f, 12.600000f, 21.900000f);
        path_0.close();
        path_0.moveTo(12.600000f, 22.500000f);
        path_0.cubicTo(12.700001f, 22.500000f, 12.800000f, 22.600000f, 12.800000f, 22.700001f);
        path_0.cubicTo(12.800000f, 22.800001f, 12.700000f, 22.900002f, 12.600000f, 22.900002f);
        path_0.cubicTo(12.500000f, 22.900002f, 12.400001f, 22.800001f, 12.400001f, 22.700001f);
        path_0.cubicTo(12.400001f, 22.600000f, 12.400001f, 22.500000f, 12.600000f, 22.500000f);
        path_0.close();
        path_0.moveTo(12.600000f, 23.200001f);
        path_0.cubicTo(12.700001f, 23.200001f, 12.800000f, 23.300001f, 12.800000f, 23.400002f);
        path_0.cubicTo(12.800000f, 23.500002f, 12.700000f, 23.600002f, 12.600000f, 23.600002f);
        path_0.cubicTo(12.500000f, 23.600002f, 12.400001f, 23.500002f, 12.400001f, 23.400002f);
        path_0.cubicTo(12.400001f, 23.300001f, 12.400001f, 23.200001f, 12.600000f, 23.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 23.800001f);
        path_0.cubicTo(12.700001f, 23.800001f, 12.800000f, 23.900002f, 12.800000f, 24.000002f);
        path_0.cubicTo(12.800000f, 24.100002f, 12.700000f, 24.200003f, 12.600000f, 24.200003f);
        path_0.cubicTo(12.500000f, 24.200003f, 12.400001f, 24.100002f, 12.400001f, 24.000002f);
        path_0.cubicTo(12.400001f, 23.900002f, 12.400001f, 23.800001f, 12.600000f, 23.800001f);
        path_0.close();
        path_0.moveTo(12.600000f, 24.500000f);
        path_0.cubicTo(12.700001f, 24.500000f, 12.800000f, 24.600000f, 12.800000f, 24.700001f);
        path_0.cubicTo(12.800000f, 24.800001f, 12.700000f, 24.900002f, 12.600000f, 24.900002f);
        path_0.cubicTo(12.500000f, 24.900002f, 12.400001f, 24.800001f, 12.400001f, 24.700001f);
        path_0.cubicTo(12.400001f, 24.600000f, 12.400001f, 24.500000f, 12.600000f, 24.500000f);
        path_0.close();
        path_0.moveTo(12.600000f, 25.200001f);
        path_0.cubicTo(12.700001f, 25.200001f, 12.800000f, 25.300001f, 12.800000f, 25.400002f);
        path_0.cubicTo(12.800000f, 25.500002f, 12.700000f, 25.600002f, 12.600000f, 25.600002f);
        path_0.cubicTo(12.500000f, 25.600002f, 12.400001f, 25.500002f, 12.400001f, 25.400002f);
        path_0.cubicTo(12.400001f, 25.300001f, 12.400001f, 25.200001f, 12.600000f, 25.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 25.800001f);
        path_0.cubicTo(12.700001f, 25.800001f, 12.800000f, 25.900002f, 12.800000f, 26.000002f);
        path_0.cubicTo(12.800000f, 26.100002f, 12.700000f, 26.200003f, 12.600000f, 26.200003f);
        path_0.cubicTo(12.500000f, 26.200003f, 12.400001f, 26.100002f, 12.400001f, 26.000002f);
        path_0.cubicTo(12.400001f, 25.900000f, 12.400001f, 25.800001f, 12.600000f, 25.800001f);
        path_0.close();
        path_0.moveTo(12.600000f, 26.500000f);
        path_0.cubicTo(12.700001f, 26.500000f, 12.800000f, 26.600000f, 12.800000f, 26.700001f);
        path_0.cubicTo(12.800000f, 26.800001f, 12.700000f, 26.900002f, 12.600000f, 26.900002f);
        path_0.cubicTo(12.500000f, 26.900002f, 12.400001f, 26.800001f, 12.400001f, 26.700001f);
        path_0.cubicTo(12.400001f, 26.600000f, 12.400001f, 26.500000f, 12.600000f, 26.500000f);
        path_0.close();
        path_0.moveTo(12.600000f, 27.200001f);
        path_0.cubicTo(12.700001f, 27.200001f, 12.800000f, 27.300001f, 12.800000f, 27.400002f);
        path_0.cubicTo(12.800000f, 27.500002f, 12.700000f, 27.600002f, 12.600000f, 27.600002f);
        path_0.cubicTo(12.500000f, 27.600002f, 12.400001f, 27.500002f, 12.400001f, 27.400002f);
        path_0.cubicTo(12.400001f, 27.300001f, 12.400001f, 27.200001f, 12.600000f, 27.200001f);
        path_0.close();
        path_0.moveTo(12.600000f, 27.800001f);
        path_0.cubicTo(12.700001f, 27.800001f, 12.800000f, 27.900002f, 12.800000f, 28.000002f);
        path_0.cubicTo(12.800000f, 28.100002f, 12.700000f, 28.200003f, 12.600000f, 28.200003f);
        path_0.cubicTo(12.500000f, 28.200003f, 12.400001f, 28.100002f, 12.400001f, 28.000002f);
        path_0.cubicTo(12.400001f, 27.900000f, 12.400001f, 27.800001f, 12.600000f, 27.800001f);
        path_0.close();
        path_0.moveTo(12.600000f, 28.500000f);
        path_0.cubicTo(12.700001f, 28.500000f, 12.800000f, 28.600000f, 12.800000f, 28.700001f);
        path_0.cubicTo(12.800000f, 28.800001f, 12.700000f, 28.900002f, 12.600000f, 28.900002f);
        path_0.cubicTo(12.500000f, 28.900002f, 12.400001f, 28.800001f, 12.400001f, 28.700001f);
        path_0.cubicTo(12.400001f, 28.600000f, 12.400001f, 28.500000f, 12.600000f, 28.500000f);
        path_0.close();
        path_0.moveTo(13.200000f, 28.900000f);
        path_0.cubicTo(13.099999f, 28.900000f, 13.000000f, 28.799999f, 13.000000f, 28.699999f);
        path_0.cubicTo(13.000000f, 28.599998f, 13.100000f, 28.499998f, 13.200000f, 28.499998f);
        path_0.cubicTo(13.299999f, 28.499998f, 13.400000f, 28.599998f, 13.400000f, 28.699999f);
        path_0.cubicTo(13.400000f, 28.799999f, 13.400001f, 28.900000f, 13.200000f, 28.900000f);
        path_0.close();
        path_0.moveTo(13.200000f, 28.200001f);
        path_0.cubicTo(13.099999f, 28.200001f, 13.000000f, 28.100000f, 13.000000f, 28.000000f);
        path_0.cubicTo(13.000000f, 27.900000f, 13.100000f, 27.799999f, 13.200000f, 27.799999f);
        path_0.cubicTo(13.299999f, 27.799999f, 13.400000f, 27.900000f, 13.400000f, 28.000000f);
        path_0.cubicTo(13.500000f, 28.100000f, 13.400001f, 28.200001f, 13.200000f, 28.200001f);
        path_0.close();
        path_0.moveTo(13.200000f, 27.600000f);
        path_0.cubicTo(13.099999f, 27.600000f, 13.000000f, 27.500000f, 13.000000f, 27.400000f);
        path_0.cubicTo(13.000000f, 27.299999f, 13.100000f, 27.199999f, 13.200000f, 27.199999f);
        path_0.cubicTo(13.299999f, 27.199999f, 13.400000f, 27.299999f, 13.400000f, 27.400000f);
        path_0.cubicTo(13.400000f, 27.500000f, 13.400001f, 27.600000f, 13.200000f, 27.600000f);
        path_0.close();
        path_0.moveTo(13.200000f, 26.900000f);
        path_0.cubicTo(13.099999f, 26.900000f, 13.000000f, 26.799999f, 13.000000f, 26.699999f);
        path_0.cubicTo(13.000000f, 26.599998f, 13.100000f, 26.499998f, 13.200000f, 26.499998f);
        path_0.cubicTo(13.299999f, 26.499998f, 13.400000f, 26.599998f, 13.400000f, 26.699999f);
        path_0.cubicTo(13.400000f, 26.799999f, 13.400001f, 26.900000f, 13.200000f, 26.900000f);
        path_0.close();
        path_0.moveTo(13.200000f, 26.300001f);
        path_0.cubicTo(13.099999f, 26.300001f, 13.000000f, 26.200001f, 13.000000f, 26.100000f);
        path_0.cubicTo(13.000000f, 26.000000f, 13.100000f, 25.900000f, 13.200000f, 25.900000f);
        path_0.cubicTo(13.299999f, 25.900000f, 13.400000f, 26.000000f, 13.400000f, 26.100000f);
        path_0.cubicTo(13.500000f, 26.200001f, 13.400001f, 26.300001f, 13.200000f, 26.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 25.600000f);
        path_0.cubicTo(13.099999f, 25.600000f, 13.000000f, 25.500000f, 13.000000f, 25.400000f);
        path_0.cubicTo(13.000000f, 25.299999f, 13.100000f, 25.199999f, 13.200000f, 25.199999f);
        path_0.cubicTo(13.299999f, 25.199999f, 13.400000f, 25.299999f, 13.400000f, 25.400000f);
        path_0.cubicTo(13.400000f, 25.500000f, 13.400001f, 25.600000f, 13.200000f, 25.600000f);
        path_0.close();
        path_0.moveTo(13.200000f, 24.900000f);
        path_0.cubicTo(13.099999f, 24.900000f, 13.000000f, 24.799999f, 13.000000f, 24.699999f);
        path_0.cubicTo(13.000000f, 24.599998f, 13.100000f, 24.499998f, 13.200000f, 24.499998f);
        path_0.cubicTo(13.299999f, 24.499998f, 13.400000f, 24.599998f, 13.400000f, 24.699999f);
        path_0.cubicTo(13.500000f, 24.800001f, 13.400001f, 24.900000f, 13.200000f, 24.900000f);
        path_0.close();
        path_0.moveTo(13.200000f, 24.300001f);
        path_0.cubicTo(13.099999f, 24.300001f, 13.000000f, 24.200001f, 13.000000f, 24.100000f);
        path_0.cubicTo(13.000000f, 24.000000f, 13.100000f, 23.900000f, 13.200000f, 23.900000f);
        path_0.cubicTo(13.299999f, 23.900000f, 13.400000f, 24.000000f, 13.400000f, 24.100000f);
        path_0.cubicTo(13.400000f, 24.200001f, 13.400001f, 24.300001f, 13.200000f, 24.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 23.600000f);
        path_0.cubicTo(13.099999f, 23.600000f, 13.000000f, 23.500000f, 13.000000f, 23.400000f);
        path_0.cubicTo(13.000000f, 23.299999f, 13.100000f, 23.199999f, 13.200000f, 23.199999f);
        path_0.cubicTo(13.299999f, 23.199999f, 13.400000f, 23.299999f, 13.400000f, 23.400000f);
        path_0.cubicTo(13.400000f, 23.500000f, 13.400001f, 23.600000f, 13.200000f, 23.600000f);
        path_0.close();
        path_0.moveTo(13.200000f, 22.900000f);
        path_0.cubicTo(13.099999f, 22.900000f, 13.000000f, 22.799999f, 13.000000f, 22.699999f);
        path_0.cubicTo(13.000000f, 22.599998f, 13.100000f, 22.499998f, 13.200000f, 22.499998f);
        path_0.cubicTo(13.299999f, 22.499998f, 13.400000f, 22.599998f, 13.400000f, 22.699999f);
        path_0.cubicTo(13.500000f, 22.900000f, 13.400001f, 22.900000f, 13.200000f, 22.900000f);
        path_0.close();
        path_0.moveTo(13.200000f, 22.300001f);
        path_0.cubicTo(13.099999f, 22.300001f, 13.000000f, 22.200001f, 13.000000f, 22.100000f);
        path_0.cubicTo(13.000000f, 22.000000f, 13.100000f, 21.900000f, 13.200000f, 21.900000f);
        path_0.cubicTo(13.299999f, 21.900000f, 13.400000f, 22.000000f, 13.400000f, 22.100000f);
        path_0.cubicTo(13.400000f, 22.200001f, 13.400001f, 22.300001f, 13.200000f, 22.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 21.600000f);
        path_0.cubicTo(13.099999f, 21.600000f, 13.000000f, 21.500000f, 13.000000f, 21.400000f);
        path_0.cubicTo(13.000000f, 21.299999f, 13.100000f, 21.199999f, 13.200000f, 21.199999f);
        path_0.cubicTo(13.299999f, 21.199999f, 13.400000f, 21.299999f, 13.400000f, 21.400000f);
        path_0.cubicTo(13.400000f, 21.500000f, 13.400001f, 21.600000f, 13.200000f, 21.600000f);
        path_0.close();
        path_0.moveTo(13.200000f, 21.000000f);
        path_0.cubicTo(13.099999f, 21.000000f, 13.000000f, 20.900000f, 13.000000f, 20.799999f);
        path_0.cubicTo(13.000000f, 20.699999f, 13.100000f, 20.599998f, 13.200000f, 20.599998f);
        path_0.cubicTo(13.299999f, 20.599998f, 13.400000f, 20.699999f, 13.400000f, 20.799999f);
        path_0.cubicTo(13.400000f, 20.900000f, 13.400001f, 21.000000f, 13.200000f, 21.000000f);
        path_0.close();
        path_0.moveTo(13.200000f, 20.300001f);
        path_0.cubicTo(13.099999f, 20.300001f, 13.000000f, 20.200001f, 13.000000f, 20.100000f);
        path_0.cubicTo(13.000000f, 20.000000f, 13.100000f, 19.900000f, 13.200000f, 19.900000f);
        path_0.cubicTo(13.299999f, 19.900000f, 13.400000f, 20.000000f, 13.400000f, 20.100000f);
        path_0.cubicTo(13.400000f, 20.200001f, 13.400001f, 20.300001f, 13.200000f, 20.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 19.600000f);
        path_0.cubicTo(13.099999f, 19.600000f, 13.000000f, 19.500000f, 13.000000f, 19.400000f);
        path_0.cubicTo(13.000000f, 19.299999f, 13.100000f, 19.199999f, 13.200000f, 19.199999f);
        path_0.cubicTo(13.299999f, 19.199999f, 13.400000f, 19.299999f, 13.400000f, 19.400000f);
        path_0.cubicTo(13.500000f, 19.500000f, 13.400001f, 19.600000f, 13.200000f, 19.600000f);
        path_0.close();
        path_0.moveTo(13.200000f, 19.000000f);
        path_0.cubicTo(13.099999f, 19.000000f, 13.000000f, 18.900000f, 13.000000f, 18.799999f);
        path_0.cubicTo(13.000000f, 18.699999f, 13.100000f, 18.599998f, 13.200000f, 18.599998f);
        path_0.cubicTo(13.299999f, 18.599998f, 13.400000f, 18.699999f, 13.400000f, 18.799999f);
        path_0.cubicTo(13.400000f, 18.900000f, 13.400001f, 19.000000f, 13.200000f, 19.000000f);
        path_0.close();
        path_0.moveTo(13.200000f, 18.300001f);
        path_0.cubicTo(13.099999f, 18.300001f, 13.000000f, 18.200001f, 13.000000f, 18.100000f);
        path_0.cubicTo(13.000000f, 18.000000f, 13.100000f, 17.900000f, 13.200000f, 17.900000f);
        path_0.cubicTo(13.299999f, 17.900000f, 13.400000f, 18.000000f, 13.400000f, 18.100000f);
        path_0.cubicTo(13.400000f, 18.200001f, 13.400001f, 18.300001f, 13.200000f, 18.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 17.700001f);
        path_0.cubicTo(13.099999f, 17.700001f, 13.000000f, 17.600000f, 13.000000f, 17.500000f);
        path_0.cubicTo(13.000000f, 17.400000f, 13.100000f, 17.299999f, 13.200000f, 17.299999f);
        path_0.cubicTo(13.299999f, 17.299999f, 13.400000f, 17.400000f, 13.400000f, 17.500000f);
        path_0.cubicTo(13.500000f, 17.600000f, 13.400001f, 17.700001f, 13.200000f, 17.700001f);
        path_0.close();
        path_0.moveTo(13.200000f, 17.000000f);
        path_0.cubicTo(13.099999f, 17.000000f, 13.000000f, 16.900000f, 13.000000f, 16.799999f);
        path_0.cubicTo(13.000000f, 16.699999f, 13.100000f, 16.599998f, 13.200000f, 16.599998f);
        path_0.cubicTo(13.299999f, 16.599998f, 13.400000f, 16.699999f, 13.400000f, 16.799999f);
        path_0.cubicTo(13.400000f, 16.900000f, 13.400001f, 17.000000f, 13.200000f, 17.000000f);
        path_0.close();
        path_0.moveTo(13.200000f, 16.300001f);
        path_0.cubicTo(13.099999f, 16.300001f, 13.000000f, 16.200001f, 13.000000f, 16.100000f);
        path_0.cubicTo(13.000000f, 16.000000f, 13.100000f, 15.900001f, 13.200000f, 15.900001f);
        path_0.cubicTo(13.299999f, 15.900001f, 13.400000f, 16.000000f, 13.400000f, 16.100000f);
        path_0.cubicTo(13.500000f, 16.200001f, 13.400001f, 16.300001f, 13.200000f, 16.300001f);
        path_0.close();
        path_0.moveTo(13.200000f, 15.700000f);
        path_0.cubicTo(13.099999f, 15.700000f, 13.000000f, 15.599999f, 13.000000f, 15.500000f);
        path_0.cubicTo(13.000000f, 15.400000f, 13.100000f, 15.300000f, 13.200000f, 15.300000f);
        path_0.cubicTo(13.299999f, 15.300000f, 13.400000f, 15.400001f, 13.400000f, 15.500000f);
        path_0.cubicTo(13.400000f, 15.599999f, 13.400001f, 15.700000f, 13.200000f, 15.700000f);
        path_0.close();
        path_0.moveTo(13.200000f, 15.000000f);
        path_0.cubicTo(13.099999f, 15.000000f, 13.000000f, 14.900000f, 13.000000f, 14.800000f);
        path_0.cubicTo(13.000000f, 14.700000f, 13.100000f, 14.600000f, 13.200000f, 14.600000f);
        path_0.cubicTo(13.299999f, 14.600000f, 13.400000f, 14.700001f, 13.400000f, 14.800000f);
        path_0.cubicTo(13.400000f, 14.900000f, 13.400001f, 15.000000f, 13.200000f, 15.000000f);
        path_0.close();
        path_0.moveTo(13.200000f, 14.300000f);
        path_0.cubicTo(13.099999f, 14.300000f, 13.000000f, 14.200000f, 13.000000f, 14.100000f);
        path_0.cubicTo(13.000000f, 14.000001f, 13.100000f, 13.900001f, 13.200000f, 13.900001f);
        path_0.cubicTo(13.299999f, 13.900001f, 13.400000f, 14.000001f, 13.400000f, 14.100000f);
        path_0.cubicTo(13.400000f, 14.200000f, 13.400001f, 14.300000f, 13.200000f, 14.300000f);
        path_0.close();
        path_0.moveTo(13.200000f, 13.700000f);
        path_0.cubicTo(13.099999f, 13.700000f, 13.000000f, 13.599999f, 13.000000f, 13.500000f);
        path_0.cubicTo(13.000000f, 13.400000f, 13.100000f, 13.300000f, 13.200000f, 13.300000f);
        path_0.cubicTo(13.299999f, 13.300000f, 13.400000f, 13.400001f, 13.400000f, 13.500000f);
        path_0.cubicTo(13.400000f, 13.599999f, 13.400001f, 13.700000f, 13.200000f, 13.700000f);
        path_0.close();
        path_0.moveTo(13.200000f, 13.000000f);
        path_0.cubicTo(13.099999f, 13.000000f, 13.000000f, 12.900000f, 13.000000f, 12.800000f);
        path_0.cubicTo(13.000000f, 12.700001f, 13.100000f, 12.600000f, 13.200000f, 12.600000f);
        path_0.cubicTo(13.299999f, 12.600000f, 13.400000f, 12.700001f, 13.400000f, 12.800000f);
        path_0.cubicTo(13.400000f, 12.900000f, 13.400001f, 13.000000f, 13.200000f, 13.000000f);
        path_0.close();
        path_0.moveTo(13.300000f, 10.500000f);
        path_0.cubicTo(13.300000f, 10.700000f, 13.200000f, 10.800000f, 13.000000f, 10.800000f);
        path_0.cubicTo(12.400000f, 10.800000f, 11.800000f, 10.800000f, 11.200000f, 10.800000f);
        path_0.cubicTo(11.200000f, 10.800000f, 11.200000f, 10.800000f, 11.200000f, 10.800000f);
        path_0.cubicTo(10.599999f, 10.800000f, 10.000000f, 10.800000f, 9.400000f, 10.800000f);
        path_0.cubicTo(9.200000f, 10.800000f, 9.099999f, 10.700000f, 9.099999f, 10.500000f);
        path_0.cubicTo(9.200000f, 9.400000f, 8.799999f, 8.400000f, 8.499999f, 7.400000f);
        path_0.cubicTo(8.200000f, 6.700000f, 7.900000f, 6.000000f, 7.700000f, 5.200000f);
        path_0.cubicTo(7.300000f, 3.100000f, 8.800000f, 1.400000f, 10.600000f, 1.100000f);
        path_0.cubicTo(12.200001f, 0.900000f, 13.700001f, 1.700000f, 14.300000f, 3.100000f);
        path_0.cubicTo(14.700000f, 4.000000f, 14.800000f, 4.900001f, 14.500000f, 5.900001f);
        path_0.cubicTo(14.200000f, 6.900001f, 13.800000f, 7.800001f, 13.500000f, 8.800001f);
        path_0.cubicTo(13.300000f, 9.300000f, 13.400001f, 9.900001f, 13.300000f, 10.500000f);
        path_0.close();
        path_0.moveTo(13.900001f, 28.900000f);
        path_0.cubicTo(13.800000f, 28.900000f, 13.700001f, 28.799999f, 13.700001f, 28.699999f);
        path_0.cubicTo(13.700001f, 28.599998f, 13.800001f, 28.499998f, 13.900001f, 28.499998f);
        path_0.cubicTo(14.000001f, 28.499998f, 14.100000f, 28.599998f, 14.100000f, 28.699999f);
        path_0.cubicTo(14.100000f, 28.799999f, 14.000000f, 28.900000f, 13.900001f, 28.900000f);
        path_0.close();
        path_0.moveTo(13.900001f, 28.200001f);
        path_0.cubicTo(13.800000f, 28.200001f, 13.700001f, 28.100000f, 13.700001f, 28.000000f);
        path_0.cubicTo(13.700001f, 27.900000f, 13.800001f, 27.799999f, 13.900001f, 27.799999f);
        path_0.cubicTo(14.000001f, 27.799999f, 14.100000f, 27.900000f, 14.100000f, 28.000000f);
        path_0.cubicTo(14.100000f, 28.100000f, 14.000000f, 28.200001f, 13.900001f, 28.200001f);
        path_0.close();
        path_0.moveTo(13.900001f, 27.600000f);
        path_0.cubicTo(13.800000f, 27.600000f, 13.700001f, 27.500000f, 13.700001f, 27.400000f);
        path_0.cubicTo(13.700001f, 27.299999f, 13.800001f, 27.199999f, 13.900001f, 27.199999f);
        path_0.cubicTo(14.000001f, 27.199999f, 14.100000f, 27.299999f, 14.100000f, 27.400000f);
        path_0.cubicTo(14.100000f, 27.500000f, 14.000000f, 27.600000f, 13.900001f, 27.600000f);
        path_0.close();
        path_0.moveTo(13.900001f, 26.900000f);
        path_0.cubicTo(13.800000f, 26.900000f, 13.700001f, 26.799999f, 13.700001f, 26.699999f);
        path_0.cubicTo(13.700001f, 26.599998f, 13.800001f, 26.499998f, 13.900001f, 26.499998f);
        path_0.cubicTo(14.000001f, 26.499998f, 14.100000f, 26.599998f, 14.100000f, 26.699999f);
        path_0.cubicTo(14.100000f, 26.799999f, 14.000000f, 26.900000f, 13.900001f, 26.900000f);
        path_0.close();
        path_0.moveTo(13.900001f, 26.300001f);
        path_0.cubicTo(13.800000f, 26.300001f, 13.700001f, 26.200001f, 13.700001f, 26.100000f);
        path_0.cubicTo(13.700001f, 26.000000f, 13.800001f, 25.900000f, 13.900001f, 25.900000f);
        path_0.cubicTo(14.000001f, 25.900000f, 14.100000f, 26.000000f, 14.100000f, 26.100000f);
        path_0.cubicTo(14.100000f, 26.200001f, 14.000000f, 26.300001f, 13.900001f, 26.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 25.600000f);
        path_0.cubicTo(13.800000f, 25.600000f, 13.700001f, 25.500000f, 13.700001f, 25.400000f);
        path_0.cubicTo(13.700001f, 25.299999f, 13.800001f, 25.199999f, 13.900001f, 25.199999f);
        path_0.cubicTo(14.000001f, 25.199999f, 14.100000f, 25.299999f, 14.100000f, 25.400000f);
        path_0.cubicTo(14.100000f, 25.500000f, 14.000000f, 25.600000f, 13.900001f, 25.600000f);
        path_0.close();
        path_0.moveTo(13.900001f, 24.900000f);
        path_0.cubicTo(13.800000f, 24.900000f, 13.700001f, 24.799999f, 13.700001f, 24.699999f);
        path_0.cubicTo(13.700001f, 24.599998f, 13.800001f, 24.499998f, 13.900001f, 24.499998f);
        path_0.cubicTo(14.000001f, 24.499998f, 14.100000f, 24.599998f, 14.100000f, 24.699999f);
        path_0.cubicTo(14.100000f, 24.800001f, 14.000000f, 24.900000f, 13.900001f, 24.900000f);
        path_0.close();
        path_0.moveTo(13.900001f, 24.300001f);
        path_0.cubicTo(13.800000f, 24.300001f, 13.700001f, 24.200001f, 13.700001f, 24.100000f);
        path_0.cubicTo(13.700001f, 24.000000f, 13.800001f, 23.900000f, 13.900001f, 23.900000f);
        path_0.cubicTo(14.000001f, 23.900000f, 14.100000f, 24.000000f, 14.100000f, 24.100000f);
        path_0.cubicTo(14.100000f, 24.200001f, 14.000000f, 24.300001f, 13.900001f, 24.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 23.600000f);
        path_0.cubicTo(13.800000f, 23.600000f, 13.700001f, 23.500000f, 13.700001f, 23.400000f);
        path_0.cubicTo(13.700001f, 23.299999f, 13.800001f, 23.199999f, 13.900001f, 23.199999f);
        path_0.cubicTo(14.000001f, 23.199999f, 14.100000f, 23.299999f, 14.100000f, 23.400000f);
        path_0.cubicTo(14.100000f, 23.500000f, 14.000000f, 23.600000f, 13.900001f, 23.600000f);
        path_0.close();
        path_0.moveTo(13.900001f, 22.900000f);
        path_0.cubicTo(13.800000f, 22.900000f, 13.700001f, 22.799999f, 13.700001f, 22.699999f);
        path_0.cubicTo(13.700001f, 22.599998f, 13.800001f, 22.499998f, 13.900001f, 22.499998f);
        path_0.cubicTo(14.000001f, 22.499998f, 14.100000f, 22.599998f, 14.100000f, 22.699999f);
        path_0.cubicTo(14.100000f, 22.900000f, 14.000000f, 22.900000f, 13.900001f, 22.900000f);
        path_0.close();
        path_0.moveTo(13.900001f, 22.300001f);
        path_0.cubicTo(13.800000f, 22.300001f, 13.700001f, 22.200001f, 13.700001f, 22.100000f);
        path_0.cubicTo(13.700001f, 22.000000f, 13.800001f, 21.900000f, 13.900001f, 21.900000f);
        path_0.cubicTo(14.000001f, 21.900000f, 14.100000f, 22.000000f, 14.100000f, 22.100000f);
        path_0.cubicTo(14.100000f, 22.200001f, 14.000000f, 22.300001f, 13.900001f, 22.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 21.600000f);
        path_0.cubicTo(13.800000f, 21.600000f, 13.700001f, 21.500000f, 13.700001f, 21.400000f);
        path_0.cubicTo(13.700001f, 21.299999f, 13.800001f, 21.199999f, 13.900001f, 21.199999f);
        path_0.cubicTo(14.000001f, 21.199999f, 14.100000f, 21.299999f, 14.100000f, 21.400000f);
        path_0.cubicTo(14.100000f, 21.500000f, 14.000000f, 21.600000f, 13.900001f, 21.600000f);
        path_0.close();
        path_0.moveTo(13.900001f, 21.000000f);
        path_0.cubicTo(13.800000f, 21.000000f, 13.700001f, 20.900000f, 13.700001f, 20.799999f);
        path_0.cubicTo(13.700001f, 20.699999f, 13.800001f, 20.599998f, 13.900001f, 20.599998f);
        path_0.cubicTo(14.000001f, 20.599998f, 14.100000f, 20.699999f, 14.100000f, 20.799999f);
        path_0.cubicTo(14.100000f, 20.900000f, 14.000000f, 21.000000f, 13.900001f, 21.000000f);
        path_0.close();
        path_0.moveTo(13.900001f, 20.300001f);
        path_0.cubicTo(13.800000f, 20.300001f, 13.700001f, 20.200001f, 13.700001f, 20.100000f);
        path_0.cubicTo(13.700001f, 20.000000f, 13.800001f, 19.900000f, 13.900001f, 19.900000f);
        path_0.cubicTo(14.000001f, 19.900000f, 14.100000f, 20.000000f, 14.100000f, 20.100000f);
        path_0.cubicTo(14.100000f, 20.200001f, 14.000000f, 20.300001f, 13.900001f, 20.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 19.600000f);
        path_0.cubicTo(13.800000f, 19.600000f, 13.700001f, 19.500000f, 13.700001f, 19.400000f);
        path_0.cubicTo(13.700001f, 19.299999f, 13.800001f, 19.199999f, 13.900001f, 19.199999f);
        path_0.cubicTo(14.000001f, 19.199999f, 14.100000f, 19.299999f, 14.100000f, 19.400000f);
        path_0.cubicTo(14.100000f, 19.500000f, 14.000000f, 19.600000f, 13.900001f, 19.600000f);
        path_0.close();
        path_0.moveTo(13.900001f, 19.000000f);
        path_0.cubicTo(13.800000f, 19.000000f, 13.700001f, 18.900000f, 13.700001f, 18.799999f);
        path_0.cubicTo(13.700001f, 18.699999f, 13.800001f, 18.599998f, 13.900001f, 18.599998f);
        path_0.cubicTo(14.000001f, 18.599998f, 14.100000f, 18.699999f, 14.100000f, 18.799999f);
        path_0.cubicTo(14.100000f, 18.900000f, 14.000000f, 19.000000f, 13.900001f, 19.000000f);
        path_0.close();
        path_0.moveTo(13.900001f, 18.300001f);
        path_0.cubicTo(13.800000f, 18.300001f, 13.700001f, 18.200001f, 13.700001f, 18.100000f);
        path_0.cubicTo(13.700001f, 18.000000f, 13.800001f, 17.900000f, 13.900001f, 17.900000f);
        path_0.cubicTo(14.000001f, 17.900000f, 14.100000f, 18.000000f, 14.100000f, 18.100000f);
        path_0.cubicTo(14.100000f, 18.200001f, 14.000000f, 18.300001f, 13.900001f, 18.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 17.700001f);
        path_0.cubicTo(13.800000f, 17.700001f, 13.700001f, 17.600000f, 13.700001f, 17.500000f);
        path_0.cubicTo(13.700001f, 17.400000f, 13.800001f, 17.299999f, 13.900001f, 17.299999f);
        path_0.cubicTo(14.000001f, 17.299999f, 14.100000f, 17.400000f, 14.100000f, 17.500000f);
        path_0.cubicTo(14.100000f, 17.600000f, 14.000000f, 17.700001f, 13.900001f, 17.700001f);
        path_0.close();
        path_0.moveTo(13.900001f, 17.000000f);
        path_0.cubicTo(13.800000f, 17.000000f, 13.700001f, 16.900000f, 13.700001f, 16.799999f);
        path_0.cubicTo(13.700001f, 16.699999f, 13.800001f, 16.599998f, 13.900001f, 16.599998f);
        path_0.cubicTo(14.000001f, 16.599998f, 14.100000f, 16.699999f, 14.100000f, 16.799999f);
        path_0.cubicTo(14.100000f, 16.900000f, 14.000000f, 17.000000f, 13.900001f, 17.000000f);
        path_0.close();
        path_0.moveTo(13.900001f, 16.300001f);
        path_0.cubicTo(13.800000f, 16.300001f, 13.700001f, 16.200001f, 13.700001f, 16.100000f);
        path_0.cubicTo(13.700001f, 16.000000f, 13.800001f, 15.900001f, 13.900001f, 15.900001f);
        path_0.cubicTo(14.000001f, 15.900001f, 14.100000f, 16.000000f, 14.100000f, 16.100000f);
        path_0.cubicTo(14.100000f, 16.200001f, 14.000000f, 16.300001f, 13.900001f, 16.300001f);
        path_0.close();
        path_0.moveTo(13.900001f, 15.700000f);
        path_0.cubicTo(13.800000f, 15.700000f, 13.700001f, 15.599999f, 13.700001f, 15.500000f);
        path_0.cubicTo(13.700001f, 15.400000f, 13.800001f, 15.300000f, 13.900001f, 15.300000f);
        path_0.cubicTo(14.000001f, 15.300000f, 14.100000f, 15.400001f, 14.100000f, 15.500000f);
        path_0.cubicTo(14.100000f, 15.599999f, 14.000000f, 15.700000f, 13.900001f, 15.700000f);
        path_0.close();
        path_0.moveTo(13.900001f, 15.000000f);
        path_0.cubicTo(13.800000f, 15.000000f, 13.700001f, 14.900000f, 13.700001f, 14.800000f);
        path_0.cubicTo(13.700001f, 14.700000f, 13.800001f, 14.600000f, 13.900001f, 14.600000f);
        path_0.cubicTo(14.000001f, 14.600000f, 14.100000f, 14.700001f, 14.100000f, 14.800000f);
        path_0.cubicTo(14.100000f, 14.900000f, 14.000000f, 15.000000f, 13.900001f, 15.000000f);
        path_0.close();
        path_0.moveTo(13.900001f, 14.300000f);
        path_0.cubicTo(13.800000f, 14.300000f, 13.700001f, 14.200000f, 13.700001f, 14.100000f);
        path_0.cubicTo(13.700001f, 14.000001f, 13.800001f, 13.900001f, 13.900001f, 13.900001f);
        path_0.cubicTo(14.000001f, 13.900001f, 14.100000f, 14.000001f, 14.100000f, 14.100000f);
        path_0.cubicTo(14.100000f, 14.200000f, 14.000000f, 14.300000f, 13.900001f, 14.300000f);
        path_0.close();
        path_0.moveTo(13.900001f, 13.700000f);
        path_0.cubicTo(13.800000f, 13.700000f, 13.700001f, 13.599999f, 13.700001f, 13.500000f);
        path_0.cubicTo(13.700001f, 13.400000f, 13.800001f, 13.300000f, 13.900001f, 13.300000f);
        path_0.cubicTo(14.000001f, 13.300000f, 14.100000f, 13.400001f, 14.100000f, 13.500000f);
        path_0.cubicTo(14.100000f, 13.599999f, 14.000000f, 13.700000f, 13.900001f, 13.700000f);
        path_0.close();
        path_0.moveTo(13.900001f, 13.000000f);
        path_0.cubicTo(13.800000f, 13.000000f, 13.700001f, 12.900000f, 13.700001f, 12.800000f);
        path_0.cubicTo(13.700001f, 12.700001f, 13.800001f, 12.600000f, 13.900001f, 12.600000f);
        path_0.cubicTo(14.000001f, 12.600000f, 14.100000f, 12.700001f, 14.100000f, 12.800000f);
        path_0.cubicTo(14.100000f, 12.900000f, 14.000000f, 13.000000f, 13.900001f, 13.000000f);
        path_0.close();
        path_0.moveTo(20.100000f, 12.600000f);
        path_0.cubicTo(20.200001f, 12.600000f, 20.300001f, 12.700001f, 20.300001f, 12.800000f);
        path_0.cubicTo(20.300001f, 12.900000f, 20.200001f, 13.000000f, 20.100000f, 13.000000f);
        path_0.cubicTo(20.000000f, 13.000000f, 19.900000f, 12.900000f, 19.900000f, 12.800000f);
        path_0.cubicTo(19.900000f, 12.700001f, 19.900000f, 12.600000f, 20.100000f, 12.600000f);
        path_0.close();
        path_0.moveTo(20.100000f, 13.300000f);
        path_0.cubicTo(20.200001f, 13.300000f, 20.300001f, 13.400001f, 20.300001f, 13.500000f);
        path_0.cubicTo(20.300001f, 13.600000f, 20.200001f, 13.700000f, 20.100000f, 13.700000f);
        path_0.cubicTo(20.000000f, 13.700000f, 19.900000f, 13.599999f, 19.900000f, 13.500000f);
        path_0.cubicTo(19.800001f, 13.400001f, 19.900000f, 13.300000f, 20.100000f, 13.300000f);
        path_0.close();
        path_0.moveTo(20.100000f, 13.900001f);
        path_0.cubicTo(20.200001f, 13.900001f, 20.300001f, 14.000001f, 20.300001f, 14.100000f);
        path_0.cubicTo(20.300001f, 14.200000f, 20.200001f, 14.300000f, 20.100000f, 14.300000f);
        path_0.cubicTo(20.000000f, 14.300000f, 19.900000f, 14.200000f, 19.900000f, 14.100000f);
        path_0.cubicTo(19.900000f, 14.000001f, 19.900000f, 13.900001f, 20.100000f, 13.900001f);
        path_0.close();
        path_0.moveTo(20.100000f, 14.600000f);
        path_0.cubicTo(20.200001f, 14.600000f, 20.300001f, 14.700001f, 20.300001f, 14.800000f);
        path_0.cubicTo(20.300001f, 14.900001f, 20.200001f, 15.000000f, 20.100000f, 15.000000f);
        path_0.cubicTo(20.000000f, 15.000000f, 19.900000f, 14.900000f, 19.900000f, 14.800000f);
        path_0.cubicTo(19.800001f, 14.700000f, 19.900000f, 14.600000f, 20.100000f, 14.600000f);
        path_0.close();
        path_0.moveTo(20.100000f, 15.200000f);
        path_0.cubicTo(20.200001f, 15.200000f, 20.300001f, 15.300000f, 20.300001f, 15.400000f);
        path_0.cubicTo(20.300001f, 15.500000f, 20.200001f, 15.599999f, 20.100000f, 15.599999f);
        path_0.cubicTo(20.000000f, 15.599999f, 19.900000f, 15.499999f, 19.900000f, 15.400000f);
        path_0.cubicTo(19.800001f, 15.300000f, 19.900000f, 15.200000f, 20.100000f, 15.200000f);
        path_0.close();
        path_0.moveTo(20.100000f, 15.900001f);
        path_0.cubicTo(20.200001f, 15.900001f, 20.300001f, 16.000000f, 20.300001f, 16.100000f);
        path_0.cubicTo(20.300001f, 16.200001f, 20.200001f, 16.300001f, 20.100000f, 16.300001f);
        render_1(canvas);
    }

    private void render_1(Canvas canvas) {
        path_0.cubicTo(20.000000f, 16.300001f, 19.900000f, 16.200001f, 19.900000f, 16.100000f);
        path_0.cubicTo(19.800001f, 16.000000f, 19.900000f, 15.900001f, 20.100000f, 15.900001f);
        path_0.close();
        path_0.moveTo(20.100000f, 16.600000f);
        path_0.cubicTo(20.200001f, 16.600000f, 20.300001f, 16.700001f, 20.300001f, 16.800001f);
        path_0.cubicTo(20.300001f, 16.900002f, 20.200001f, 17.000002f, 20.100000f, 17.000002f);
        path_0.cubicTo(20.000000f, 17.000002f, 19.900000f, 16.900002f, 19.900000f, 16.800001f);
        path_0.cubicTo(19.800001f, 16.700001f, 19.900000f, 16.600000f, 20.100000f, 16.600000f);
        path_0.close();
        path_0.moveTo(20.100000f, 17.200001f);
        path_0.cubicTo(20.200001f, 17.200001f, 20.300001f, 17.300001f, 20.300001f, 17.400002f);
        path_0.cubicTo(20.300001f, 17.500002f, 20.200001f, 17.600002f, 20.100000f, 17.600002f);
        path_0.cubicTo(20.000000f, 17.600002f, 19.900000f, 17.500002f, 19.900000f, 17.400002f);
        path_0.cubicTo(19.800001f, 17.300001f, 19.900000f, 17.200001f, 20.100000f, 17.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 17.900000f);
        path_0.cubicTo(20.200001f, 17.900000f, 20.300001f, 18.000000f, 20.300001f, 18.100000f);
        path_0.cubicTo(20.300001f, 18.200001f, 20.200001f, 18.300001f, 20.100000f, 18.300001f);
        path_0.cubicTo(20.000000f, 18.300001f, 19.900000f, 18.200001f, 19.900000f, 18.100000f);
        path_0.cubicTo(19.900000f, 18.000000f, 19.900000f, 17.900000f, 20.100000f, 17.900000f);
        path_0.close();
        path_0.moveTo(20.100000f, 18.600000f);
        path_0.cubicTo(20.200001f, 18.600000f, 20.300001f, 18.700001f, 20.300001f, 18.800001f);
        path_0.cubicTo(20.300001f, 18.900002f, 20.200001f, 19.000000f, 20.100000f, 19.000000f);
        path_0.cubicTo(20.000000f, 19.000000f, 19.900000f, 18.900000f, 19.900000f, 18.799999f);
        path_0.cubicTo(19.900000f, 18.699999f, 19.900000f, 18.600000f, 20.100000f, 18.600000f);
        path_0.close();
        path_0.moveTo(20.100000f, 19.200001f);
        path_0.cubicTo(20.200001f, 19.200001f, 20.300001f, 19.300001f, 20.300001f, 19.400002f);
        path_0.cubicTo(20.300001f, 19.500002f, 20.200001f, 19.600002f, 20.100000f, 19.600002f);
        path_0.cubicTo(20.000000f, 19.600002f, 19.900000f, 19.500002f, 19.900000f, 19.400002f);
        path_0.cubicTo(19.800001f, 19.300001f, 19.900000f, 19.200001f, 20.100000f, 19.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 19.900000f);
        path_0.cubicTo(20.200001f, 19.900000f, 20.300001f, 20.000000f, 20.300001f, 20.100000f);
        path_0.cubicTo(20.300001f, 20.200001f, 20.200001f, 20.300001f, 20.100000f, 20.300001f);
        path_0.cubicTo(20.000000f, 20.300001f, 19.900000f, 20.200001f, 19.900000f, 20.100000f);
        path_0.cubicTo(19.800001f, 20.000000f, 19.900000f, 19.900000f, 20.100000f, 19.900000f);
        path_0.close();
        path_0.moveTo(20.100000f, 20.500000f);
        path_0.cubicTo(20.200001f, 20.500000f, 20.300001f, 20.600000f, 20.300001f, 20.700001f);
        path_0.cubicTo(20.300001f, 20.800001f, 20.200001f, 21.000000f, 20.100000f, 21.000000f);
        path_0.cubicTo(20.000000f, 21.000000f, 19.900000f, 20.900000f, 19.900000f, 20.799999f);
        path_0.cubicTo(19.900000f, 20.699999f, 19.900000f, 20.500000f, 20.100000f, 20.500000f);
        path_0.close();
        path_0.moveTo(20.100000f, 21.200001f);
        path_0.cubicTo(20.200001f, 21.200001f, 20.300001f, 21.300001f, 20.300001f, 21.400002f);
        path_0.cubicTo(20.300001f, 21.500002f, 20.200001f, 21.600002f, 20.100000f, 21.600002f);
        path_0.cubicTo(20.000000f, 21.600002f, 19.900000f, 21.500002f, 19.900000f, 21.400002f);
        path_0.cubicTo(19.900000f, 21.300001f, 19.900000f, 21.200001f, 20.100000f, 21.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 21.900000f);
        path_0.cubicTo(20.200001f, 21.900000f, 20.300001f, 22.000000f, 20.300001f, 22.100000f);
        path_0.cubicTo(20.300001f, 22.200001f, 20.200001f, 22.300001f, 20.100000f, 22.300001f);
        path_0.cubicTo(20.000000f, 22.300001f, 19.900000f, 22.200001f, 19.900000f, 22.100000f);
        path_0.cubicTo(19.800001f, 22.000000f, 19.900000f, 21.900000f, 20.100000f, 21.900000f);
        path_0.close();
        path_0.moveTo(20.100000f, 22.500000f);
        path_0.cubicTo(20.200001f, 22.500000f, 20.300001f, 22.600000f, 20.300001f, 22.700001f);
        path_0.cubicTo(20.300001f, 22.800001f, 20.200001f, 22.900002f, 20.100000f, 22.900002f);
        path_0.cubicTo(20.000000f, 22.900002f, 19.900000f, 22.800001f, 19.900000f, 22.700001f);
        path_0.cubicTo(19.800001f, 22.600000f, 19.900000f, 22.500000f, 20.100000f, 22.500000f);
        path_0.close();
        path_0.moveTo(20.100000f, 23.200001f);
        path_0.cubicTo(20.200001f, 23.200001f, 20.300001f, 23.300001f, 20.300001f, 23.400002f);
        path_0.cubicTo(20.300001f, 23.500002f, 20.200001f, 23.600002f, 20.100000f, 23.600002f);
        path_0.cubicTo(20.000000f, 23.600002f, 19.900000f, 23.500002f, 19.900000f, 23.400002f);
        path_0.cubicTo(19.800001f, 23.300001f, 19.900000f, 23.200001f, 20.100000f, 23.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 23.800001f);
        path_0.cubicTo(20.200001f, 23.800001f, 20.300001f, 23.900002f, 20.300001f, 24.000002f);
        path_0.cubicTo(20.300001f, 24.100002f, 20.200001f, 24.200003f, 20.100000f, 24.200003f);
        path_0.cubicTo(20.000000f, 24.200003f, 19.900000f, 24.100002f, 19.900000f, 24.000002f);
        path_0.cubicTo(19.900000f, 23.900002f, 19.900000f, 23.800001f, 20.100000f, 23.800001f);
        path_0.close();
        path_0.moveTo(20.100000f, 24.500000f);
        path_0.cubicTo(20.200001f, 24.500000f, 20.300001f, 24.600000f, 20.300001f, 24.700001f);
        path_0.cubicTo(20.300001f, 24.800001f, 20.200001f, 24.900002f, 20.100000f, 24.900002f);
        path_0.cubicTo(20.000000f, 24.900002f, 19.900000f, 24.800001f, 19.900000f, 24.700001f);
        path_0.cubicTo(19.800001f, 24.600000f, 19.900000f, 24.500000f, 20.100000f, 24.500000f);
        path_0.close();
        path_0.moveTo(20.100000f, 25.200001f);
        path_0.cubicTo(20.200001f, 25.200001f, 20.300001f, 25.300001f, 20.300001f, 25.400002f);
        path_0.cubicTo(20.300001f, 25.500002f, 20.200001f, 25.600002f, 20.100000f, 25.600002f);
        path_0.cubicTo(20.000000f, 25.600002f, 19.900000f, 25.500002f, 19.900000f, 25.400002f);
        path_0.cubicTo(19.800001f, 25.300001f, 19.900000f, 25.200001f, 20.100000f, 25.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 25.800001f);
        path_0.cubicTo(20.200001f, 25.800001f, 20.300001f, 25.900002f, 20.300001f, 26.000002f);
        path_0.cubicTo(20.300001f, 26.100002f, 20.200001f, 26.200003f, 20.100000f, 26.200003f);
        path_0.cubicTo(20.000000f, 26.200003f, 19.900000f, 26.100002f, 19.900000f, 26.000002f);
        path_0.cubicTo(19.800001f, 25.900000f, 19.900000f, 25.800001f, 20.100000f, 25.800001f);
        path_0.close();
        path_0.moveTo(20.100000f, 26.500000f);
        path_0.cubicTo(20.200001f, 26.500000f, 20.300001f, 26.600000f, 20.300001f, 26.700001f);
        path_0.cubicTo(20.300001f, 26.800001f, 20.200001f, 26.900002f, 20.100000f, 26.900002f);
        path_0.cubicTo(20.000000f, 26.900002f, 19.900000f, 26.800001f, 19.900000f, 26.700001f);
        path_0.cubicTo(19.900000f, 26.600000f, 19.900000f, 26.500000f, 20.100000f, 26.500000f);
        path_0.close();
        path_0.moveTo(20.100000f, 27.200001f);
        path_0.cubicTo(20.200001f, 27.200001f, 20.300001f, 27.300001f, 20.300001f, 27.400002f);
        path_0.cubicTo(20.300001f, 27.500002f, 20.200001f, 27.600002f, 20.100000f, 27.600002f);
        path_0.cubicTo(20.000000f, 27.600002f, 19.900000f, 27.500002f, 19.900000f, 27.400002f);
        path_0.cubicTo(19.900000f, 27.300001f, 19.900000f, 27.200001f, 20.100000f, 27.200001f);
        path_0.close();
        path_0.moveTo(20.100000f, 27.800001f);
        path_0.cubicTo(20.200001f, 27.800001f, 20.300001f, 27.900002f, 20.300001f, 28.000002f);
        path_0.cubicTo(20.300001f, 28.100002f, 20.200001f, 28.200003f, 20.100000f, 28.200003f);
        path_0.cubicTo(20.000000f, 28.200003f, 19.900000f, 28.100002f, 19.900000f, 28.000002f);
        path_0.cubicTo(19.800001f, 27.900000f, 19.900000f, 27.800001f, 20.100000f, 27.800001f);
        path_0.close();
        path_0.moveTo(20.100000f, 28.500000f);
        path_0.cubicTo(20.200001f, 28.500000f, 20.300001f, 28.600000f, 20.300001f, 28.700001f);
        path_0.cubicTo(20.300001f, 28.800001f, 20.200001f, 28.900002f, 20.100000f, 28.900002f);
        path_0.cubicTo(20.000000f, 28.900002f, 19.900000f, 28.800001f, 19.900000f, 28.700001f);
        path_0.cubicTo(19.800001f, 28.600000f, 19.900000f, 28.500000f, 20.100000f, 28.500000f);
        path_0.close();
        path_0.moveTo(19.400000f, 12.600000f);
        path_0.cubicTo(19.500000f, 12.600000f, 19.600000f, 12.700001f, 19.600000f, 12.800000f);
        path_0.cubicTo(19.600000f, 12.900000f, 19.500000f, 13.000000f, 19.400000f, 13.000000f);
        path_0.cubicTo(19.299999f, 13.000000f, 19.199999f, 12.900000f, 19.199999f, 12.800000f);
        path_0.cubicTo(19.199999f, 12.700001f, 19.300001f, 12.600000f, 19.400000f, 12.600000f);
        path_0.close();
        path_0.moveTo(19.400000f, 13.300000f);
        path_0.cubicTo(19.500000f, 13.300000f, 19.600000f, 13.400001f, 19.600000f, 13.500000f);
        path_0.cubicTo(19.600000f, 13.600000f, 19.500000f, 13.700000f, 19.400000f, 13.700000f);
        path_0.cubicTo(19.299999f, 13.700000f, 19.199999f, 13.599999f, 19.199999f, 13.500000f);
        path_0.cubicTo(19.200001f, 13.400001f, 19.300001f, 13.300000f, 19.400000f, 13.300000f);
        path_0.close();
        path_0.moveTo(19.400000f, 13.900001f);
        path_0.cubicTo(19.500000f, 13.900001f, 19.600000f, 14.000001f, 19.600000f, 14.100000f);
        path_0.cubicTo(19.600000f, 14.200000f, 19.500000f, 14.300000f, 19.400000f, 14.300000f);
        path_0.cubicTo(19.299999f, 14.300000f, 19.199999f, 14.200000f, 19.199999f, 14.100000f);
        path_0.cubicTo(19.199999f, 14.000001f, 19.300001f, 13.900001f, 19.400000f, 13.900001f);
        path_0.close();
        path_0.moveTo(19.400000f, 14.600000f);
        path_0.cubicTo(19.500000f, 14.600000f, 19.600000f, 14.700001f, 19.600000f, 14.800000f);
        path_0.cubicTo(19.600000f, 14.900001f, 19.500000f, 15.000000f, 19.400000f, 15.000000f);
        path_0.cubicTo(19.299999f, 15.000000f, 19.199999f, 14.900000f, 19.199999f, 14.800000f);
        path_0.cubicTo(19.199999f, 14.700001f, 19.300001f, 14.600000f, 19.400000f, 14.600000f);
        path_0.close();
        path_0.moveTo(19.400000f, 15.200000f);
        path_0.cubicTo(19.500000f, 15.200000f, 19.600000f, 15.300000f, 19.600000f, 15.400000f);
        path_0.cubicTo(19.600000f, 15.500000f, 19.500000f, 15.599999f, 19.400000f, 15.599999f);
        path_0.cubicTo(19.299999f, 15.599999f, 19.199999f, 15.499999f, 19.199999f, 15.400000f);
        path_0.cubicTo(19.199999f, 15.300000f, 19.300001f, 15.200000f, 19.400000f, 15.200000f);
        path_0.close();
        path_0.moveTo(19.400000f, 15.900001f);
        path_0.cubicTo(19.500000f, 15.900001f, 19.600000f, 16.000000f, 19.600000f, 16.100000f);
        path_0.cubicTo(19.600000f, 16.200001f, 19.500000f, 16.300001f, 19.400000f, 16.300001f);
        path_0.cubicTo(19.299999f, 16.300001f, 19.199999f, 16.200001f, 19.199999f, 16.100000f);
        path_0.cubicTo(19.200001f, 16.000000f, 19.300001f, 15.900001f, 19.400000f, 15.900001f);
        path_0.close();
        path_0.moveTo(19.400000f, 16.600000f);
        path_0.cubicTo(19.500000f, 16.600000f, 19.600000f, 16.700001f, 19.600000f, 16.800001f);
        path_0.cubicTo(19.600000f, 16.900002f, 19.500000f, 17.000002f, 19.400000f, 17.000002f);
        path_0.cubicTo(19.299999f, 17.000002f, 19.199999f, 16.900002f, 19.199999f, 16.800001f);
        path_0.cubicTo(19.200001f, 16.700001f, 19.300001f, 16.600000f, 19.400000f, 16.600000f);
        path_0.close();
        path_0.moveTo(19.400000f, 17.200001f);
        path_0.cubicTo(19.500000f, 17.200001f, 19.600000f, 17.300001f, 19.600000f, 17.400002f);
        path_0.cubicTo(19.600000f, 17.500002f, 19.500000f, 17.600002f, 19.400000f, 17.600002f);
        path_0.cubicTo(19.299999f, 17.600002f, 19.199999f, 17.500002f, 19.199999f, 17.400002f);
        path_0.cubicTo(19.200001f, 17.300001f, 19.300001f, 17.200001f, 19.400000f, 17.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 17.900000f);
        path_0.cubicTo(19.500000f, 17.900000f, 19.600000f, 18.000000f, 19.600000f, 18.100000f);
        path_0.cubicTo(19.600000f, 18.200001f, 19.500000f, 18.300001f, 19.400000f, 18.300001f);
        path_0.cubicTo(19.299999f, 18.300001f, 19.199999f, 18.200001f, 19.199999f, 18.100000f);
        path_0.cubicTo(19.199999f, 18.000000f, 19.300001f, 17.900000f, 19.400000f, 17.900000f);
        path_0.close();
        path_0.moveTo(19.400000f, 18.600000f);
        path_0.cubicTo(19.500000f, 18.600000f, 19.600000f, 18.700001f, 19.600000f, 18.800001f);
        path_0.cubicTo(19.600000f, 18.900002f, 19.500000f, 19.000000f, 19.400000f, 19.000000f);
        path_0.cubicTo(19.299999f, 19.000000f, 19.199999f, 18.900000f, 19.199999f, 18.799999f);
        path_0.cubicTo(19.199999f, 18.699999f, 19.300001f, 18.600000f, 19.400000f, 18.600000f);
        path_0.close();
        path_0.moveTo(19.400000f, 19.200001f);
        path_0.cubicTo(19.500000f, 19.200001f, 19.600000f, 19.300001f, 19.600000f, 19.400002f);
        path_0.cubicTo(19.600000f, 19.500002f, 19.500000f, 19.600002f, 19.400000f, 19.600002f);
        path_0.cubicTo(19.299999f, 19.600002f, 19.199999f, 19.500002f, 19.199999f, 19.400002f);
        path_0.cubicTo(19.200001f, 19.300001f, 19.300001f, 19.200001f, 19.400000f, 19.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 19.900000f);
        path_0.cubicTo(19.500000f, 19.900000f, 19.600000f, 20.000000f, 19.600000f, 20.100000f);
        path_0.cubicTo(19.600000f, 20.200001f, 19.500000f, 20.300001f, 19.400000f, 20.300001f);
        path_0.cubicTo(19.299999f, 20.300001f, 19.199999f, 20.200001f, 19.199999f, 20.100000f);
        path_0.cubicTo(19.200001f, 20.000000f, 19.300001f, 19.900000f, 19.400000f, 19.900000f);
        path_0.close();
        path_0.moveTo(19.400000f, 20.500000f);
        path_0.cubicTo(19.500000f, 20.500000f, 19.600000f, 20.600000f, 19.600000f, 20.700001f);
        path_0.cubicTo(19.600000f, 20.800001f, 19.500000f, 21.000000f, 19.400000f, 21.000000f);
        path_0.cubicTo(19.299999f, 21.000000f, 19.199999f, 20.900000f, 19.199999f, 20.799999f);
        path_0.cubicTo(19.199999f, 20.699999f, 19.300001f, 20.500000f, 19.400000f, 20.500000f);
        path_0.close();
        path_0.moveTo(19.400000f, 21.200001f);
        path_0.cubicTo(19.500000f, 21.200001f, 19.600000f, 21.300001f, 19.600000f, 21.400002f);
        path_0.cubicTo(19.600000f, 21.500002f, 19.500000f, 21.600002f, 19.400000f, 21.600002f);
        path_0.cubicTo(19.299999f, 21.600002f, 19.199999f, 21.500002f, 19.199999f, 21.400002f);
        path_0.cubicTo(19.199999f, 21.300001f, 19.300001f, 21.200001f, 19.400000f, 21.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 21.900000f);
        path_0.cubicTo(19.500000f, 21.900000f, 19.600000f, 22.000000f, 19.600000f, 22.100000f);
        path_0.cubicTo(19.600000f, 22.200001f, 19.500000f, 22.300001f, 19.400000f, 22.300001f);
        path_0.cubicTo(19.299999f, 22.300001f, 19.199999f, 22.200001f, 19.199999f, 22.100000f);
        path_0.cubicTo(19.199999f, 22.000000f, 19.300001f, 21.900000f, 19.400000f, 21.900000f);
        path_0.close();
        path_0.moveTo(19.400000f, 22.500000f);
        path_0.cubicTo(19.500000f, 22.500000f, 19.600000f, 22.600000f, 19.600000f, 22.700001f);
        path_0.cubicTo(19.600000f, 22.800001f, 19.500000f, 22.900002f, 19.400000f, 22.900002f);
        path_0.cubicTo(19.299999f, 22.900002f, 19.199999f, 22.800001f, 19.199999f, 22.700001f);
        path_0.cubicTo(19.200001f, 22.600000f, 19.300001f, 22.500000f, 19.400000f, 22.500000f);
        path_0.close();
        path_0.moveTo(19.400000f, 23.200001f);
        path_0.cubicTo(19.500000f, 23.200001f, 19.600000f, 23.300001f, 19.600000f, 23.400002f);
        path_0.cubicTo(19.600000f, 23.500002f, 19.500000f, 23.600002f, 19.400000f, 23.600002f);
        path_0.cubicTo(19.299999f, 23.600002f, 19.199999f, 23.500002f, 19.199999f, 23.400002f);
        path_0.cubicTo(19.199999f, 23.300001f, 19.300001f, 23.200001f, 19.400000f, 23.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 23.800001f);
        path_0.cubicTo(19.500000f, 23.800001f, 19.600000f, 23.900002f, 19.600000f, 24.000002f);
        path_0.cubicTo(19.600000f, 24.100002f, 19.500000f, 24.200003f, 19.400000f, 24.200003f);
        path_0.cubicTo(19.299999f, 24.200003f, 19.199999f, 24.100002f, 19.199999f, 24.000002f);
        path_0.cubicTo(19.199999f, 23.900002f, 19.300001f, 23.800001f, 19.400000f, 23.800001f);
        path_0.close();
        path_0.moveTo(19.400000f, 24.500000f);
        path_0.cubicTo(19.500000f, 24.500000f, 19.600000f, 24.600000f, 19.600000f, 24.700001f);
        path_0.cubicTo(19.600000f, 24.800001f, 19.500000f, 24.900002f, 19.400000f, 24.900002f);
        path_0.cubicTo(19.299999f, 24.900002f, 19.199999f, 24.800001f, 19.199999f, 24.700001f);
        path_0.cubicTo(19.199999f, 24.600000f, 19.300001f, 24.500000f, 19.400000f, 24.500000f);
        path_0.close();
        path_0.moveTo(19.400000f, 25.200001f);
        path_0.cubicTo(19.500000f, 25.200001f, 19.600000f, 25.300001f, 19.600000f, 25.400002f);
        path_0.cubicTo(19.600000f, 25.500002f, 19.500000f, 25.600002f, 19.400000f, 25.600002f);
        path_0.cubicTo(19.299999f, 25.600002f, 19.199999f, 25.500002f, 19.199999f, 25.400002f);
        path_0.cubicTo(19.199999f, 25.300001f, 19.300001f, 25.200001f, 19.400000f, 25.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 25.800001f);
        path_0.cubicTo(19.500000f, 25.800001f, 19.600000f, 25.900002f, 19.600000f, 26.000002f);
        path_0.cubicTo(19.600000f, 26.100002f, 19.500000f, 26.200003f, 19.400000f, 26.200003f);
        path_0.cubicTo(19.299999f, 26.200003f, 19.199999f, 26.100002f, 19.199999f, 26.000002f);
        path_0.cubicTo(19.200001f, 25.900000f, 19.300001f, 25.800001f, 19.400000f, 25.800001f);
        path_0.close();
        path_0.moveTo(19.400000f, 26.500000f);
        path_0.cubicTo(19.500000f, 26.500000f, 19.600000f, 26.600000f, 19.600000f, 26.700001f);
        path_0.cubicTo(19.600000f, 26.800001f, 19.500000f, 26.900002f, 19.400000f, 26.900002f);
        path_0.cubicTo(19.299999f, 26.900002f, 19.199999f, 26.800001f, 19.199999f, 26.700001f);
        path_0.cubicTo(19.199999f, 26.600000f, 19.300001f, 26.500000f, 19.400000f, 26.500000f);
        path_0.close();
        path_0.moveTo(19.400000f, 27.200001f);
        path_0.cubicTo(19.500000f, 27.200001f, 19.600000f, 27.300001f, 19.600000f, 27.400002f);
        path_0.cubicTo(19.600000f, 27.500002f, 19.500000f, 27.600002f, 19.400000f, 27.600002f);
        path_0.cubicTo(19.299999f, 27.600002f, 19.199999f, 27.500002f, 19.199999f, 27.400002f);
        path_0.cubicTo(19.199999f, 27.300001f, 19.300001f, 27.200001f, 19.400000f, 27.200001f);
        path_0.close();
        path_0.moveTo(19.400000f, 27.800001f);
        path_0.cubicTo(19.500000f, 27.800001f, 19.600000f, 27.900002f, 19.600000f, 28.000002f);
        path_0.cubicTo(19.600000f, 28.100002f, 19.500000f, 28.200003f, 19.400000f, 28.200003f);
        path_0.cubicTo(19.299999f, 28.200003f, 19.199999f, 28.100002f, 19.199999f, 28.000002f);
        path_0.cubicTo(19.199999f, 27.900002f, 19.300001f, 27.800001f, 19.400000f, 27.800001f);
        path_0.close();
        path_0.moveTo(19.400000f, 28.500000f);
        path_0.cubicTo(19.500000f, 28.500000f, 19.600000f, 28.600000f, 19.600000f, 28.700001f);
        path_0.cubicTo(19.600000f, 28.800001f, 19.500000f, 28.900002f, 19.400000f, 28.900002f);
        path_0.cubicTo(19.299999f, 28.900002f, 19.199999f, 28.800001f, 19.199999f, 28.700001f);
        path_0.cubicTo(19.199999f, 28.600000f, 19.300001f, 28.500000f, 19.400000f, 28.500000f);
        path_0.close();
        path_0.moveTo(18.700001f, 12.600000f);
        path_0.cubicTo(18.800001f, 12.600000f, 18.900002f, 12.700001f, 18.900002f, 12.800000f);
        path_0.cubicTo(18.900002f, 12.900000f, 18.800001f, 13.000000f, 18.700001f, 13.000000f);
        path_0.cubicTo(18.600000f, 13.000000f, 18.500000f, 12.900000f, 18.500000f, 12.800000f);
        path_0.cubicTo(18.500000f, 12.700001f, 18.600000f, 12.600000f, 18.700001f, 12.600000f);
        path_0.close();
        path_0.moveTo(18.700001f, 13.300000f);
        path_0.cubicTo(18.800001f, 13.300000f, 18.900002f, 13.400001f, 18.900002f, 13.500000f);
        path_0.cubicTo(18.900002f, 13.600000f, 18.800001f, 13.700000f, 18.700001f, 13.700000f);
        path_0.cubicTo(18.600000f, 13.700000f, 18.500000f, 13.599999f, 18.500000f, 13.500000f);
        path_0.cubicTo(18.500000f, 13.400001f, 18.600000f, 13.300000f, 18.700001f, 13.300000f);
        path_0.close();
        path_0.moveTo(18.700001f, 13.900001f);
        path_0.cubicTo(18.800001f, 13.900001f, 18.900002f, 14.000001f, 18.900002f, 14.100000f);
        path_0.cubicTo(18.900002f, 14.200000f, 18.800001f, 14.300000f, 18.700001f, 14.300000f);
        path_0.cubicTo(18.600000f, 14.300000f, 18.500000f, 14.200000f, 18.500000f, 14.100000f);
        path_0.cubicTo(18.500000f, 14.000001f, 18.600000f, 13.900001f, 18.700001f, 13.900001f);
        path_0.close();
        path_0.moveTo(18.700001f, 14.600000f);
        path_0.cubicTo(18.800001f, 14.600000f, 18.900002f, 14.700001f, 18.900002f, 14.800000f);
        path_0.cubicTo(18.900002f, 14.900001f, 18.800001f, 15.000000f, 18.700001f, 15.000000f);
        path_0.cubicTo(18.600000f, 15.000000f, 18.500000f, 14.900000f, 18.500000f, 14.800000f);
        path_0.cubicTo(18.500000f, 14.700001f, 18.600000f, 14.600000f, 18.700001f, 14.600000f);
        path_0.close();
        path_0.moveTo(18.700001f, 15.200000f);
        path_0.cubicTo(18.800001f, 15.200000f, 18.900002f, 15.300000f, 18.900002f, 15.400000f);
        path_0.cubicTo(18.900002f, 15.500000f, 18.800001f, 15.599999f, 18.700001f, 15.599999f);
        path_0.cubicTo(18.600000f, 15.599999f, 18.500000f, 15.499999f, 18.500000f, 15.400000f);
        path_0.cubicTo(18.500000f, 15.300000f, 18.600000f, 15.200000f, 18.700001f, 15.200000f);
        path_0.close();
        path_0.moveTo(18.700001f, 15.900001f);
        path_0.cubicTo(18.800001f, 15.900001f, 18.900002f, 16.000000f, 18.900002f, 16.100000f);
        path_0.cubicTo(18.900002f, 16.200001f, 18.800001f, 16.300001f, 18.700001f, 16.300001f);
        path_0.cubicTo(18.600000f, 16.300001f, 18.500000f, 16.200001f, 18.500000f, 16.100000f);
        path_0.cubicTo(18.500000f, 16.000000f, 18.600000f, 15.900001f, 18.700001f, 15.900001f);
        path_0.close();
        path_0.moveTo(18.700001f, 16.600000f);
        path_0.cubicTo(18.800001f, 16.600000f, 18.900002f, 16.700001f, 18.900002f, 16.800001f);
        path_0.cubicTo(18.900002f, 16.900002f, 18.800001f, 17.000002f, 18.700001f, 17.000002f);
        path_0.cubicTo(18.600000f, 17.000002f, 18.500000f, 16.900002f, 18.500000f, 16.800001f);
        path_0.cubicTo(18.500000f, 16.700001f, 18.600000f, 16.600000f, 18.700001f, 16.600000f);
        path_0.close();
        path_0.moveTo(18.700001f, 17.200001f);
        path_0.cubicTo(18.800001f, 17.200001f, 18.900002f, 17.300001f, 18.900002f, 17.400002f);
        path_0.cubicTo(18.900002f, 17.500002f, 18.800001f, 17.600002f, 18.700001f, 17.600002f);
        path_0.cubicTo(18.600000f, 17.600002f, 18.500000f, 17.500002f, 18.500000f, 17.400002f);
        path_0.cubicTo(18.500000f, 17.300001f, 18.600000f, 17.200001f, 18.700001f, 17.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 17.900000f);
        path_0.cubicTo(18.800001f, 17.900000f, 18.900002f, 18.000000f, 18.900002f, 18.100000f);
        path_0.cubicTo(18.900002f, 18.200001f, 18.800001f, 18.300001f, 18.700001f, 18.300001f);
        path_0.cubicTo(18.600000f, 18.300001f, 18.500000f, 18.200001f, 18.500000f, 18.100000f);
        path_0.cubicTo(18.500000f, 18.000000f, 18.600000f, 17.900000f, 18.700001f, 17.900000f);
        path_0.close();
        path_0.moveTo(18.700001f, 18.600000f);
        path_0.cubicTo(18.800001f, 18.600000f, 18.900002f, 18.700001f, 18.900002f, 18.800001f);
        path_0.cubicTo(18.900002f, 18.900002f, 18.800001f, 19.000000f, 18.700001f, 19.000000f);
        path_0.cubicTo(18.600000f, 19.000000f, 18.500000f, 18.900000f, 18.500000f, 18.799999f);
        path_0.cubicTo(18.500000f, 18.699999f, 18.600000f, 18.600000f, 18.700001f, 18.600000f);
        path_0.close();
        path_0.moveTo(18.700001f, 19.200001f);
        path_0.cubicTo(18.800001f, 19.200001f, 18.900002f, 19.300001f, 18.900002f, 19.400002f);
        path_0.cubicTo(18.900002f, 19.500002f, 18.800001f, 19.600002f, 18.700001f, 19.600002f);
        path_0.cubicTo(18.600000f, 19.600002f, 18.500000f, 19.500002f, 18.500000f, 19.400002f);
        path_0.cubicTo(18.500000f, 19.300001f, 18.600000f, 19.200001f, 18.700001f, 19.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 19.900000f);
        path_0.cubicTo(18.800001f, 19.900000f, 18.900002f, 20.000000f, 18.900002f, 20.100000f);
        path_0.cubicTo(18.900002f, 20.200001f, 18.800001f, 20.300001f, 18.700001f, 20.300001f);
        path_0.cubicTo(18.600000f, 20.300001f, 18.500000f, 20.200001f, 18.500000f, 20.100000f);
        path_0.cubicTo(18.500000f, 20.000000f, 18.600000f, 19.900000f, 18.700001f, 19.900000f);
        path_0.close();
        path_0.moveTo(18.700001f, 20.500000f);
        path_0.cubicTo(18.800001f, 20.500000f, 18.900002f, 20.600000f, 18.900002f, 20.700001f);
        path_0.cubicTo(18.900002f, 20.800001f, 18.800001f, 21.000000f, 18.700001f, 21.000000f);
        path_0.cubicTo(18.600000f, 21.000000f, 18.500000f, 20.900000f, 18.500000f, 20.799999f);
        path_0.cubicTo(18.500000f, 20.699999f, 18.600000f, 20.500000f, 18.700001f, 20.500000f);
        path_0.close();
        path_0.moveTo(18.700001f, 21.200001f);
        path_0.cubicTo(18.800001f, 21.200001f, 18.900002f, 21.300001f, 18.900002f, 21.400002f);
        path_0.cubicTo(18.900002f, 21.500002f, 18.800001f, 21.600002f, 18.700001f, 21.600002f);
        path_0.cubicTo(18.600000f, 21.600002f, 18.500000f, 21.500002f, 18.500000f, 21.400002f);
        path_0.cubicTo(18.500000f, 21.300001f, 18.600000f, 21.200001f, 18.700001f, 21.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 21.900000f);
        path_0.cubicTo(18.800001f, 21.900000f, 18.900002f, 22.000000f, 18.900002f, 22.100000f);
        path_0.cubicTo(18.900002f, 22.200001f, 18.800001f, 22.300001f, 18.700001f, 22.300001f);
        path_0.cubicTo(18.600000f, 22.300001f, 18.500000f, 22.200001f, 18.500000f, 22.100000f);
        path_0.cubicTo(18.500000f, 22.000000f, 18.600000f, 21.900000f, 18.700001f, 21.900000f);
        path_0.close();
        path_0.moveTo(18.700001f, 22.500000f);
        path_0.cubicTo(18.800001f, 22.500000f, 18.900002f, 22.600000f, 18.900002f, 22.700001f);
        path_0.cubicTo(18.900002f, 22.800001f, 18.800001f, 22.900002f, 18.700001f, 22.900002f);
        path_0.cubicTo(18.600000f, 22.900002f, 18.500000f, 22.800001f, 18.500000f, 22.700001f);
        path_0.cubicTo(18.500000f, 22.600000f, 18.600000f, 22.500000f, 18.700001f, 22.500000f);
        path_0.close();
        path_0.moveTo(18.700001f, 23.200001f);
        path_0.cubicTo(18.800001f, 23.200001f, 18.900002f, 23.300001f, 18.900002f, 23.400002f);
        path_0.cubicTo(18.900002f, 23.500002f, 18.800001f, 23.600002f, 18.700001f, 23.600002f);
        path_0.cubicTo(18.600000f, 23.600002f, 18.500000f, 23.500002f, 18.500000f, 23.400002f);
        path_0.cubicTo(18.500000f, 23.300001f, 18.600000f, 23.200001f, 18.700001f, 23.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 23.800001f);
        path_0.cubicTo(18.800001f, 23.800001f, 18.900002f, 23.900002f, 18.900002f, 24.000002f);
        path_0.cubicTo(18.900002f, 24.100002f, 18.800001f, 24.200003f, 18.700001f, 24.200003f);
        path_0.cubicTo(18.600000f, 24.200003f, 18.500000f, 24.100002f, 18.500000f, 24.000002f);
        path_0.cubicTo(18.500000f, 23.900002f, 18.600000f, 23.800001f, 18.700001f, 23.800001f);
        path_0.close();
        path_0.moveTo(18.700001f, 24.500000f);
        path_0.cubicTo(18.800001f, 24.500000f, 18.900002f, 24.600000f, 18.900002f, 24.700001f);
        path_0.cubicTo(18.900002f, 24.800001f, 18.800001f, 24.900002f, 18.700001f, 24.900002f);
        path_0.cubicTo(18.600000f, 24.900002f, 18.500000f, 24.800001f, 18.500000f, 24.700001f);
        path_0.cubicTo(18.500000f, 24.600000f, 18.600000f, 24.500000f, 18.700001f, 24.500000f);
        path_0.close();
        path_0.moveTo(18.700001f, 25.200001f);
        path_0.cubicTo(18.800001f, 25.200001f, 18.900002f, 25.300001f, 18.900002f, 25.400002f);
        path_0.cubicTo(18.900002f, 25.500002f, 18.800001f, 25.600002f, 18.700001f, 25.600002f);
        path_0.cubicTo(18.600000f, 25.600002f, 18.500000f, 25.500002f, 18.500000f, 25.400002f);
        path_0.cubicTo(18.500000f, 25.300001f, 18.600000f, 25.200001f, 18.700001f, 25.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 25.800001f);
        path_0.cubicTo(18.800001f, 25.800001f, 18.900002f, 25.900002f, 18.900002f, 26.000002f);
        path_0.cubicTo(18.900002f, 26.100002f, 18.800001f, 26.200003f, 18.700001f, 26.200003f);
        path_0.cubicTo(18.600000f, 26.200003f, 18.500000f, 26.100002f, 18.500000f, 26.000002f);
        path_0.cubicTo(18.500000f, 25.900000f, 18.600000f, 25.800001f, 18.700001f, 25.800001f);
        path_0.close();
        path_0.moveTo(18.700001f, 26.500000f);
        path_0.cubicTo(18.800001f, 26.500000f, 18.900002f, 26.600000f, 18.900002f, 26.700001f);
        path_0.cubicTo(18.900002f, 26.800001f, 18.800001f, 26.900002f, 18.700001f, 26.900002f);
        path_0.cubicTo(18.600000f, 26.900002f, 18.500000f, 26.800001f, 18.500000f, 26.700001f);
        path_0.cubicTo(18.500000f, 26.600000f, 18.600000f, 26.500000f, 18.700001f, 26.500000f);
        path_0.close();
        path_0.moveTo(18.700001f, 27.200001f);
        path_0.cubicTo(18.800001f, 27.200001f, 18.900002f, 27.300001f, 18.900002f, 27.400002f);
        path_0.cubicTo(18.900002f, 27.500002f, 18.800001f, 27.600002f, 18.700001f, 27.600002f);
        path_0.cubicTo(18.600000f, 27.600002f, 18.500000f, 27.500002f, 18.500000f, 27.400002f);
        path_0.cubicTo(18.500000f, 27.300001f, 18.600000f, 27.200001f, 18.700001f, 27.200001f);
        path_0.close();
        path_0.moveTo(18.700001f, 27.800001f);
        path_0.cubicTo(18.800001f, 27.800001f, 18.900002f, 27.900002f, 18.900002f, 28.000002f);
        path_0.cubicTo(18.900002f, 28.100002f, 18.800001f, 28.200003f, 18.700001f, 28.200003f);
        path_0.cubicTo(18.600000f, 28.200003f, 18.500000f, 28.100002f, 18.500000f, 28.000002f);
        path_0.cubicTo(18.500000f, 27.900002f, 18.600000f, 27.800001f, 18.700001f, 27.800001f);
        path_0.close();
        path_0.moveTo(18.700001f, 28.500000f);
        path_0.cubicTo(18.800001f, 28.500000f, 18.900002f, 28.600000f, 18.900002f, 28.700001f);
        path_0.cubicTo(18.900002f, 28.800001f, 18.800001f, 28.900002f, 18.700001f, 28.900002f);
        path_0.cubicTo(18.600000f, 28.900002f, 18.500000f, 28.800001f, 18.500000f, 28.700001f);
        path_0.cubicTo(18.500000f, 28.600000f, 18.600000f, 28.500000f, 18.700001f, 28.500000f);
        path_0.close();
        path_0.moveTo(18.000000f, 12.600000f);
        path_0.cubicTo(18.100000f, 12.600000f, 18.200001f, 12.700001f, 18.200001f, 12.800000f);
        path_0.cubicTo(18.200001f, 12.900000f, 18.100000f, 13.000000f, 18.000000f, 13.000000f);
        path_0.cubicTo(17.900000f, 13.000000f, 17.799999f, 12.900000f, 17.799999f, 12.800000f);
        path_0.cubicTo(17.799999f, 12.700001f, 17.900000f, 12.600000f, 18.000000f, 12.600000f);
        path_0.close();
        path_0.moveTo(18.000000f, 13.300000f);
        path_0.cubicTo(18.100000f, 13.300000f, 18.200001f, 13.400001f, 18.200001f, 13.500000f);
        path_0.cubicTo(18.200001f, 13.600000f, 18.100000f, 13.700000f, 18.000000f, 13.700000f);
        path_0.cubicTo(17.900000f, 13.700000f, 17.799999f, 13.599999f, 17.799999f, 13.500000f);
        path_0.cubicTo(17.800001f, 13.400001f, 17.900000f, 13.300000f, 18.000000f, 13.300000f);
        path_0.close();
        path_0.moveTo(18.000000f, 13.900001f);
        path_0.cubicTo(18.100000f, 13.900001f, 18.200001f, 14.000001f, 18.200001f, 14.100000f);
        path_0.cubicTo(18.200001f, 14.200000f, 18.100000f, 14.300000f, 18.000000f, 14.300000f);
        path_0.cubicTo(17.900000f, 14.300000f, 17.799999f, 14.200000f, 17.799999f, 14.100000f);
        path_0.cubicTo(17.799999f, 14.000001f, 17.900000f, 13.900001f, 18.000000f, 13.900001f);
        path_0.close();
        path_0.moveTo(18.000000f, 14.600000f);
        path_0.cubicTo(18.100000f, 14.600000f, 18.200001f, 14.700001f, 18.200001f, 14.800000f);
        path_0.cubicTo(18.200001f, 14.900001f, 18.100000f, 15.000000f, 18.000000f, 15.000000f);
        path_0.cubicTo(17.900000f, 15.000000f, 17.799999f, 14.900000f, 17.799999f, 14.800000f);
        path_0.cubicTo(17.799999f, 14.700001f, 17.900000f, 14.600000f, 18.000000f, 14.600000f);
        path_0.close();
        path_0.moveTo(18.000000f, 15.200000f);
        path_0.cubicTo(18.100000f, 15.200000f, 18.200001f, 15.300000f, 18.200001f, 15.400000f);
        path_0.cubicTo(18.200001f, 15.500000f, 18.100000f, 15.599999f, 18.000000f, 15.599999f);
        path_0.cubicTo(17.900000f, 15.599999f, 17.799999f, 15.499999f, 17.799999f, 15.400000f);
        path_0.cubicTo(17.799999f, 15.300000f, 17.900000f, 15.200000f, 18.000000f, 15.200000f);
        path_0.close();
        path_0.moveTo(18.000000f, 15.900001f);
        path_0.cubicTo(18.100000f, 15.900001f, 18.200001f, 16.000000f, 18.200001f, 16.100000f);
        path_0.cubicTo(18.200001f, 16.200001f, 18.100000f, 16.300001f, 18.000000f, 16.300001f);
        path_0.cubicTo(17.900000f, 16.300001f, 17.799999f, 16.200001f, 17.799999f, 16.100000f);
        path_0.cubicTo(17.800001f, 16.000000f, 17.900000f, 15.900001f, 18.000000f, 15.900001f);
        path_0.close();
        path_0.moveTo(18.000000f, 16.600000f);
        path_0.cubicTo(18.100000f, 16.600000f, 18.200001f, 16.700001f, 18.200001f, 16.800001f);
        path_0.cubicTo(18.200001f, 16.900002f, 18.100000f, 17.000002f, 18.000000f, 17.000002f);
        path_0.cubicTo(17.900000f, 17.000002f, 17.799999f, 16.900002f, 17.799999f, 16.800001f);
        path_0.cubicTo(17.800001f, 16.700001f, 17.900000f, 16.600000f, 18.000000f, 16.600000f);
        path_0.close();
        path_0.moveTo(18.000000f, 17.200001f);
        path_0.cubicTo(18.100000f, 17.200001f, 18.200001f, 17.300001f, 18.200001f, 17.400002f);
        path_0.cubicTo(18.200001f, 17.500002f, 18.100000f, 17.600002f, 18.000000f, 17.600002f);
        path_0.cubicTo(17.900000f, 17.600002f, 17.799999f, 17.500002f, 17.799999f, 17.400002f);
        path_0.cubicTo(17.800001f, 17.300001f, 17.900000f, 17.200001f, 18.000000f, 17.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 17.900000f);
        path_0.cubicTo(18.100000f, 17.900000f, 18.200001f, 18.000000f, 18.200001f, 18.100000f);
        path_0.cubicTo(18.200001f, 18.200001f, 18.100000f, 18.300001f, 18.000000f, 18.300001f);
        path_0.cubicTo(17.900000f, 18.300001f, 17.799999f, 18.200001f, 17.799999f, 18.100000f);
        path_0.cubicTo(17.799999f, 18.000000f, 17.900000f, 17.900000f, 18.000000f, 17.900000f);
        path_0.close();
        path_0.moveTo(18.000000f, 18.600000f);
        path_0.cubicTo(18.100000f, 18.600000f, 18.200001f, 18.700001f, 18.200001f, 18.800001f);
        path_0.cubicTo(18.200001f, 18.900002f, 18.100000f, 19.000000f, 18.000000f, 19.000000f);
        path_0.cubicTo(17.900000f, 19.000000f, 17.799999f, 18.900000f, 17.799999f, 18.799999f);
        path_0.cubicTo(17.799999f, 18.699999f, 17.900000f, 18.600000f, 18.000000f, 18.600000f);
        path_0.close();
        path_0.moveTo(18.000000f, 19.200001f);
        path_0.cubicTo(18.100000f, 19.200001f, 18.200001f, 19.300001f, 18.200001f, 19.400002f);
        path_0.cubicTo(18.200001f, 19.500002f, 18.100000f, 19.600002f, 18.000000f, 19.600002f);
        path_0.cubicTo(17.900000f, 19.600002f, 17.799999f, 19.500002f, 17.799999f, 19.400002f);
        path_0.cubicTo(17.800001f, 19.300001f, 17.900000f, 19.200001f, 18.000000f, 19.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 19.900000f);
        path_0.cubicTo(18.100000f, 19.900000f, 18.200001f, 20.000000f, 18.200001f, 20.100000f);
        path_0.cubicTo(18.200001f, 20.200001f, 18.100000f, 20.300001f, 18.000000f, 20.300001f);
        path_0.cubicTo(17.900000f, 20.300001f, 17.799999f, 20.200001f, 17.799999f, 20.100000f);
        path_0.cubicTo(17.800001f, 20.000000f, 17.900000f, 19.900000f, 18.000000f, 19.900000f);
        path_0.close();
        path_0.moveTo(18.000000f, 20.500000f);
        path_0.cubicTo(18.100000f, 20.500000f, 18.200001f, 20.600000f, 18.200001f, 20.700001f);
        path_0.cubicTo(18.200001f, 20.800001f, 18.100000f, 21.000000f, 18.000000f, 21.000000f);
        path_0.cubicTo(17.900000f, 21.000000f, 17.799999f, 20.900000f, 17.799999f, 20.799999f);
        path_0.cubicTo(17.799999f, 20.699999f, 17.900000f, 20.500000f, 18.000000f, 20.500000f);
        path_0.close();
        path_0.moveTo(18.000000f, 21.200001f);
        path_0.cubicTo(18.100000f, 21.200001f, 18.200001f, 21.300001f, 18.200001f, 21.400002f);
        path_0.cubicTo(18.200001f, 21.500002f, 18.100000f, 21.600002f, 18.000000f, 21.600002f);
        path_0.cubicTo(17.900000f, 21.600002f, 17.799999f, 21.500002f, 17.799999f, 21.400002f);
        path_0.cubicTo(17.799999f, 21.300001f, 17.900000f, 21.200001f, 18.000000f, 21.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 21.900000f);
        path_0.cubicTo(18.100000f, 21.900000f, 18.200001f, 22.000000f, 18.200001f, 22.100000f);
        path_0.cubicTo(18.200001f, 22.200001f, 18.100000f, 22.300001f, 18.000000f, 22.300001f);
        path_0.cubicTo(17.900000f, 22.300001f, 17.799999f, 22.200001f, 17.799999f, 22.100000f);
        path_0.cubicTo(17.799999f, 22.000000f, 17.900000f, 21.900000f, 18.000000f, 21.900000f);
        path_0.close();
        path_0.moveTo(18.000000f, 22.500000f);
        path_0.cubicTo(18.100000f, 22.500000f, 18.200001f, 22.600000f, 18.200001f, 22.700001f);
        path_0.cubicTo(18.200001f, 22.800001f, 18.100000f, 22.900002f, 18.000000f, 22.900002f);
        path_0.cubicTo(17.900000f, 22.900002f, 17.799999f, 22.800001f, 17.799999f, 22.700001f);
        path_0.cubicTo(17.800001f, 22.600000f, 17.900000f, 22.500000f, 18.000000f, 22.500000f);
        path_0.close();
        path_0.moveTo(18.000000f, 23.200001f);
        path_0.cubicTo(18.100000f, 23.200001f, 18.200001f, 23.300001f, 18.200001f, 23.400002f);
        path_0.cubicTo(18.200001f, 23.500002f, 18.100000f, 23.600002f, 18.000000f, 23.600002f);
        path_0.cubicTo(17.900000f, 23.600002f, 17.799999f, 23.500002f, 17.799999f, 23.400002f);
        path_0.cubicTo(17.799999f, 23.300001f, 17.900000f, 23.200001f, 18.000000f, 23.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 23.800001f);
        path_0.cubicTo(18.100000f, 23.800001f, 18.200001f, 23.900002f, 18.200001f, 24.000002f);
        path_0.cubicTo(18.200001f, 24.100002f, 18.100000f, 24.200003f, 18.000000f, 24.200003f);
        path_0.cubicTo(17.900000f, 24.200003f, 17.799999f, 24.100002f, 17.799999f, 24.000002f);
        path_0.cubicTo(17.799999f, 23.900002f, 17.900000f, 23.800001f, 18.000000f, 23.800001f);
        path_0.close();
        path_0.moveTo(18.000000f, 24.500000f);
        path_0.cubicTo(18.100000f, 24.500000f, 18.200001f, 24.600000f, 18.200001f, 24.700001f);
        path_0.cubicTo(18.200001f, 24.800001f, 18.100000f, 24.900002f, 18.000000f, 24.900002f);
        path_0.cubicTo(17.900000f, 24.900002f, 17.799999f, 24.800001f, 17.799999f, 24.700001f);
        path_0.cubicTo(17.799999f, 24.600000f, 17.900000f, 24.500000f, 18.000000f, 24.500000f);
        path_0.close();
        path_0.moveTo(18.000000f, 25.200001f);
        path_0.cubicTo(18.100000f, 25.200001f, 18.200001f, 25.300001f, 18.200001f, 25.400002f);
        path_0.cubicTo(18.200001f, 25.500002f, 18.100000f, 25.600002f, 18.000000f, 25.600002f);
        path_0.cubicTo(17.900000f, 25.600002f, 17.799999f, 25.500002f, 17.799999f, 25.400002f);
        path_0.cubicTo(17.799999f, 25.300001f, 17.900000f, 25.200001f, 18.000000f, 25.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 25.800001f);
        path_0.cubicTo(18.100000f, 25.800001f, 18.200001f, 25.900002f, 18.200001f, 26.000002f);
        path_0.cubicTo(18.200001f, 26.100002f, 18.100000f, 26.200003f, 18.000000f, 26.200003f);
        path_0.cubicTo(17.900000f, 26.200003f, 17.799999f, 26.100002f, 17.799999f, 26.000002f);
        path_0.cubicTo(17.800001f, 25.900000f, 17.900000f, 25.800001f, 18.000000f, 25.800001f);
        path_0.close();
        path_0.moveTo(18.000000f, 26.500000f);
        path_0.cubicTo(18.100000f, 26.500000f, 18.200001f, 26.600000f, 18.200001f, 26.700001f);
        path_0.cubicTo(18.200001f, 26.800001f, 18.100000f, 26.900002f, 18.000000f, 26.900002f);
        path_0.cubicTo(17.900000f, 26.900002f, 17.799999f, 26.800001f, 17.799999f, 26.700001f);
        path_0.cubicTo(17.799999f, 26.600000f, 17.900000f, 26.500000f, 18.000000f, 26.500000f);
        path_0.close();
        path_0.moveTo(18.000000f, 27.200001f);
        path_0.cubicTo(18.100000f, 27.200001f, 18.200001f, 27.300001f, 18.200001f, 27.400002f);
        path_0.cubicTo(18.200001f, 27.500002f, 18.100000f, 27.600002f, 18.000000f, 27.600002f);
        path_0.cubicTo(17.900000f, 27.600002f, 17.799999f, 27.500002f, 17.799999f, 27.400002f);
        path_0.cubicTo(17.799999f, 27.300001f, 17.900000f, 27.200001f, 18.000000f, 27.200001f);
        path_0.close();
        path_0.moveTo(18.000000f, 27.800001f);
        path_0.cubicTo(18.100000f, 27.800001f, 18.200001f, 27.900002f, 18.200001f, 28.000002f);
        path_0.cubicTo(18.200001f, 28.100002f, 18.100000f, 28.200003f, 18.000000f, 28.200003f);
        path_0.cubicTo(17.900000f, 28.200003f, 17.799999f, 28.100002f, 17.799999f, 28.000002f);
        path_0.cubicTo(17.799999f, 27.900002f, 17.900000f, 27.800001f, 18.000000f, 27.800001f);
        path_0.close();
        path_0.moveTo(18.000000f, 28.500000f);
        path_0.cubicTo(18.100000f, 28.500000f, 18.200001f, 28.600000f, 18.200001f, 28.700001f);
        path_0.cubicTo(18.200001f, 28.800001f, 18.100000f, 28.900002f, 18.000000f, 28.900002f);
        path_0.cubicTo(17.900000f, 28.900002f, 17.799999f, 28.800001f, 17.799999f, 28.700001f);
        path_0.cubicTo(17.799999f, 28.600000f, 17.900000f, 28.500000f, 18.000000f, 28.500000f);
        path_0.close();
        path_0.moveTo(17.300001f, 12.600000f);
        path_0.cubicTo(17.400002f, 12.600000f, 17.500002f, 12.700001f, 17.500002f, 12.800000f);
        path_0.cubicTo(17.500002f, 12.900000f, 17.400000f, 13.000000f, 17.300001f, 13.000000f);
        path_0.cubicTo(17.200003f, 13.000000f, 17.100000f, 12.900000f, 17.100000f, 12.800000f);
        path_0.cubicTo(17.100000f, 12.700001f, 17.200001f, 12.600000f, 17.300001f, 12.600000f);
        path_0.close();
        path_0.moveTo(17.300001f, 13.300000f);
        path_0.cubicTo(17.400002f, 13.300000f, 17.500002f, 13.400001f, 17.500002f, 13.500000f);
        path_0.cubicTo(17.500002f, 13.600000f, 17.400002f, 13.700000f, 17.300001f, 13.700000f);
        path_0.cubicTo(17.200001f, 13.700000f, 17.100000f, 13.599999f, 17.100000f, 13.500000f);
        path_0.cubicTo(17.100000f, 13.400001f, 17.200001f, 13.300000f, 17.300001f, 13.300000f);
        path_0.close();
        path_0.moveTo(17.300001f, 13.900001f);
        path_0.cubicTo(17.400002f, 13.900001f, 17.500002f, 14.000001f, 17.500002f, 14.100000f);
        path_0.cubicTo(17.500002f, 14.200000f, 17.400002f, 14.300000f, 17.300001f, 14.300000f);
        path_0.cubicTo(17.200001f, 14.300000f, 17.100000f, 14.200000f, 17.100000f, 14.100000f);
        path_0.cubicTo(17.100000f, 14.000001f, 17.200001f, 13.900001f, 17.300001f, 13.900001f);
        path_0.close();
        path_0.moveTo(17.300001f, 14.600000f);
        path_0.cubicTo(17.400002f, 14.600000f, 17.500002f, 14.700001f, 17.500002f, 14.800000f);
        path_0.cubicTo(17.500002f, 14.900001f, 17.400002f, 15.000000f, 17.300001f, 15.000000f);
        path_0.cubicTo(17.200001f, 15.000000f, 17.100000f, 14.900000f, 17.100000f, 14.800000f);
        path_0.cubicTo(17.100000f, 14.700001f, 17.200001f, 14.600000f, 17.300001f, 14.600000f);
        path_0.close();
        path_0.moveTo(17.300001f, 15.200000f);
        path_0.cubicTo(17.400002f, 15.200000f, 17.500002f, 15.300000f, 17.500002f, 15.400000f);
        path_0.cubicTo(17.500002f, 15.500000f, 17.400002f, 15.599999f, 17.300001f, 15.599999f);
        path_0.cubicTo(17.200001f, 15.599999f, 17.100000f, 15.499999f, 17.100000f, 15.400000f);
        path_0.cubicTo(17.100000f, 15.300000f, 17.200001f, 15.200000f, 17.300001f, 15.200000f);
        path_0.close();
        path_0.moveTo(17.300001f, 15.900001f);
        path_0.cubicTo(17.400002f, 15.900001f, 17.500002f, 16.000000f, 17.500002f, 16.100000f);
        path_0.cubicTo(17.500002f, 16.200001f, 17.400002f, 16.300001f, 17.300001f, 16.300001f);
        path_0.cubicTo(17.200001f, 16.300001f, 17.100000f, 16.200001f, 17.100000f, 16.100000f);
        path_0.cubicTo(17.100000f, 16.000000f, 17.200001f, 15.900001f, 17.300001f, 15.900001f);
        path_0.close();
        path_0.moveTo(17.300001f, 16.600000f);
        path_0.cubicTo(17.400002f, 16.600000f, 17.500002f, 16.700001f, 17.500002f, 16.800001f);
        path_0.cubicTo(17.500002f, 16.900002f, 17.400002f, 17.000002f, 17.300001f, 17.000002f);
        path_0.cubicTo(17.200001f, 17.000002f, 17.100000f, 16.900002f, 17.100000f, 16.800001f);
        path_0.cubicTo(17.100000f, 16.700001f, 17.200001f, 16.600000f, 17.300001f, 16.600000f);
        path_0.close();
        path_0.moveTo(17.300001f, 17.200001f);
        path_0.cubicTo(17.400002f, 17.200001f, 17.500002f, 17.300001f, 17.500002f, 17.400002f);
        path_0.cubicTo(17.500002f, 17.500002f, 17.400002f, 17.600002f, 17.300001f, 17.600002f);
        path_0.cubicTo(17.200001f, 17.600002f, 17.100000f, 17.500002f, 17.100000f, 17.400002f);
        path_0.cubicTo(17.100000f, 17.300001f, 17.200001f, 17.200001f, 17.300001f, 17.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 17.900000f);
        path_0.cubicTo(17.400002f, 17.900000f, 17.500002f, 18.000000f, 17.500002f, 18.100000f);
        path_0.cubicTo(17.500002f, 18.200001f, 17.400002f, 18.300001f, 17.300001f, 18.300001f);
        path_0.cubicTo(17.200001f, 18.300001f, 17.100000f, 18.200001f, 17.100000f, 18.100000f);
        path_0.cubicTo(17.100000f, 18.000000f, 17.200001f, 17.900000f, 17.300001f, 17.900000f);
        path_0.close();
        path_0.moveTo(17.300001f, 18.600000f);
        path_0.cubicTo(17.400002f, 18.600000f, 17.500002f, 18.700001f, 17.500002f, 18.800001f);
        path_0.cubicTo(17.500002f, 18.900002f, 17.400000f, 19.000000f, 17.300001f, 19.000000f);
        path_0.cubicTo(17.200003f, 19.000000f, 17.100000f, 18.900000f, 17.100000f, 18.799999f);
        path_0.cubicTo(17.100000f, 18.699999f, 17.200001f, 18.600000f, 17.300001f, 18.600000f);
        path_0.close();
        path_0.moveTo(17.300001f, 19.200001f);
        path_0.cubicTo(17.400002f, 19.200001f, 17.500002f, 19.300001f, 17.500002f, 19.400002f);
        path_0.cubicTo(17.500002f, 19.500002f, 17.400002f, 19.600002f, 17.300001f, 19.600002f);
        path_0.cubicTo(17.200001f, 19.600002f, 17.100000f, 19.500002f, 17.100000f, 19.400002f);
        path_0.cubicTo(17.100000f, 19.300001f, 17.200001f, 19.200001f, 17.300001f, 19.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 19.900000f);
        path_0.cubicTo(17.400002f, 19.900000f, 17.500002f, 20.000000f, 17.500002f, 20.100000f);
        path_0.cubicTo(17.500002f, 20.200001f, 17.400002f, 20.300001f, 17.300001f, 20.300001f);
        path_0.cubicTo(17.200001f, 20.300001f, 17.100000f, 20.200001f, 17.100000f, 20.100000f);
        path_0.cubicTo(17.100000f, 20.000000f, 17.200001f, 19.900000f, 17.300001f, 19.900000f);
        path_0.close();
        path_0.moveTo(17.300001f, 20.500000f);
        path_0.cubicTo(17.400002f, 20.500000f, 17.500002f, 20.600000f, 17.500002f, 20.700001f);
        path_0.cubicTo(17.500002f, 20.800001f, 17.400000f, 21.000000f, 17.300001f, 21.000000f);
        path_0.cubicTo(17.200003f, 21.000000f, 17.100000f, 20.900000f, 17.100000f, 20.799999f);
        path_0.cubicTo(17.100000f, 20.699999f, 17.200001f, 20.500000f, 17.300001f, 20.500000f);
        path_0.close();
        path_0.moveTo(17.300001f, 21.200001f);
        path_0.cubicTo(17.400002f, 21.200001f, 17.500002f, 21.300001f, 17.500002f, 21.400002f);
        path_0.cubicTo(17.500002f, 21.500002f, 17.400002f, 21.600002f, 17.300001f, 21.600002f);
        path_0.cubicTo(17.200001f, 21.600002f, 17.100000f, 21.500002f, 17.100000f, 21.400002f);
        path_0.cubicTo(17.100000f, 21.300001f, 17.200001f, 21.200001f, 17.300001f, 21.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 21.900000f);
        path_0.cubicTo(17.400002f, 21.900000f, 17.500002f, 22.000000f, 17.500002f, 22.100000f);
        path_0.cubicTo(17.500002f, 22.200001f, 17.400002f, 22.300001f, 17.300001f, 22.300001f);
        path_0.cubicTo(17.200001f, 22.300001f, 17.100000f, 22.200001f, 17.100000f, 22.100000f);
        path_0.cubicTo(17.100000f, 22.000000f, 17.200001f, 21.900000f, 17.300001f, 21.900000f);
        path_0.close();
        path_0.moveTo(17.300001f, 22.500000f);
        path_0.cubicTo(17.400002f, 22.500000f, 17.500002f, 22.600000f, 17.500002f, 22.700001f);
        path_0.cubicTo(17.500002f, 22.800001f, 17.400002f, 22.900002f, 17.300001f, 22.900002f);
        path_0.cubicTo(17.200001f, 22.900002f, 17.100000f, 22.800001f, 17.100000f, 22.700001f);
        path_0.cubicTo(17.100000f, 22.600000f, 17.200001f, 22.500000f, 17.300001f, 22.500000f);
        path_0.close();
        path_0.moveTo(17.300001f, 23.200001f);
        path_0.cubicTo(17.400002f, 23.200001f, 17.500002f, 23.300001f, 17.500002f, 23.400002f);
        path_0.cubicTo(17.500002f, 23.500002f, 17.400002f, 23.600002f, 17.300001f, 23.600002f);
        path_0.cubicTo(17.200001f, 23.600002f, 17.100000f, 23.500002f, 17.100000f, 23.400002f);
        path_0.cubicTo(17.100000f, 23.300001f, 17.200001f, 23.200001f, 17.300001f, 23.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 23.800001f);
        path_0.cubicTo(17.400002f, 23.800001f, 17.500002f, 23.900002f, 17.500002f, 24.000002f);
        path_0.cubicTo(17.500002f, 24.100002f, 17.400002f, 24.200003f, 17.300001f, 24.200003f);
        path_0.cubicTo(17.200001f, 24.200003f, 17.100000f, 24.100002f, 17.100000f, 24.000002f);
        path_0.cubicTo(17.100000f, 23.900002f, 17.200001f, 23.800001f, 17.300001f, 23.800001f);
        path_0.close();
        path_0.moveTo(17.300001f, 24.500000f);
        path_0.cubicTo(17.400002f, 24.500000f, 17.500002f, 24.600000f, 17.500002f, 24.700001f);
        path_0.cubicTo(17.500002f, 24.800001f, 17.400002f, 24.900002f, 17.300001f, 24.900002f);
        path_0.cubicTo(17.200001f, 24.900002f, 17.100000f, 24.800001f, 17.100000f, 24.700001f);
        path_0.cubicTo(17.100000f, 24.600000f, 17.200001f, 24.500000f, 17.300001f, 24.500000f);
        path_0.close();
        path_0.moveTo(17.300001f, 25.200001f);
        path_0.cubicTo(17.400002f, 25.200001f, 17.500002f, 25.300001f, 17.500002f, 25.400002f);
        path_0.cubicTo(17.500002f, 25.500002f, 17.400002f, 25.600002f, 17.300001f, 25.600002f);
        path_0.cubicTo(17.200001f, 25.600002f, 17.100000f, 25.500002f, 17.100000f, 25.400002f);
        path_0.cubicTo(17.100000f, 25.300001f, 17.200001f, 25.200001f, 17.300001f, 25.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 25.800001f);
        path_0.cubicTo(17.400002f, 25.800001f, 17.500002f, 25.900002f, 17.500002f, 26.000002f);
        path_0.cubicTo(17.500002f, 26.100002f, 17.400002f, 26.200003f, 17.300001f, 26.200003f);
        path_0.cubicTo(17.200001f, 26.200003f, 17.100000f, 26.100002f, 17.100000f, 26.000002f);
        path_0.cubicTo(17.100000f, 25.900000f, 17.200001f, 25.800001f, 17.300001f, 25.800001f);
        path_0.close();
        path_0.moveTo(17.300001f, 26.500000f);
        path_0.cubicTo(17.400002f, 26.500000f, 17.500002f, 26.600000f, 17.500002f, 26.700001f);
        path_0.cubicTo(17.500002f, 26.800001f, 17.400002f, 26.900002f, 17.300001f, 26.900002f);
        path_0.cubicTo(17.200001f, 26.900002f, 17.100000f, 26.800001f, 17.100000f, 26.700001f);
        path_0.cubicTo(17.100000f, 26.600000f, 17.200001f, 26.500000f, 17.300001f, 26.500000f);
        path_0.close();
        path_0.moveTo(17.300001f, 27.200001f);
        path_0.cubicTo(17.400002f, 27.200001f, 17.500002f, 27.300001f, 17.500002f, 27.400002f);
        path_0.cubicTo(17.500002f, 27.500002f, 17.400002f, 27.600002f, 17.300001f, 27.600002f);
        path_0.cubicTo(17.200001f, 27.600002f, 17.100000f, 27.500002f, 17.100000f, 27.400002f);
        path_0.cubicTo(17.100000f, 27.300001f, 17.200001f, 27.200001f, 17.300001f, 27.200001f);
        path_0.close();
        path_0.moveTo(17.300001f, 27.800001f);
        path_0.cubicTo(17.400002f, 27.800001f, 17.500002f, 27.900002f, 17.500002f, 28.000002f);
        path_0.cubicTo(17.500002f, 28.100002f, 17.400002f, 28.200003f, 17.300001f, 28.200003f);
        path_0.cubicTo(17.200001f, 28.200003f, 17.100000f, 28.100002f, 17.100000f, 28.000002f);
        path_0.cubicTo(17.100000f, 27.900002f, 17.200001f, 27.800001f, 17.300001f, 27.800001f);
        path_0.close();
        path_0.moveTo(17.300001f, 28.500000f);
        path_0.cubicTo(17.400002f, 28.500000f, 17.500002f, 28.600000f, 17.500002f, 28.700001f);
        path_0.cubicTo(17.500002f, 28.800001f, 17.400002f, 28.900002f, 17.300001f, 28.900002f);
        path_0.cubicTo(17.200001f, 28.900002f, 17.100000f, 28.800001f, 17.100000f, 28.700001f);
        path_0.cubicTo(17.100000f, 28.600000f, 17.200001f, 28.500000f, 17.300001f, 28.500000f);
        path_0.close();
        path_0.moveTo(16.600000f, 12.600000f);
        path_0.cubicTo(16.700001f, 12.600000f, 16.800001f, 12.700001f, 16.800001f, 12.800000f);
        path_0.cubicTo(16.800001f, 12.900000f, 16.800001f, 13.000000f, 16.600000f, 13.000000f);
        path_0.cubicTo(16.400000f, 13.000000f, 16.400000f, 12.900000f, 16.400000f, 12.800000f);
        path_0.cubicTo(16.400000f, 12.700001f, 16.500000f, 12.600000f, 16.600000f, 12.600000f);
        path_0.close();
        path_0.moveTo(16.600000f, 13.300000f);
        path_0.cubicTo(16.700001f, 13.300000f, 16.800001f, 13.400001f, 16.800001f, 13.500000f);
        path_0.cubicTo(16.800001f, 13.600000f, 16.700001f, 13.700000f, 16.600000f, 13.700000f);
        path_0.cubicTo(16.500000f, 13.700000f, 16.400000f, 13.599999f, 16.400000f, 13.500000f);
        path_0.cubicTo(16.400000f, 13.400001f, 16.500000f, 13.300000f, 16.600000f, 13.300000f);
        path_0.close();
        path_0.moveTo(16.600000f, 13.900001f);
        path_0.cubicTo(16.700001f, 13.900001f, 16.800001f, 14.000001f, 16.800001f, 14.100000f);
        path_0.cubicTo(16.800001f, 14.200000f, 16.700001f, 14.300000f, 16.600000f, 14.300000f);
        path_0.cubicTo(16.500000f, 14.300000f, 16.400000f, 14.200000f, 16.400000f, 14.100000f);
        path_0.cubicTo(16.400000f, 14.000001f, 16.500000f, 13.900001f, 16.600000f, 13.900001f);
        path_0.close();
        path_0.moveTo(16.600000f, 14.600000f);
        path_0.cubicTo(16.700001f, 14.600000f, 16.800001f, 14.700001f, 16.800001f, 14.800000f);
        path_0.cubicTo(16.800001f, 14.900001f, 16.700001f, 15.000000f, 16.600000f, 15.000000f);
        path_0.cubicTo(16.500000f, 15.000000f, 16.400000f, 14.900000f, 16.400000f, 14.800000f);
        path_0.cubicTo(16.400000f, 14.700000f, 16.500000f, 14.600000f, 16.600000f, 14.600000f);
        path_0.close();
        path_0.moveTo(16.600000f, 15.200000f);
        path_0.cubicTo(16.700001f, 15.200000f, 16.800001f, 15.300000f, 16.800001f, 15.400000f);
        path_0.cubicTo(16.800001f, 15.500000f, 16.700001f, 15.599999f, 16.600000f, 15.599999f);
        path_0.cubicTo(16.500000f, 15.599999f, 16.400000f, 15.499999f, 16.400000f, 15.400000f);
        path_0.cubicTo(16.400000f, 15.300000f, 16.500000f, 15.200000f, 16.600000f, 15.200000f);
        path_0.close();
        path_0.moveTo(16.600000f, 15.900001f);
        path_0.cubicTo(16.700001f, 15.900001f, 16.800001f, 16.000000f, 16.800001f, 16.100000f);
        path_0.cubicTo(16.800001f, 16.200001f, 16.700001f, 16.300001f, 16.600000f, 16.300001f);
        path_0.cubicTo(16.500000f, 16.300001f, 16.400000f, 16.200001f, 16.400000f, 16.100000f);
        path_0.cubicTo(16.400000f, 16.000000f, 16.500000f, 15.900001f, 16.600000f, 15.900001f);
        path_0.close();
        path_0.moveTo(16.600000f, 16.600000f);
        path_0.cubicTo(16.700001f, 16.600000f, 16.800001f, 16.700001f, 16.800001f, 16.800001f);
        path_0.cubicTo(16.800001f, 16.900002f, 16.700001f, 17.000002f, 16.600000f, 17.000002f);
        path_0.cubicTo(16.500000f, 17.000002f, 16.400000f, 16.900002f, 16.400000f, 16.800001f);
        path_0.cubicTo(16.400000f, 16.700001f, 16.500000f, 16.600000f, 16.600000f, 16.600000f);
        path_0.close();
        path_0.moveTo(16.600000f, 17.200001f);
        path_0.cubicTo(16.700001f, 17.200001f, 16.800001f, 17.300001f, 16.800001f, 17.400002f);
        path_0.cubicTo(16.800001f, 17.500002f, 16.700001f, 17.600002f, 16.600000f, 17.600002f);
        path_0.cubicTo(16.500000f, 17.600002f, 16.400000f, 17.500002f, 16.400000f, 17.400002f);
        path_0.cubicTo(16.400000f, 17.300001f, 16.500000f, 17.200001f, 16.600000f, 17.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 17.900000f);
        path_0.cubicTo(16.700001f, 17.900000f, 16.800001f, 18.000000f, 16.800001f, 18.100000f);
        path_0.cubicTo(16.800001f, 18.200001f, 16.700001f, 18.300001f, 16.600000f, 18.300001f);
        path_0.cubicTo(16.500000f, 18.300001f, 16.400000f, 18.200001f, 16.400000f, 18.100000f);
        path_0.cubicTo(16.400000f, 18.000000f, 16.500000f, 17.900000f, 16.600000f, 17.900000f);
        path_0.close();
        path_0.moveTo(16.600000f, 18.600000f);
        path_0.cubicTo(16.700001f, 18.600000f, 16.800001f, 18.700001f, 16.800001f, 18.800001f);
        path_0.cubicTo(16.800001f, 18.900002f, 16.800001f, 19.000000f, 16.600000f, 19.000000f);
        path_0.cubicTo(16.400000f, 19.000000f, 16.400000f, 18.900000f, 16.400000f, 18.799999f);
        path_0.cubicTo(16.400000f, 18.699999f, 16.500000f, 18.600000f, 16.600000f, 18.600000f);
        path_0.close();
        path_0.moveTo(16.600000f, 19.200001f);
        path_0.cubicTo(16.700001f, 19.200001f, 16.800001f, 19.300001f, 16.800001f, 19.400002f);
        path_0.cubicTo(16.800001f, 19.500002f, 16.700001f, 19.600002f, 16.600000f, 19.600002f);
        path_0.cubicTo(16.500000f, 19.600002f, 16.400000f, 19.500002f, 16.400000f, 19.400002f);
        path_0.cubicTo(16.400000f, 19.300001f, 16.500000f, 19.200001f, 16.600000f, 19.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 19.900000f);
        path_0.cubicTo(16.700001f, 19.900000f, 16.800001f, 20.000000f, 16.800001f, 20.100000f);
        path_0.cubicTo(16.800001f, 20.200001f, 16.700001f, 20.300001f, 16.600000f, 20.300001f);
        path_0.cubicTo(16.500000f, 20.300001f, 16.400000f, 20.200001f, 16.400000f, 20.100000f);
        path_0.cubicTo(16.400000f, 20.000000f, 16.500000f, 19.900000f, 16.600000f, 19.900000f);
        path_0.close();
        path_0.moveTo(16.600000f, 20.500000f);
        path_0.cubicTo(16.700001f, 20.500000f, 16.800001f, 20.600000f, 16.800001f, 20.700001f);
        path_0.cubicTo(16.800001f, 20.800001f, 16.800001f, 21.000000f, 16.600000f, 21.000000f);
        path_0.cubicTo(16.400000f, 21.000000f, 16.400000f, 20.900000f, 16.400000f, 20.799999f);
        path_0.cubicTo(16.400000f, 20.699999f, 16.500000f, 20.500000f, 16.600000f, 20.500000f);
        path_0.close();
        path_0.moveTo(16.600000f, 21.200001f);
        path_0.cubicTo(16.700001f, 21.200001f, 16.800001f, 21.300001f, 16.800001f, 21.400002f);
        path_0.cubicTo(16.800001f, 21.500002f, 16.700001f, 21.600002f, 16.600000f, 21.600002f);
        path_0.cubicTo(16.500000f, 21.600002f, 16.400000f, 21.500002f, 16.400000f, 21.400002f);
        path_0.cubicTo(16.400000f, 21.300001f, 16.500000f, 21.200001f, 16.600000f, 21.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 21.900000f);
        path_0.cubicTo(16.700001f, 21.900000f, 16.800001f, 22.000000f, 16.800001f, 22.100000f);
        path_0.cubicTo(16.800001f, 22.200001f, 16.700001f, 22.300001f, 16.600000f, 22.300001f);
        path_0.cubicTo(16.500000f, 22.300001f, 16.400000f, 22.200001f, 16.400000f, 22.100000f);
        path_0.cubicTo(16.400000f, 22.000000f, 16.500000f, 21.900000f, 16.600000f, 21.900000f);
        path_0.close();
        path_0.moveTo(16.600000f, 22.500000f);
        path_0.cubicTo(16.700001f, 22.500000f, 16.800001f, 22.600000f, 16.800001f, 22.700001f);
        path_0.cubicTo(16.800001f, 22.800001f, 16.700001f, 22.900002f, 16.600000f, 22.900002f);
        path_0.cubicTo(16.500000f, 22.900002f, 16.400000f, 22.800001f, 16.400000f, 22.700001f);
        path_0.cubicTo(16.400000f, 22.600000f, 16.500000f, 22.500000f, 16.600000f, 22.500000f);
        path_0.close();
        path_0.moveTo(16.600000f, 23.200001f);
        path_0.cubicTo(16.700001f, 23.200001f, 16.800001f, 23.300001f, 16.800001f, 23.400002f);
        path_0.cubicTo(16.800001f, 23.500002f, 16.700001f, 23.600002f, 16.600000f, 23.600002f);
        path_0.cubicTo(16.500000f, 23.600002f, 16.400000f, 23.500002f, 16.400000f, 23.400002f);
        path_0.cubicTo(16.400000f, 23.300001f, 16.500000f, 23.200001f, 16.600000f, 23.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 23.800001f);
        path_0.cubicTo(16.700001f, 23.800001f, 16.800001f, 23.900002f, 16.800001f, 24.000002f);
        path_0.cubicTo(16.800001f, 24.100002f, 16.700001f, 24.200003f, 16.600000f, 24.200003f);
        path_0.cubicTo(16.500000f, 24.200003f, 16.400000f, 24.100002f, 16.400000f, 24.000002f);
        path_0.cubicTo(16.400000f, 23.900002f, 16.500000f, 23.800001f, 16.600000f, 23.800001f);
        path_0.close();
        path_0.moveTo(16.600000f, 24.500000f);
        path_0.cubicTo(16.700001f, 24.500000f, 16.800001f, 24.600000f, 16.800001f, 24.700001f);
        path_0.cubicTo(16.800001f, 24.800001f, 16.700001f, 24.900002f, 16.600000f, 24.900002f);
        path_0.cubicTo(16.500000f, 24.900002f, 16.400000f, 24.800001f, 16.400000f, 24.700001f);
        path_0.cubicTo(16.400000f, 24.600000f, 16.500000f, 24.500000f, 16.600000f, 24.500000f);
        path_0.close();
        path_0.moveTo(16.600000f, 25.200001f);
        path_0.cubicTo(16.700001f, 25.200001f, 16.800001f, 25.300001f, 16.800001f, 25.400002f);
        path_0.cubicTo(16.800001f, 25.500002f, 16.700001f, 25.600002f, 16.600000f, 25.600002f);
        path_0.cubicTo(16.500000f, 25.600002f, 16.400000f, 25.500002f, 16.400000f, 25.400002f);
        path_0.cubicTo(16.400000f, 25.300001f, 16.500000f, 25.200001f, 16.600000f, 25.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 25.800001f);
        path_0.cubicTo(16.700001f, 25.800001f, 16.800001f, 25.900002f, 16.800001f, 26.000002f);
        path_0.cubicTo(16.800001f, 26.100002f, 16.700001f, 26.200003f, 16.600000f, 26.200003f);
        path_0.cubicTo(16.500000f, 26.200003f, 16.400000f, 26.100002f, 16.400000f, 26.000002f);
        path_0.cubicTo(16.400000f, 25.900000f, 16.500000f, 25.800001f, 16.600000f, 25.800001f);
        path_0.close();
        path_0.moveTo(16.600000f, 26.500000f);
        path_0.cubicTo(16.700001f, 26.500000f, 16.800001f, 26.600000f, 16.800001f, 26.700001f);
        path_0.cubicTo(16.800001f, 26.800001f, 16.700001f, 26.900002f, 16.600000f, 26.900002f);
        path_0.cubicTo(16.500000f, 26.900002f, 16.400000f, 26.800001f, 16.400000f, 26.700001f);
        path_0.cubicTo(16.400000f, 26.600000f, 16.500000f, 26.500000f, 16.600000f, 26.500000f);
        path_0.close();
        path_0.moveTo(16.600000f, 27.200001f);
        path_0.cubicTo(16.700001f, 27.200001f, 16.800001f, 27.300001f, 16.800001f, 27.400002f);
        path_0.cubicTo(16.800001f, 27.500002f, 16.700001f, 27.600002f, 16.600000f, 27.600002f);
        path_0.cubicTo(16.500000f, 27.600002f, 16.400000f, 27.500002f, 16.400000f, 27.400002f);
        path_0.cubicTo(16.400000f, 27.300001f, 16.500000f, 27.200001f, 16.600000f, 27.200001f);
        path_0.close();
        path_0.moveTo(16.600000f, 27.800001f);
        path_0.cubicTo(16.700001f, 27.800001f, 16.800001f, 27.900002f, 16.800001f, 28.000002f);
        path_0.cubicTo(16.800001f, 28.100002f, 16.700001f, 28.200003f, 16.600000f, 28.200003f);
        path_0.cubicTo(16.500000f, 28.200003f, 16.400000f, 28.100002f, 16.400000f, 28.000002f);
        path_0.cubicTo(16.400000f, 27.900000f, 16.500000f, 27.800001f, 16.600000f, 27.800001f);
        path_0.close();
        path_0.moveTo(16.600000f, 28.500000f);
        path_0.cubicTo(16.700001f, 28.500000f, 16.800001f, 28.600000f, 16.800001f, 28.700001f);
        path_0.cubicTo(16.800001f, 28.800001f, 16.700001f, 28.900002f, 16.600000f, 28.900002f);
        path_0.cubicTo(16.500000f, 28.900002f, 16.400000f, 28.800001f, 16.400000f, 28.700001f);
        path_0.cubicTo(16.400000f, 28.600000f, 16.500000f, 28.500000f, 16.600000f, 28.500000f);
        path_0.close();
        path_0.moveTo(16.000000f, 12.600000f);
        path_0.cubicTo(16.100000f, 12.600000f, 16.200001f, 12.700001f, 16.200001f, 12.800000f);
        path_0.cubicTo(16.200001f, 12.900000f, 16.100000f, 13.000000f, 16.000000f, 13.000000f);
        path_0.cubicTo(15.900000f, 13.000000f, 15.800000f, 12.900000f, 15.800000f, 12.800000f);
        path_0.cubicTo(15.800000f, 12.700001f, 15.900001f, 12.600000f, 16.000000f, 12.600000f);
        path_0.close();
        path_0.moveTo(16.000000f, 13.300000f);
        path_0.cubicTo(16.100000f, 13.300000f, 16.200001f, 13.400001f, 16.200001f, 13.500000f);
        path_0.cubicTo(16.200001f, 13.600000f, 16.100000f, 13.700000f, 16.000000f, 13.700000f);
        path_0.cubicTo(15.900000f, 13.700000f, 15.800000f, 13.599999f, 15.800000f, 13.500000f);
        path_0.cubicTo(15.800000f, 13.400001f, 15.900001f, 13.300000f, 16.000000f, 13.300000f);
        path_0.close();
        path_0.moveTo(16.000000f, 13.900001f);
        path_0.cubicTo(16.100000f, 13.900001f, 16.200001f, 14.000001f, 16.200001f, 14.100000f);
        path_0.cubicTo(16.200001f, 14.200000f, 16.100000f, 14.300000f, 16.000000f, 14.300000f);
        path_0.cubicTo(15.900000f, 14.300000f, 15.800000f, 14.200000f, 15.800000f, 14.100000f);
        path_0.cubicTo(15.800000f, 14.000001f, 15.900001f, 13.900001f, 16.000000f, 13.900001f);
        path_0.close();
        path_0.moveTo(16.000000f, 14.600000f);
        path_0.cubicTo(16.100000f, 14.600000f, 16.200001f, 14.700001f, 16.200001f, 14.800000f);
        path_0.cubicTo(16.200001f, 14.900001f, 16.100000f, 15.000000f, 16.000000f, 15.000000f);
        path_0.cubicTo(15.900000f, 15.000000f, 15.800000f, 14.900000f, 15.800000f, 14.800000f);
        path_0.cubicTo(15.800000f, 14.700000f, 15.900001f, 14.600000f, 16.000000f, 14.600000f);
        path_0.close();
        path_0.moveTo(16.000000f, 15.200000f);
        path_0.cubicTo(16.100000f, 15.200000f, 16.200001f, 15.300000f, 16.200001f, 15.400000f);
        path_0.cubicTo(16.200001f, 15.500000f, 16.100000f, 15.599999f, 16.000000f, 15.599999f);
        path_0.cubicTo(15.900000f, 15.599999f, 15.800000f, 15.499999f, 15.800000f, 15.400000f);
        path_0.cubicTo(15.800000f, 15.300000f, 15.900001f, 15.200000f, 16.000000f, 15.200000f);
        path_0.close();
        path_0.moveTo(16.000000f, 15.900001f);
        path_0.cubicTo(16.100000f, 15.900001f, 16.200001f, 16.000000f, 16.200001f, 16.100000f);
        path_0.cubicTo(16.200001f, 16.200001f, 16.100000f, 16.300001f, 16.000000f, 16.300001f);
        path_0.cubicTo(15.900000f, 16.300001f, 15.800000f, 16.200001f, 15.800000f, 16.100000f);
        path_0.cubicTo(15.800000f, 16.000000f, 15.900001f, 15.900001f, 16.000000f, 15.900001f);
        path_0.close();
        path_0.moveTo(16.000000f, 16.600000f);
        path_0.cubicTo(16.100000f, 16.600000f, 16.200001f, 16.700001f, 16.200001f, 16.800001f);
        path_0.cubicTo(16.200001f, 16.900002f, 16.100000f, 17.000002f, 16.000000f, 17.000002f);
        path_0.cubicTo(15.900000f, 17.000002f, 15.800000f, 16.900002f, 15.800000f, 16.800001f);
        path_0.cubicTo(15.800000f, 16.700001f, 15.900001f, 16.600000f, 16.000000f, 16.600000f);
        path_0.close();
        path_0.moveTo(16.000000f, 17.200001f);
        path_0.cubicTo(16.100000f, 17.200001f, 16.200001f, 17.300001f, 16.200001f, 17.400002f);
        path_0.cubicTo(16.200001f, 17.500002f, 16.100000f, 17.600002f, 16.000000f, 17.600002f);
        path_0.cubicTo(15.900000f, 17.600002f, 15.800000f, 17.500002f, 15.800000f, 17.400002f);
        path_0.cubicTo(15.800000f, 17.300001f, 15.900001f, 17.200001f, 16.000000f, 17.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 17.900000f);
        path_0.cubicTo(16.100000f, 17.900000f, 16.200001f, 18.000000f, 16.200001f, 18.100000f);
        path_0.cubicTo(16.200001f, 18.200001f, 16.100000f, 18.300001f, 16.000000f, 18.300001f);
        path_0.cubicTo(15.900000f, 18.300001f, 15.800000f, 18.200001f, 15.800000f, 18.100000f);
        path_0.cubicTo(15.800000f, 18.000000f, 15.900001f, 17.900000f, 16.000000f, 17.900000f);
        path_0.close();
        path_0.moveTo(16.000000f, 18.600000f);
        path_0.cubicTo(16.100000f, 18.600000f, 16.200001f, 18.700001f, 16.200001f, 18.800001f);
        path_0.cubicTo(16.200001f, 18.900002f, 16.100000f, 19.000000f, 16.000000f, 19.000000f);
        path_0.cubicTo(15.900000f, 19.000000f, 15.800000f, 18.900000f, 15.800000f, 18.799999f);
        path_0.cubicTo(15.800000f, 18.699999f, 15.900001f, 18.600000f, 16.000000f, 18.600000f);
        path_0.close();
        path_0.moveTo(16.000000f, 19.200001f);
        path_0.cubicTo(16.100000f, 19.200001f, 16.200001f, 19.300001f, 16.200001f, 19.400002f);
        path_0.cubicTo(16.200001f, 19.500002f, 16.100000f, 19.600002f, 16.000000f, 19.600002f);
        path_0.cubicTo(15.900000f, 19.600002f, 15.800000f, 19.500002f, 15.800000f, 19.400002f);
        path_0.cubicTo(15.800000f, 19.300001f, 15.900001f, 19.200001f, 16.000000f, 19.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 19.900000f);
        path_0.cubicTo(16.100000f, 19.900000f, 16.200001f, 20.000000f, 16.200001f, 20.100000f);
        path_0.cubicTo(16.200001f, 20.200001f, 16.100000f, 20.300001f, 16.000000f, 20.300001f);
        path_0.cubicTo(15.900000f, 20.300001f, 15.800000f, 20.200001f, 15.800000f, 20.100000f);
        path_0.cubicTo(15.800000f, 20.000000f, 15.900001f, 19.900000f, 16.000000f, 19.900000f);
        path_0.close();
        path_0.moveTo(16.000000f, 20.500000f);
        path_0.cubicTo(16.100000f, 20.500000f, 16.200001f, 20.600000f, 16.200001f, 20.700001f);
        path_0.cubicTo(16.200001f, 20.800001f, 16.100000f, 21.000000f, 16.000000f, 21.000000f);
        path_0.cubicTo(15.900000f, 21.000000f, 15.800000f, 20.900000f, 15.800000f, 20.799999f);
        path_0.cubicTo(15.800000f, 20.699999f, 15.900001f, 20.500000f, 16.000000f, 20.500000f);
        path_0.close();
        path_0.moveTo(16.000000f, 21.200001f);
        path_0.cubicTo(16.100000f, 21.200001f, 16.200001f, 21.300001f, 16.200001f, 21.400002f);
        path_0.cubicTo(16.200001f, 21.500002f, 16.100000f, 21.600002f, 16.000000f, 21.600002f);
        path_0.cubicTo(15.900000f, 21.600002f, 15.800000f, 21.500002f, 15.800000f, 21.400002f);
        path_0.cubicTo(15.800000f, 21.300001f, 15.900001f, 21.200001f, 16.000000f, 21.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 21.900000f);
        path_0.cubicTo(16.100000f, 21.900000f, 16.200001f, 22.000000f, 16.200001f, 22.100000f);
        path_0.cubicTo(16.200001f, 22.200001f, 16.100000f, 22.300001f, 16.000000f, 22.300001f);
        path_0.cubicTo(15.900000f, 22.300001f, 15.800000f, 22.200001f, 15.800000f, 22.100000f);
        path_0.cubicTo(15.800000f, 22.000000f, 15.900001f, 21.900000f, 16.000000f, 21.900000f);
        path_0.close();
        path_0.moveTo(16.000000f, 22.500000f);
        path_0.cubicTo(16.100000f, 22.500000f, 16.200001f, 22.600000f, 16.200001f, 22.700001f);
        path_0.cubicTo(16.200001f, 22.800001f, 16.100000f, 22.900002f, 16.000000f, 22.900002f);
        path_0.cubicTo(15.900000f, 22.900002f, 15.800000f, 22.800001f, 15.800000f, 22.700001f);
        path_0.cubicTo(15.800000f, 22.600000f, 15.900001f, 22.500000f, 16.000000f, 22.500000f);
        path_0.close();
        path_0.moveTo(16.000000f, 23.200001f);
        path_0.cubicTo(16.100000f, 23.200001f, 16.200001f, 23.300001f, 16.200001f, 23.400002f);
        path_0.cubicTo(16.200001f, 23.500002f, 16.100000f, 23.600002f, 16.000000f, 23.600002f);
        path_0.cubicTo(15.900000f, 23.600002f, 15.800000f, 23.500002f, 15.800000f, 23.400002f);
        path_0.cubicTo(15.800000f, 23.300001f, 15.900001f, 23.200001f, 16.000000f, 23.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 23.800001f);
        path_0.cubicTo(16.100000f, 23.800001f, 16.200001f, 23.900002f, 16.200001f, 24.000002f);
        path_0.cubicTo(16.200001f, 24.100002f, 16.100000f, 24.200003f, 16.000000f, 24.200003f);
        path_0.cubicTo(15.900000f, 24.200003f, 15.800000f, 24.100002f, 15.800000f, 24.000002f);
        path_0.cubicTo(15.800000f, 23.900002f, 15.900001f, 23.800001f, 16.000000f, 23.800001f);
        path_0.close();
        path_0.moveTo(16.000000f, 24.500000f);
        path_0.cubicTo(16.100000f, 24.500000f, 16.200001f, 24.600000f, 16.200001f, 24.700001f);
        path_0.cubicTo(16.200001f, 24.800001f, 16.100000f, 24.900002f, 16.000000f, 24.900002f);
        path_0.cubicTo(15.900000f, 24.900002f, 15.800000f, 24.800001f, 15.800000f, 24.700001f);
        path_0.cubicTo(15.800000f, 24.600000f, 15.900001f, 24.500000f, 16.000000f, 24.500000f);
        path_0.close();
        path_0.moveTo(16.000000f, 25.200001f);
        path_0.cubicTo(16.100000f, 25.200001f, 16.200001f, 25.300001f, 16.200001f, 25.400002f);
        path_0.cubicTo(16.200001f, 25.500002f, 16.100000f, 25.600002f, 16.000000f, 25.600002f);
        path_0.cubicTo(15.900000f, 25.600002f, 15.800000f, 25.500002f, 15.800000f, 25.400002f);
        path_0.cubicTo(15.800000f, 25.300001f, 15.900001f, 25.200001f, 16.000000f, 25.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 25.800001f);
        path_0.cubicTo(16.100000f, 25.800001f, 16.200001f, 25.900002f, 16.200001f, 26.000002f);
        path_0.cubicTo(16.200001f, 26.100002f, 16.100000f, 26.200003f, 16.000000f, 26.200003f);
        path_0.cubicTo(15.900000f, 26.200003f, 15.800000f, 26.100002f, 15.800000f, 26.000002f);
        path_0.cubicTo(15.800000f, 25.900000f, 15.900001f, 25.800001f, 16.000000f, 25.800001f);
        path_0.close();
        path_0.moveTo(16.000000f, 26.500000f);
        path_0.cubicTo(16.100000f, 26.500000f, 16.200001f, 26.600000f, 16.200001f, 26.700001f);
        path_0.cubicTo(16.200001f, 26.800001f, 16.100000f, 26.900002f, 16.000000f, 26.900002f);
        path_0.cubicTo(15.900000f, 26.900002f, 15.800000f, 26.800001f, 15.800000f, 26.700001f);
        path_0.cubicTo(15.800000f, 26.600000f, 15.900001f, 26.500000f, 16.000000f, 26.500000f);
        path_0.close();
        path_0.moveTo(16.000000f, 27.200001f);
        path_0.cubicTo(16.100000f, 27.200001f, 16.200001f, 27.300001f, 16.200001f, 27.400002f);
        path_0.cubicTo(16.200001f, 27.500002f, 16.100000f, 27.600002f, 16.000000f, 27.600002f);
        path_0.cubicTo(15.900000f, 27.600002f, 15.800000f, 27.500002f, 15.800000f, 27.400002f);
        path_0.cubicTo(15.800000f, 27.300001f, 15.900001f, 27.200001f, 16.000000f, 27.200001f);
        path_0.close();
        path_0.moveTo(16.000000f, 27.800001f);
        path_0.cubicTo(16.100000f, 27.800001f, 16.200001f, 27.900002f, 16.200001f, 28.000002f);
        path_0.cubicTo(16.200001f, 28.100002f, 16.100000f, 28.200003f, 16.000000f, 28.200003f);
        path_0.cubicTo(15.900000f, 28.200003f, 15.800000f, 28.100002f, 15.800000f, 28.000002f);
        path_0.cubicTo(15.800000f, 27.900000f, 15.900001f, 27.800001f, 16.000000f, 27.800001f);
        path_0.close();
        path_0.moveTo(16.000000f, 28.500000f);
        path_0.cubicTo(16.100000f, 28.500000f, 16.200001f, 28.600000f, 16.200001f, 28.700001f);
        path_0.cubicTo(16.200001f, 28.800001f, 16.100000f, 28.900002f, 16.000000f, 28.900002f);
        path_0.cubicTo(15.900000f, 28.900002f, 15.800000f, 28.800001f, 15.800000f, 28.700001f);
        path_0.cubicTo(15.800000f, 28.600000f, 15.900001f, 28.500000f, 16.000000f, 28.500000f);
        path_0.close();
        path_0.moveTo(15.300000f, 12.600000f);
        path_0.cubicTo(15.400001f, 12.600000f, 15.500000f, 12.700001f, 15.500000f, 12.800000f);
        path_0.cubicTo(15.500000f, 12.900000f, 15.400001f, 13.000000f, 15.300000f, 13.000000f);
        path_0.cubicTo(15.200000f, 13.000000f, 15.100000f, 12.900000f, 15.100000f, 12.800000f);
        path_0.cubicTo(15.100000f, 12.700001f, 15.200000f, 12.600000f, 15.300000f, 12.600000f);
        path_0.close();
        path_0.moveTo(15.300000f, 13.300000f);
        path_0.cubicTo(15.400001f, 13.300000f, 15.500000f, 13.400001f, 15.500000f, 13.500000f);
        path_0.cubicTo(15.500000f, 13.600000f, 15.400000f, 13.700000f, 15.300000f, 13.700000f);
        path_0.cubicTo(15.200000f, 13.700000f, 15.100000f, 13.599999f, 15.100000f, 13.500000f);
        path_0.cubicTo(15.100000f, 13.400001f, 15.200000f, 13.300000f, 15.300000f, 13.300000f);
        path_0.close();
        path_0.moveTo(15.300000f, 13.900001f);
        path_0.cubicTo(15.400001f, 13.900001f, 15.500000f, 14.000001f, 15.500000f, 14.100000f);
        path_0.cubicTo(15.500000f, 14.200000f, 15.400000f, 14.300000f, 15.300000f, 14.300000f);
        path_0.cubicTo(15.200000f, 14.300000f, 15.100000f, 14.200000f, 15.100000f, 14.100000f);
        path_0.cubicTo(15.100000f, 14.000001f, 15.200000f, 13.900001f, 15.300000f, 13.900001f);
        path_0.close();
        path_0.moveTo(15.300000f, 14.600000f);
        path_0.cubicTo(15.400001f, 14.600000f, 15.500000f, 14.700001f, 15.500000f, 14.800000f);
        path_0.cubicTo(15.500000f, 14.900001f, 15.400000f, 15.000000f, 15.300000f, 15.000000f);
        path_0.cubicTo(15.200000f, 15.000000f, 15.100000f, 14.900000f, 15.100000f, 14.800000f);
        path_0.cubicTo(15.100000f, 14.700001f, 15.200000f, 14.600000f, 15.300000f, 14.600000f);
        path_0.close();
        path_0.moveTo(15.300000f, 15.200000f);
        path_0.cubicTo(15.400001f, 15.200000f, 15.500000f, 15.300000f, 15.500000f, 15.400000f);
        path_0.cubicTo(15.500000f, 15.500000f, 15.400000f, 15.599999f, 15.300000f, 15.599999f);
        path_0.cubicTo(15.200000f, 15.599999f, 15.100000f, 15.499999f, 15.100000f, 15.400000f);
        path_0.cubicTo(15.100000f, 15.300000f, 15.200000f, 15.200000f, 15.300000f, 15.200000f);
        path_0.close();
        path_0.moveTo(15.300000f, 15.900001f);
        path_0.cubicTo(15.400001f, 15.900001f, 15.500000f, 16.000000f, 15.500000f, 16.100000f);
        path_0.cubicTo(15.500000f, 16.200001f, 15.400000f, 16.300001f, 15.300000f, 16.300001f);
        path_0.cubicTo(15.200000f, 16.300001f, 15.100000f, 16.200001f, 15.100000f, 16.100000f);
        path_0.cubicTo(15.100000f, 16.000000f, 15.200000f, 15.900001f, 15.300000f, 15.900001f);
        path_0.close();
        path_0.moveTo(15.300000f, 16.600000f);
        path_0.cubicTo(15.400001f, 16.600000f, 15.500000f, 16.700001f, 15.500000f, 16.800001f);
        path_0.cubicTo(15.500000f, 16.900002f, 15.400000f, 17.000002f, 15.300000f, 17.000002f);
        path_0.cubicTo(15.200000f, 17.000002f, 15.100000f, 16.900002f, 15.100000f, 16.800001f);
        path_0.cubicTo(15.100000f, 16.700001f, 15.200000f, 16.600000f, 15.300000f, 16.600000f);
        path_0.close();
        path_0.moveTo(15.300000f, 17.200001f);
        path_0.cubicTo(15.400001f, 17.200001f, 15.500000f, 17.300001f, 15.500000f, 17.400002f);
        path_0.cubicTo(15.500000f, 17.500002f, 15.400000f, 17.600002f, 15.300000f, 17.600002f);
        path_0.cubicTo(15.200000f, 17.600002f, 15.100000f, 17.500002f, 15.100000f, 17.400002f);
        path_0.cubicTo(15.100000f, 17.300001f, 15.200000f, 17.200001f, 15.300000f, 17.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 17.900000f);
        path_0.cubicTo(15.400001f, 17.900000f, 15.500000f, 18.000000f, 15.500000f, 18.100000f);
        path_0.cubicTo(15.500000f, 18.200001f, 15.400000f, 18.300001f, 15.300000f, 18.300001f);
        path_0.cubicTo(15.200000f, 18.300001f, 15.100000f, 18.200001f, 15.100000f, 18.100000f);
        path_0.cubicTo(15.100000f, 18.000000f, 15.200000f, 17.900000f, 15.300000f, 17.900000f);
        path_0.close();
        path_0.moveTo(15.300000f, 18.600000f);
        path_0.cubicTo(15.400001f, 18.600000f, 15.500000f, 18.700001f, 15.500000f, 18.800001f);
        path_0.cubicTo(15.500000f, 18.900002f, 15.400001f, 19.000000f, 15.300000f, 19.000000f);
        path_0.cubicTo(15.200000f, 19.000000f, 15.100000f, 18.900000f, 15.100000f, 18.799999f);
        path_0.cubicTo(15.100000f, 18.699999f, 15.200000f, 18.600000f, 15.300000f, 18.600000f);
        path_0.close();
        path_0.moveTo(15.300000f, 19.200001f);
        path_0.cubicTo(15.400001f, 19.200001f, 15.500000f, 19.300001f, 15.500000f, 19.400002f);
        path_0.cubicTo(15.500000f, 19.500002f, 15.400000f, 19.600002f, 15.300000f, 19.600002f);
        path_0.cubicTo(15.200000f, 19.600002f, 15.100000f, 19.500002f, 15.100000f, 19.400002f);
        path_0.cubicTo(15.100000f, 19.300001f, 15.200000f, 19.200001f, 15.300000f, 19.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 19.900000f);
        path_0.cubicTo(15.400001f, 19.900000f, 15.500000f, 20.000000f, 15.500000f, 20.100000f);
        path_0.cubicTo(15.500000f, 20.200001f, 15.400000f, 20.300001f, 15.300000f, 20.300001f);
        path_0.cubicTo(15.200000f, 20.300001f, 15.100000f, 20.200001f, 15.100000f, 20.100000f);
        path_0.cubicTo(15.100000f, 20.000000f, 15.200000f, 19.900000f, 15.300000f, 19.900000f);
        path_0.close();
        path_0.moveTo(15.300000f, 20.500000f);
        path_0.cubicTo(15.400001f, 20.500000f, 15.500000f, 20.600000f, 15.500000f, 20.700001f);
        path_0.cubicTo(15.500000f, 20.800001f, 15.400001f, 21.000000f, 15.300000f, 21.000000f);
        path_0.cubicTo(15.200000f, 21.000000f, 15.100000f, 20.900000f, 15.100000f, 20.799999f);
        path_0.cubicTo(15.100000f, 20.699999f, 15.200000f, 20.500000f, 15.300000f, 20.500000f);
        path_0.close();
        path_0.moveTo(15.300000f, 21.200001f);
        path_0.cubicTo(15.400001f, 21.200001f, 15.500000f, 21.300001f, 15.500000f, 21.400002f);
        path_0.cubicTo(15.500000f, 21.500002f, 15.400000f, 21.600002f, 15.300000f, 21.600002f);
        path_0.cubicTo(15.200000f, 21.600002f, 15.100000f, 21.500002f, 15.100000f, 21.400002f);
        path_0.cubicTo(15.100000f, 21.300001f, 15.200000f, 21.200001f, 15.300000f, 21.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 21.900000f);
        path_0.cubicTo(15.400001f, 21.900000f, 15.500000f, 22.000000f, 15.500000f, 22.100000f);
        path_0.cubicTo(15.500000f, 22.200001f, 15.400000f, 22.300001f, 15.300000f, 22.300001f);
        path_0.cubicTo(15.200000f, 22.300001f, 15.100000f, 22.200001f, 15.100000f, 22.100000f);
        path_0.cubicTo(15.100000f, 22.000000f, 15.200000f, 21.900000f, 15.300000f, 21.900000f);
        path_0.close();
        path_0.moveTo(15.300000f, 22.500000f);
        path_0.cubicTo(15.400001f, 22.500000f, 15.500000f, 22.600000f, 15.500000f, 22.700001f);
        path_0.cubicTo(15.500000f, 22.800001f, 15.400000f, 22.900002f, 15.300000f, 22.900002f);
        path_0.cubicTo(15.200000f, 22.900002f, 15.100000f, 22.800001f, 15.100000f, 22.700001f);
        path_0.cubicTo(15.100000f, 22.600000f, 15.200000f, 22.500000f, 15.300000f, 22.500000f);
        path_0.close();
        path_0.moveTo(15.300000f, 23.200001f);
        path_0.cubicTo(15.400001f, 23.200001f, 15.500000f, 23.300001f, 15.500000f, 23.400002f);
        path_0.cubicTo(15.500000f, 23.500002f, 15.400000f, 23.600002f, 15.300000f, 23.600002f);
        path_0.cubicTo(15.200000f, 23.600002f, 15.100000f, 23.500002f, 15.100000f, 23.400002f);
        path_0.cubicTo(15.100000f, 23.300001f, 15.200000f, 23.200001f, 15.300000f, 23.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 23.800001f);
        path_0.cubicTo(15.400001f, 23.800001f, 15.500000f, 23.900002f, 15.500000f, 24.000002f);
        path_0.cubicTo(15.500000f, 24.100002f, 15.400000f, 24.200003f, 15.300000f, 24.200003f);
        path_0.cubicTo(15.200000f, 24.200003f, 15.100000f, 24.100002f, 15.100000f, 24.000002f);
        path_0.cubicTo(15.100000f, 23.900002f, 15.200000f, 23.800001f, 15.300000f, 23.800001f);
        path_0.close();
        path_0.moveTo(15.300000f, 24.500000f);
        path_0.cubicTo(15.400001f, 24.500000f, 15.500000f, 24.600000f, 15.500000f, 24.700001f);
        path_0.cubicTo(15.500000f, 24.800001f, 15.400000f, 24.900002f, 15.300000f, 24.900002f);
        path_0.cubicTo(15.200000f, 24.900002f, 15.100000f, 24.800001f, 15.100000f, 24.700001f);
        path_0.cubicTo(15.100000f, 24.600000f, 15.200000f, 24.500000f, 15.300000f, 24.500000f);
        path_0.close();
        path_0.moveTo(15.300000f, 25.200001f);
        path_0.cubicTo(15.400001f, 25.200001f, 15.500000f, 25.300001f, 15.500000f, 25.400002f);
        path_0.cubicTo(15.500000f, 25.500002f, 15.400000f, 25.600002f, 15.300000f, 25.600002f);
        path_0.cubicTo(15.200000f, 25.600002f, 15.100000f, 25.500002f, 15.100000f, 25.400002f);
        path_0.cubicTo(15.100000f, 25.300001f, 15.200000f, 25.200001f, 15.300000f, 25.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 25.800001f);
        path_0.cubicTo(15.400001f, 25.800001f, 15.500000f, 25.900002f, 15.500000f, 26.000002f);
        path_0.cubicTo(15.500000f, 26.100002f, 15.400000f, 26.200003f, 15.300000f, 26.200003f);
        path_0.cubicTo(15.200000f, 26.200003f, 15.100000f, 26.100002f, 15.100000f, 26.000002f);
        path_0.cubicTo(15.100000f, 25.900000f, 15.200000f, 25.800001f, 15.300000f, 25.800001f);
        path_0.close();
        path_0.moveTo(15.300000f, 26.500000f);
        path_0.cubicTo(15.400001f, 26.500000f, 15.500000f, 26.600000f, 15.500000f, 26.700001f);
        path_0.cubicTo(15.500000f, 26.800001f, 15.400000f, 26.900002f, 15.300000f, 26.900002f);
        path_0.cubicTo(15.200000f, 26.900002f, 15.100000f, 26.800001f, 15.100000f, 26.700001f);
        path_0.cubicTo(15.100000f, 26.600000f, 15.200000f, 26.500000f, 15.300000f, 26.500000f);
        path_0.close();
        path_0.moveTo(15.300000f, 27.200001f);
        path_0.cubicTo(15.400001f, 27.200001f, 15.500000f, 27.300001f, 15.500000f, 27.400002f);
        path_0.cubicTo(15.500000f, 27.500002f, 15.400000f, 27.600002f, 15.300000f, 27.600002f);
        path_0.cubicTo(15.200000f, 27.600002f, 15.100000f, 27.500002f, 15.100000f, 27.400002f);
        path_0.cubicTo(15.100000f, 27.300001f, 15.200000f, 27.200001f, 15.300000f, 27.200001f);
        path_0.close();
        path_0.moveTo(15.300000f, 27.800001f);
        path_0.cubicTo(15.400001f, 27.800001f, 15.500000f, 27.900002f, 15.500000f, 28.000002f);
        path_0.cubicTo(15.500000f, 28.100002f, 15.400000f, 28.200003f, 15.300000f, 28.200003f);
        path_0.cubicTo(15.200000f, 28.200003f, 15.100000f, 28.100002f, 15.100000f, 28.000002f);
        path_0.cubicTo(15.100000f, 27.900002f, 15.200000f, 27.800001f, 15.300000f, 27.800001f);
        path_0.close();
        path_0.moveTo(15.300000f, 28.500000f);
        path_0.cubicTo(15.400001f, 28.500000f, 15.500000f, 28.600000f, 15.500000f, 28.700001f);
        path_0.cubicTo(15.500000f, 28.800001f, 15.400000f, 28.900002f, 15.300000f, 28.900002f);
        path_0.cubicTo(15.200000f, 28.900002f, 15.100000f, 28.800001f, 15.100000f, 28.700001f);
        path_0.cubicTo(15.100000f, 28.600000f, 15.200000f, 28.500000f, 15.300000f, 28.500000f);
        path_0.close();
        path_0.moveTo(14.600000f, 12.600000f);
        path_0.cubicTo(14.700001f, 12.600000f, 14.800000f, 12.700001f, 14.800000f, 12.800000f);
        path_0.cubicTo(14.800000f, 12.900000f, 14.700000f, 13.000000f, 14.600000f, 13.000000f);
        path_0.cubicTo(14.500000f, 13.000000f, 14.400001f, 12.900000f, 14.400001f, 12.800000f);
        path_0.cubicTo(14.400001f, 12.700001f, 14.500000f, 12.600000f, 14.600000f, 12.600000f);
        path_0.close();
        path_0.moveTo(14.600000f, 13.300000f);
        path_0.cubicTo(14.700001f, 13.300000f, 14.800000f, 13.400001f, 14.800000f, 13.500000f);
        path_0.cubicTo(14.800000f, 13.600000f, 14.700000f, 13.700000f, 14.600000f, 13.700000f);
        path_0.cubicTo(14.500000f, 13.700000f, 14.400001f, 13.599999f, 14.400001f, 13.500000f);
        path_0.cubicTo(14.400001f, 13.400001f, 14.500000f, 13.300000f, 14.600000f, 13.300000f);
        path_0.close();
        path_0.moveTo(14.600000f, 13.900001f);
        path_0.cubicTo(14.700001f, 13.900001f, 14.800000f, 14.000001f, 14.800000f, 14.100000f);
        path_0.cubicTo(14.800000f, 14.200000f, 14.700000f, 14.300000f, 14.600000f, 14.300000f);
        path_0.cubicTo(14.500000f, 14.300000f, 14.400001f, 14.200000f, 14.400001f, 14.100000f);
        path_0.cubicTo(14.400001f, 14.000001f, 14.500000f, 13.900001f, 14.600000f, 13.900001f);
        path_0.close();
        path_0.moveTo(14.600000f, 14.600000f);
        path_0.cubicTo(14.700001f, 14.600000f, 14.800000f, 14.700001f, 14.800000f, 14.800000f);
        path_0.cubicTo(14.800000f, 14.900001f, 14.700000f, 15.000000f, 14.600000f, 15.000000f);
        path_0.cubicTo(14.500000f, 15.000000f, 14.400001f, 14.900000f, 14.400001f, 14.800000f);
        path_0.cubicTo(14.400001f, 14.700001f, 14.500000f, 14.600000f, 14.600000f, 14.600000f);
        path_0.close();
        path_0.moveTo(14.600000f, 15.200000f);
        path_0.cubicTo(14.700001f, 15.200000f, 14.800000f, 15.300000f, 14.800000f, 15.400000f);
        path_0.cubicTo(14.800000f, 15.500000f, 14.700000f, 15.599999f, 14.600000f, 15.599999f);
        path_0.cubicTo(14.500000f, 15.599999f, 14.400001f, 15.499999f, 14.400001f, 15.400000f);
        path_0.cubicTo(14.400001f, 15.300000f, 14.500000f, 15.200000f, 14.600000f, 15.200000f);
        path_0.close();
        path_0.moveTo(14.600000f, 15.900001f);
        path_0.cubicTo(14.700001f, 15.900001f, 14.800000f, 16.000000f, 14.800000f, 16.100000f);
        path_0.cubicTo(14.800000f, 16.200001f, 14.700000f, 16.300001f, 14.600000f, 16.300001f);
        path_0.cubicTo(14.500000f, 16.300001f, 14.400001f, 16.200001f, 14.400001f, 16.100000f);
        path_0.cubicTo(14.400001f, 16.000000f, 14.500000f, 15.900001f, 14.600000f, 15.900001f);
        path_0.close();
        path_0.moveTo(14.600000f, 16.600000f);
        path_0.cubicTo(14.700001f, 16.600000f, 14.800000f, 16.700001f, 14.800000f, 16.800001f);
        path_0.cubicTo(14.800000f, 16.900002f, 14.700000f, 17.000002f, 14.600000f, 17.000002f);
        path_0.cubicTo(14.500000f, 17.000002f, 14.400001f, 16.900002f, 14.400001f, 16.800001f);
        path_0.cubicTo(14.400001f, 16.700001f, 14.500000f, 16.600000f, 14.600000f, 16.600000f);
        path_0.close();
        path_0.moveTo(14.600000f, 17.200001f);
        path_0.cubicTo(14.700001f, 17.200001f, 14.800000f, 17.300001f, 14.800000f, 17.400002f);
        path_0.cubicTo(14.800000f, 17.500002f, 14.700000f, 17.600002f, 14.600000f, 17.600002f);
        path_0.cubicTo(14.500000f, 17.600002f, 14.400001f, 17.500002f, 14.400001f, 17.400002f);
        path_0.cubicTo(14.400001f, 17.300001f, 14.500000f, 17.200001f, 14.600000f, 17.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 17.900000f);
        path_0.cubicTo(14.700001f, 17.900000f, 14.800000f, 18.000000f, 14.800000f, 18.100000f);
        path_0.cubicTo(14.800000f, 18.200001f, 14.700000f, 18.300001f, 14.600000f, 18.300001f);
        path_0.cubicTo(14.500000f, 18.300001f, 14.400001f, 18.200001f, 14.400001f, 18.100000f);
        path_0.cubicTo(14.400001f, 18.000000f, 14.500000f, 17.900000f, 14.600000f, 17.900000f);
        path_0.close();
        path_0.moveTo(14.600000f, 18.600000f);
        path_0.cubicTo(14.700001f, 18.600000f, 14.800000f, 18.700001f, 14.800000f, 18.800001f);
        path_0.cubicTo(14.800000f, 18.900002f, 14.700000f, 19.000000f, 14.600000f, 19.000000f);
        path_0.cubicTo(14.500000f, 19.000000f, 14.400001f, 18.900000f, 14.400001f, 18.799999f);
        path_0.cubicTo(14.400001f, 18.699999f, 14.500000f, 18.600000f, 14.600000f, 18.600000f);
        path_0.close();
        path_0.moveTo(14.600000f, 19.200001f);
        path_0.cubicTo(14.700001f, 19.200001f, 14.800000f, 19.300001f, 14.800000f, 19.400002f);
        path_0.cubicTo(14.800000f, 19.500002f, 14.700000f, 19.600002f, 14.600000f, 19.600002f);
        path_0.cubicTo(14.500000f, 19.600002f, 14.400001f, 19.500002f, 14.400001f, 19.400002f);
        path_0.cubicTo(14.400001f, 19.300001f, 14.500000f, 19.200001f, 14.600000f, 19.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 19.900000f);
        path_0.cubicTo(14.700001f, 19.900000f, 14.800000f, 20.000000f, 14.800000f, 20.100000f);
        path_0.cubicTo(14.800000f, 20.200001f, 14.700000f, 20.300001f, 14.600000f, 20.300001f);
        path_0.cubicTo(14.500000f, 20.300001f, 14.400001f, 20.200001f, 14.400001f, 20.100000f);
        path_0.cubicTo(14.400001f, 20.000000f, 14.500000f, 19.900000f, 14.600000f, 19.900000f);
        path_0.close();
        path_0.moveTo(14.600000f, 20.500000f);
        path_0.cubicTo(14.700001f, 20.500000f, 14.800000f, 20.600000f, 14.800000f, 20.700001f);
        path_0.cubicTo(14.800000f, 20.800001f, 14.700000f, 21.000000f, 14.600000f, 21.000000f);
        path_0.cubicTo(14.500000f, 21.000000f, 14.400001f, 20.900000f, 14.400001f, 20.799999f);
        path_0.cubicTo(14.400001f, 20.699999f, 14.500000f, 20.500000f, 14.600000f, 20.500000f);
        path_0.close();
        path_0.moveTo(14.600000f, 21.200001f);
        path_0.cubicTo(14.700001f, 21.200001f, 14.800000f, 21.300001f, 14.800000f, 21.400002f);
        path_0.cubicTo(14.800000f, 21.500002f, 14.700000f, 21.600002f, 14.600000f, 21.600002f);
        path_0.cubicTo(14.500000f, 21.600002f, 14.400001f, 21.500002f, 14.400001f, 21.400002f);
        path_0.cubicTo(14.400001f, 21.300001f, 14.500000f, 21.200001f, 14.600000f, 21.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 21.900000f);
        path_0.cubicTo(14.700001f, 21.900000f, 14.800000f, 22.000000f, 14.800000f, 22.100000f);
        path_0.cubicTo(14.800000f, 22.200001f, 14.700000f, 22.300001f, 14.600000f, 22.300001f);
        path_0.cubicTo(14.500000f, 22.300001f, 14.400001f, 22.200001f, 14.400001f, 22.100000f);
        path_0.cubicTo(14.400001f, 22.000000f, 14.500000f, 21.900000f, 14.600000f, 21.900000f);
        path_0.close();
        path_0.moveTo(14.600000f, 22.500000f);
        path_0.cubicTo(14.700001f, 22.500000f, 14.800000f, 22.600000f, 14.800000f, 22.700001f);
        path_0.cubicTo(14.800000f, 22.800001f, 14.700000f, 22.900002f, 14.600000f, 22.900002f);
        path_0.cubicTo(14.500000f, 22.900002f, 14.400001f, 22.800001f, 14.400001f, 22.700001f);
        path_0.cubicTo(14.400001f, 22.600000f, 14.500000f, 22.500000f, 14.600000f, 22.500000f);
        path_0.close();
        path_0.moveTo(14.600000f, 23.200001f);
        path_0.cubicTo(14.700001f, 23.200001f, 14.800000f, 23.300001f, 14.800000f, 23.400002f);
        path_0.cubicTo(14.800000f, 23.500002f, 14.700000f, 23.600002f, 14.600000f, 23.600002f);
        path_0.cubicTo(14.500000f, 23.600002f, 14.400001f, 23.500002f, 14.400001f, 23.400002f);
        path_0.cubicTo(14.400001f, 23.300001f, 14.500000f, 23.200001f, 14.600000f, 23.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 23.800001f);
        path_0.cubicTo(14.700001f, 23.800001f, 14.800000f, 23.900002f, 14.800000f, 24.000002f);
        path_0.cubicTo(14.800000f, 24.100002f, 14.700000f, 24.200003f, 14.600000f, 24.200003f);
        path_0.cubicTo(14.500000f, 24.200003f, 14.400001f, 24.100002f, 14.400001f, 24.000002f);
        path_0.cubicTo(14.400001f, 23.900002f, 14.500000f, 23.800001f, 14.600000f, 23.800001f);
        path_0.close();
        path_0.moveTo(14.600000f, 24.500000f);
        path_0.cubicTo(14.700001f, 24.500000f, 14.800000f, 24.600000f, 14.800000f, 24.700001f);
        path_0.cubicTo(14.800000f, 24.800001f, 14.700000f, 24.900002f, 14.600000f, 24.900002f);
        path_0.cubicTo(14.500000f, 24.900002f, 14.400001f, 24.800001f, 14.400001f, 24.700001f);
        path_0.cubicTo(14.400001f, 24.600000f, 14.500000f, 24.500000f, 14.600000f, 24.500000f);
        path_0.close();
        path_0.moveTo(14.600000f, 25.200001f);
        path_0.cubicTo(14.700001f, 25.200001f, 14.800000f, 25.300001f, 14.800000f, 25.400002f);
        path_0.cubicTo(14.800000f, 25.500002f, 14.700000f, 25.600002f, 14.600000f, 25.600002f);
        path_0.cubicTo(14.500000f, 25.600002f, 14.400001f, 25.500002f, 14.400001f, 25.400002f);
        path_0.cubicTo(14.400001f, 25.300001f, 14.500000f, 25.200001f, 14.600000f, 25.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 25.800001f);
        path_0.cubicTo(14.700001f, 25.800001f, 14.800000f, 25.900002f, 14.800000f, 26.000002f);
        path_0.cubicTo(14.800000f, 26.100002f, 14.700000f, 26.200003f, 14.600000f, 26.200003f);
        path_0.cubicTo(14.500000f, 26.200003f, 14.400001f, 26.100002f, 14.400001f, 26.000002f);
        path_0.cubicTo(14.400001f, 25.900000f, 14.500000f, 25.800001f, 14.600000f, 25.800001f);
        path_0.close();
        path_0.moveTo(14.600000f, 26.500000f);
        path_0.cubicTo(14.700001f, 26.500000f, 14.800000f, 26.600000f, 14.800000f, 26.700001f);
        path_0.cubicTo(14.800000f, 26.800001f, 14.700000f, 26.900002f, 14.600000f, 26.900002f);
        path_0.cubicTo(14.500000f, 26.900002f, 14.400001f, 26.800001f, 14.400001f, 26.700001f);
        path_0.cubicTo(14.400001f, 26.600000f, 14.500000f, 26.500000f, 14.600000f, 26.500000f);
        path_0.close();
        path_0.moveTo(14.600000f, 27.200001f);
        path_0.cubicTo(14.700001f, 27.200001f, 14.800000f, 27.300001f, 14.800000f, 27.400002f);
        path_0.cubicTo(14.800000f, 27.500002f, 14.700000f, 27.600002f, 14.600000f, 27.600002f);
        path_0.cubicTo(14.500000f, 27.600002f, 14.400001f, 27.500002f, 14.400001f, 27.400002f);
        path_0.cubicTo(14.400001f, 27.300001f, 14.500000f, 27.200001f, 14.600000f, 27.200001f);
        path_0.close();
        path_0.moveTo(14.600000f, 27.800001f);
        path_0.cubicTo(14.700001f, 27.800001f, 14.800000f, 27.900002f, 14.800000f, 28.000002f);
        path_0.cubicTo(14.800000f, 28.100002f, 14.700000f, 28.200003f, 14.600000f, 28.200003f);
        path_0.cubicTo(14.500000f, 28.200003f, 14.400001f, 28.100002f, 14.400001f, 28.000002f);
        path_0.cubicTo(14.400001f, 27.900002f, 14.500000f, 27.800001f, 14.600000f, 27.800001f);
        path_0.close();
        path_0.moveTo(14.400001f, 28.700001f);
        path_0.cubicTo(14.400001f, 28.600000f, 14.500001f, 28.500000f, 14.600000f, 28.500000f);
        path_0.cubicTo(14.700001f, 28.500000f, 14.800000f, 28.600000f, 14.800000f, 28.700001f);
        path_0.cubicTo(14.800000f, 28.800001f, 14.700000f, 28.900002f, 14.600000f, 28.900002f);
        path_0.cubicTo(14.500000f, 28.900000f, 14.400001f, 28.800001f, 14.400001f, 28.700001f);
        path_0.close();
        path_0.moveTo(20.900000f, 31.000000f);
        path_0.cubicTo(20.900000f, 31.299999f, 20.900000f, 31.600000f, 20.799999f, 31.799999f);
        path_0.cubicTo(20.500000f, 33.099998f, 20.099998f, 34.399998f, 19.699999f, 35.700001f);
        path_0.cubicTo(18.999998f, 38.000000f, 18.299999f, 40.299999f, 17.499998f, 42.600002f);
        path_0.cubicTo(17.099998f, 44.000004f, 16.899998f, 45.500004f, 16.899998f, 46.900002f);
        path_0.cubicTo(16.799997f, 50.000000f, 16.799997f, 53.000000f, 16.699997f, 56.100002f);
        path_0.cubicTo(16.699997f, 56.600002f, 16.499996f, 56.900002f, 16.099997f, 57.100002f);
        path_0.cubicTo(16.099997f, 57.100002f, 15.999996f, 57.200001f, 15.899997f, 57.200001f);
        path_0.cubicTo(15.799996f, 57.200001f, 15.699997f, 57.200001f, 15.599997f, 57.200001f);
        path_0.cubicTo(15.099997f, 57.299999f, 14.799996f, 57.000000f, 14.499996f, 56.600002f);
        path_0.cubicTo(14.499996f, 56.600002f, 14.499996f, 56.500004f, 14.499996f, 56.400002f);
        path_0.cubicTo(14.499996f, 54.000000f, 14.499996f, 51.600002f, 14.499996f, 49.200001f);
        path_0.cubicTo(14.499996f, 47.299999f, 14.499996f, 45.500000f, 14.599997f, 43.600002f);
        path_0.cubicTo(14.599997f, 43.600002f, 14.599997f, 43.600002f, 14.599997f, 43.600002f);
        path_0.cubicTo(14.599997f, 42.200001f, 14.599997f, 40.900002f, 14.599997f, 39.500004f);
        path_0.cubicTo(14.599997f, 37.000004f, 14.599997f, 34.500004f, 14.699997f, 32.000004f);
        path_0.cubicTo(14.699997f, 31.600004f, 14.699997f, 31.300003f, 14.699997f, 30.900003f);
        path_0.cubicTo(14.699997f, 30.400003f, 15.099997f, 29.900003f, 15.599997f, 29.900003f);
        path_0.cubicTo(16.199997f, 29.900003f, 16.699997f, 29.900003f, 17.299997f, 29.900003f);
        path_0.cubicTo(18.099997f, 29.900003f, 18.899998f, 29.900003f, 19.699997f, 29.900003f);
        path_0.cubicTo(20.500000f, 29.900000f, 21.000000f, 30.400000f, 20.900000f, 31.000000f);
        path_0.close();
        path_0.moveTo(20.700001f, 28.200001f);
        path_0.cubicTo(20.600000f, 28.200001f, 20.500000f, 28.100000f, 20.500000f, 28.000000f);
        path_0.cubicTo(20.500000f, 27.900000f, 20.600000f, 27.799999f, 20.700001f, 27.799999f);
        path_0.cubicTo(20.800001f, 27.799999f, 20.900002f, 27.900000f, 20.900002f, 28.000000f);
        path_0.cubicTo(20.900000f, 28.100000f, 20.900000f, 28.200001f, 20.700001f, 28.200001f);
        path_0.close();
        path_0.moveTo(20.700001f, 27.600000f);
        path_0.cubicTo(20.600000f, 27.600000f, 20.500000f, 27.500000f, 20.500000f, 27.400000f);
        path_0.cubicTo(20.500000f, 27.299999f, 20.600000f, 27.199999f, 20.700001f, 27.199999f);
        path_0.cubicTo(20.800001f, 27.199999f, 20.900002f, 27.299999f, 20.900002f, 27.400000f);
        path_0.cubicTo(20.900002f, 27.500000f, 20.900000f, 27.600000f, 20.700001f, 27.600000f);
        path_0.close();
        path_0.moveTo(20.700001f, 26.900000f);
        path_0.cubicTo(20.600000f, 26.900000f, 20.500000f, 26.799999f, 20.500000f, 26.699999f);
        path_0.cubicTo(20.500000f, 26.599998f, 20.600000f, 26.499998f, 20.700001f, 26.499998f);
        path_0.cubicTo(20.800001f, 26.499998f, 20.900002f, 26.599998f, 20.900002f, 26.699999f);
        path_0.cubicTo(20.900002f, 26.799999f, 20.900000f, 26.900000f, 20.700001f, 26.900000f);
        path_0.close();
        path_0.moveTo(20.700001f, 26.300001f);
        path_0.cubicTo(20.600000f, 26.300001f, 20.500000f, 26.200001f, 20.500000f, 26.100000f);
        path_0.cubicTo(20.500000f, 26.000000f, 20.600000f, 25.900000f, 20.700001f, 25.900000f);
        path_0.cubicTo(20.800001f, 25.900000f, 20.900002f, 26.000000f, 20.900002f, 26.100000f);
        path_0.cubicTo(20.900000f, 26.200001f, 20.900000f, 26.300001f, 20.700001f, 26.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 25.600000f);
        path_0.cubicTo(20.600000f, 25.600000f, 20.500000f, 25.500000f, 20.500000f, 25.400000f);
        path_0.cubicTo(20.500000f, 25.299999f, 20.600000f, 25.199999f, 20.700001f, 25.199999f);
        path_0.cubicTo(20.800001f, 25.199999f, 20.900002f, 25.299999f, 20.900002f, 25.400000f);
        path_0.cubicTo(20.900000f, 25.500000f, 20.900000f, 25.600000f, 20.700001f, 25.600000f);
        path_0.close();
        path_0.moveTo(20.700001f, 24.900000f);
        path_0.cubicTo(20.600000f, 24.900000f, 20.500000f, 24.799999f, 20.500000f, 24.699999f);
        path_0.cubicTo(20.500000f, 24.599998f, 20.600000f, 24.499998f, 20.700001f, 24.499998f);
        path_0.cubicTo(20.800001f, 24.499998f, 20.900002f, 24.599998f, 20.900002f, 24.699999f);
        path_0.cubicTo(20.900000f, 24.800001f, 20.900000f, 24.900000f, 20.700001f, 24.900000f);
        path_0.close();
        path_0.moveTo(20.700001f, 24.300001f);
        path_0.cubicTo(20.600000f, 24.300001f, 20.500000f, 24.200001f, 20.500000f, 24.100000f);
        path_0.cubicTo(20.500000f, 24.000000f, 20.600000f, 23.900000f, 20.700001f, 23.900000f);
        path_0.cubicTo(20.800001f, 23.900000f, 20.900002f, 24.000000f, 20.900002f, 24.100000f);
        path_0.cubicTo(20.900002f, 24.200001f, 20.900000f, 24.300001f, 20.700001f, 24.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 23.600000f);
        path_0.cubicTo(20.600000f, 23.600000f, 20.500000f, 23.500000f, 20.500000f, 23.400000f);
        path_0.cubicTo(20.500000f, 23.299999f, 20.600000f, 23.199999f, 20.700001f, 23.199999f);
        path_0.cubicTo(20.800001f, 23.199999f, 20.900002f, 23.299999f, 20.900002f, 23.400000f);
        path_0.cubicTo(20.900000f, 23.500000f, 20.900000f, 23.600000f, 20.700001f, 23.600000f);
        path_0.close();
        path_0.moveTo(20.700001f, 22.900000f);
        path_0.cubicTo(20.600000f, 22.900000f, 20.500000f, 22.799999f, 20.500000f, 22.699999f);
        path_0.cubicTo(20.500000f, 22.599998f, 20.600000f, 22.499998f, 20.700001f, 22.499998f);
        path_0.cubicTo(20.800001f, 22.499998f, 20.900002f, 22.599998f, 20.900002f, 22.699999f);
        path_0.cubicTo(20.900000f, 22.900000f, 20.900000f, 22.900000f, 20.700001f, 22.900000f);
        path_0.close();
        path_0.moveTo(20.700001f, 22.300001f);
        path_0.cubicTo(20.600000f, 22.300001f, 20.500000f, 22.200001f, 20.500000f, 22.100000f);
        path_0.cubicTo(20.500000f, 22.000000f, 20.600000f, 21.900000f, 20.700001f, 21.900000f);
        path_0.cubicTo(20.800001f, 21.900000f, 20.900002f, 22.000000f, 20.900002f, 22.100000f);
        path_0.cubicTo(20.900000f, 22.200001f, 20.900000f, 22.300001f, 20.700001f, 22.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 21.600000f);
        path_0.cubicTo(20.600000f, 21.600000f, 20.500000f, 21.500000f, 20.500000f, 21.400000f);
        path_0.cubicTo(20.500000f, 21.299999f, 20.600000f, 21.199999f, 20.700001f, 21.199999f);
        path_0.cubicTo(20.800001f, 21.199999f, 20.900002f, 21.299999f, 20.900002f, 21.400000f);
        path_0.cubicTo(20.900002f, 21.500000f, 20.900000f, 21.600000f, 20.700001f, 21.600000f);
        path_0.close();
        path_0.moveTo(20.700001f, 21.000000f);
        path_0.cubicTo(20.600000f, 21.000000f, 20.500000f, 20.900000f, 20.500000f, 20.799999f);
        path_0.cubicTo(20.500000f, 20.699999f, 20.600000f, 20.599998f, 20.700001f, 20.599998f);
        path_0.cubicTo(20.800001f, 20.599998f, 20.900002f, 20.699999f, 20.900002f, 20.799999f);
        path_0.cubicTo(20.900002f, 20.900000f, 20.900000f, 21.000000f, 20.700001f, 21.000000f);
        path_0.close();
        path_0.moveTo(20.700001f, 20.300001f);
        path_0.cubicTo(20.600000f, 20.300001f, 20.500000f, 20.200001f, 20.500000f, 20.100000f);
        path_0.cubicTo(20.500000f, 20.000000f, 20.600000f, 19.900000f, 20.700001f, 19.900000f);
        path_0.cubicTo(20.800001f, 19.900000f, 20.900002f, 20.000000f, 20.900002f, 20.100000f);
        path_0.cubicTo(20.900000f, 20.200001f, 20.900000f, 20.300001f, 20.700001f, 20.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 19.600000f);
        path_0.cubicTo(20.600000f, 19.600000f, 20.500000f, 19.500000f, 20.500000f, 19.400000f);
        path_0.cubicTo(20.500000f, 19.299999f, 20.600000f, 19.199999f, 20.700001f, 19.199999f);
        path_0.cubicTo(20.800001f, 19.199999f, 20.900002f, 19.299999f, 20.900002f, 19.400000f);
        path_0.cubicTo(20.900000f, 19.500000f, 20.900000f, 19.600000f, 20.700001f, 19.600000f);
        path_0.close();
        path_0.moveTo(20.700001f, 19.000000f);
        path_0.cubicTo(20.600000f, 19.000000f, 20.500000f, 18.900000f, 20.500000f, 18.799999f);
        path_0.cubicTo(20.500000f, 18.699999f, 20.600000f, 18.599998f, 20.700001f, 18.599998f);
        path_0.cubicTo(20.800001f, 18.599998f, 20.900002f, 18.699999f, 20.900002f, 18.799999f);
        path_0.cubicTo(20.900002f, 18.900000f, 20.900000f, 19.000000f, 20.700001f, 19.000000f);
        path_0.close();
        path_0.moveTo(20.700001f, 18.300001f);
        path_0.cubicTo(20.600000f, 18.300001f, 20.500000f, 18.200001f, 20.500000f, 18.100000f);
        path_0.cubicTo(20.500000f, 18.000000f, 20.600000f, 17.900000f, 20.700001f, 17.900000f);
        path_0.cubicTo(20.800001f, 17.900000f, 20.900002f, 18.000000f, 20.900002f, 18.100000f);
        path_0.cubicTo(20.900002f, 18.200001f, 20.900000f, 18.300001f, 20.700001f, 18.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 17.700001f);
        path_0.cubicTo(20.600000f, 17.700001f, 20.500000f, 17.600000f, 20.500000f, 17.500000f);
        path_0.cubicTo(20.500000f, 17.400000f, 20.600000f, 17.299999f, 20.700001f, 17.299999f);
        path_0.cubicTo(20.800001f, 17.299999f, 20.900002f, 17.400000f, 20.900002f, 17.500000f);
        path_0.cubicTo(20.900000f, 17.600000f, 20.900000f, 17.700001f, 20.700001f, 17.700001f);
        path_0.close();
        path_0.moveTo(20.700001f, 17.000000f);
        path_0.cubicTo(20.600000f, 17.000000f, 20.500000f, 16.900000f, 20.500000f, 16.799999f);
        path_0.cubicTo(20.500000f, 16.699999f, 20.600000f, 16.599998f, 20.700001f, 16.599998f);
        path_0.cubicTo(20.800001f, 16.599998f, 20.900002f, 16.699999f, 20.900002f, 16.799999f);
        path_0.cubicTo(20.900000f, 16.900000f, 20.900000f, 17.000000f, 20.700001f, 17.000000f);
        path_0.close();
        path_0.moveTo(20.700001f, 16.300001f);
        path_0.cubicTo(20.600000f, 16.300001f, 20.500000f, 16.200001f, 20.500000f, 16.100000f);
        path_0.cubicTo(20.500000f, 16.000000f, 20.600000f, 15.900001f, 20.700001f, 15.900001f);
        path_0.cubicTo(20.800001f, 15.900001f, 20.900002f, 16.000000f, 20.900002f, 16.100000f);
        path_0.cubicTo(20.900000f, 16.200001f, 20.900000f, 16.300001f, 20.700001f, 16.300001f);
        path_0.close();
        path_0.moveTo(20.700001f, 15.700000f);
        path_0.cubicTo(20.600000f, 15.700000f, 20.500000f, 15.599999f, 20.500000f, 15.500000f);
        path_0.cubicTo(20.500000f, 15.400000f, 20.600000f, 15.300000f, 20.700001f, 15.300000f);
        path_0.cubicTo(20.800001f, 15.300000f, 20.900002f, 15.400001f, 20.900002f, 15.500000f);
        path_0.cubicTo(20.900000f, 15.600000f, 20.900000f, 15.700000f, 20.700001f, 15.700000f);
        path_0.close();
        path_0.moveTo(20.700001f, 15.000000f);
        path_0.cubicTo(20.600000f, 15.000000f, 20.500000f, 14.900000f, 20.500000f, 14.800000f);
        path_0.cubicTo(20.500000f, 14.700000f, 20.600000f, 14.600000f, 20.700001f, 14.600000f);
        path_0.cubicTo(20.800001f, 14.600000f, 20.900002f, 14.700001f, 20.900002f, 14.800000f);
        path_0.cubicTo(20.900000f, 14.900001f, 20.900000f, 15.000000f, 20.700001f, 15.000000f);
        path_0.close();
        path_0.moveTo(20.700001f, 14.300000f);
        path_0.cubicTo(20.600000f, 14.300000f, 20.500000f, 14.200000f, 20.500000f, 14.100000f);
        path_0.cubicTo(20.500000f, 14.000001f, 20.600000f, 13.900001f, 20.700001f, 13.900001f);
        path_0.cubicTo(20.800001f, 13.900001f, 20.900002f, 14.000001f, 20.900002f, 14.100000f);
        path_0.cubicTo(20.900002f, 14.200000f, 20.900000f, 14.300000f, 20.700001f, 14.300000f);
        path_0.close();
        path_0.moveTo(20.700001f, 13.700000f);
        path_0.cubicTo(20.600000f, 13.700000f, 20.500000f, 13.599999f, 20.500000f, 13.500000f);
        path_0.cubicTo(20.500000f, 13.400000f, 20.600000f, 13.300000f, 20.700001f, 13.300000f);
        path_0.cubicTo(20.800001f, 13.300000f, 20.900002f, 13.400001f, 20.900002f, 13.500000f);
        path_0.cubicTo(20.900000f, 13.600000f, 20.900000f, 13.700000f, 20.700001f, 13.700000f);
        path_0.close();




        path_0.setFillType(Path.FillType.WINDING);
        canvas.drawPath(path_0, paint_2);
        canvas.restore();
        canvas.restore();
    }

}
